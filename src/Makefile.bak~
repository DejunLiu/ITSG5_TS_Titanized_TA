# This Makefile was generated by the Makefile Generator
# of the TTCN-3 Test Executor version CRL 113 200/5 R1A
# for Aitor Ruano i Miralles (aitorkun@ubuntu) on Thu Jun  4 10:34:13 2015

# Copyright Ericsson Telecom AB 2000-2014

# The following make commands are available:
# - make, make all      Builds the executable test suite.
# - make archive        Archives all source files.
# - make check          Checks the semantics of TTCN-3 and ASN.1 modules.
# - make clean          Removes all generated files.
# - make compile        Translates TTCN-3 and ASN.1 modules to C++.
# - make dep            Creates/updates dependency list.
# - make executable     Builds the executable test suite.
# - make library        Builds the library archive.
# - make objects        Builds the object files without linking the executable.
#
# Set these variables...
#

# The path of your TTCN-3 Test Executor installation:
# Uncomment this line to override the environment variable.
# TTCN3_DIR = 

# Your platform: (SOLARIS, SOLARIS8, LINUX, FREEBSD or WIN32)
PLATFORM = LINUX

# Your C++ compiler:
# (if you change the platform, you may need to change the compiler)
CXX = g++ 

# Flags for the C++ preprocessor (and makedepend as well):
CPPFLAGS = -D$(PLATFORM) -I$(TTCN3_DIR)/include

# Flags for the C++ compiler:
CXXFLAGS = -Wall  
CXXFLAGS += -fpermissive

# Flags for the linker:
LDFLAGS = -lpthread

ifeq ($(PLATFORM), WIN32)
# Silence linker warnings.
LDFLAGS += -Wl,--enable-auto-import,--enable-runtime-pseudo-reloc
endif

# Utility to create library files
AR = ar
ARFLAGS = 

# Flags for the TTCN-3 and ASN.1 compiler:
COMPILER_FLAGS = -L -w -M

# Execution mode: (either ttcn3 or ttcn3-parallel)
TTCN3_LIB = ttcn3-parallel

# The path of your libxml2 installation:
# If you do not have your own one, leave it unchanged.
XMLDIR = $(TTCN3_DIR)

# Directory to store the archived source files:
# Note: you can set any directory except ./archive
ARCHIVE_DIR = backup

#
# You may change these variables. Add your files if necessary...
#

# TTCN-3 modules of this project:
TTCN3_MODULES = ASN_EncDec.ttcn TTCN_EncDec.ttcn General_Types.ttcn LibCommon_AbstractData.ttcn LibCommon_BasicTypesAndValues.ttcn LibCommon_DataStrings.ttcn LibCommon_Sync.ttcn LibCommon_TextStrings.ttcn LibCommon_Time.ttcn LibCommon_VerdictControl.ttcn LibItsCommon_Functions.ttcn LibItsCommon_Pixits.ttcn LibItsCommon_TestSystem.ttcn LibItsCommon_TypesAndValues.ttcn LibItsExternal_TypesAndValues.ttcn LibItsBtp_Functions.ttcn LibItsBtp_Pixits.ttcn LibItsBtp_Templates.ttcn LibItsBtp_TestSystem.ttcn LibItsBtp_TypesAndValues.ttcn ItsBtp_TestCases.ttcn ItsBtp_TestControl.ttcn LibItsDenm_Functions.ttcn LibItsDenm_Pics.ttcn LibItsDenm_Templates.ttcn LibItsDenm_TestSystem.ttcn LibItsDenm_TypesAndValues.ttcn ItsDenm_TestCases.ttcn ItsDenm_TestControl.ttcn ItsDenm_TpFunctions.ttcn LibItsCam_Functions.ttcn LibItsCam_Pics.ttcn LibItsCam_Templates.ttcn LibItsCam_TestSystem.ttcn LibItsCam_TypesAndValues.ttcn ItsCam_TestCases.ttcn ItsCam_TestControl.ttcn ItsCam_TpFunctions.ttcn LibItsIpv6OverGeoNetworking_Functions.ttcn LibItsIpv6OverGeoNetworking_Pics.ttcn LibItsIpv6OverGeoNetworking_Pixits.ttcn LibItsIpv6OverGeoNetworking_Templates.ttcn LibItsIpv6OverGeoNetworking_TestSystem.ttcn LibItsIpv6OverGeoNetworking_TypesAndValues.ttcn  LibItsGeoNetworking_Functions.ttcn LibItsGeoNetworking_Pics.ttcn LibItsGeoNetworking_Pixits.ttcn LibItsGeoNetworking_Templates.ttcn LibItsGeoNetworking_TestSystem.ttcn LibItsGeoNetworking_TypesAndValues.ttcn ItsGeoNetworking_TestCases.ttcn ItsGeoNetworking_TestControl.ttcn ItsGeoNetworking_TpFunctions.ttcn LibItsSecurity_Pics.ttcn LibItsSecurity_Pixits.ttcn LibItsSecurity_Templates.ttcn LibItsSecurity_TestSystem.ttcn LibItsSecurity_TypesAndValues.ttcn TRI_interface_Types.ttcn

# ASN.1 modules of this project:
ASN1_MODULES = ITS_Container.asn CAM.asn DENM.asn

# C++ source & header files generated from the TTCN-3 & ASN.1 modules of
# this project:
GENERATED_SOURCES = ASN_EncDec.cc TTCN_EncDec.cc General_Types.cc LibCommon_AbstractData.cc LibCommon_BasicTypesAndValues.cc LibCommon_DataStrings.cc LibCommon_Sync.cc LibCommon_TextStrings.cc LibCommon_Time.cc LibCommon_VerdictControl.cc LibItsCommon_Functions.cc LibItsCommon_Pixits.cc LibItsCommon_TestSystem.cc LibItsCommon_TypesAndValues.cc LibItsExternal_TypesAndValues.cc LibItsBtp_Functions.cc LibItsBtp_Pixits.cc LibItsBtp_Templates.cc LibItsBtp_TestSystem.cc LibItsBtp_TypesAndValues.cc ItsBtp_TestCases.cc ItsBtp_TestControl.cc LibItsDenm_Functions.cc LibItsDenm_Pics.cc LibItsDenm_Templates.cc LibItsDenm_TestSystem.cc LibItsDenm_TypesAndValues.cc ItsDenm_TestCases.cc ItsDenm_TestControl.cc ItsDenm_TpFunctions.cc LibItsCam_Functions.cc LibItsCam_Pics.cc LibItsCam_Templates.cc LibItsCam_TestSystem.cc LibItsCam_TypesAndValues.cc ItsCam_TestCases.cc ItsCam_TestControl.cc ItsCam_TpFunctions.cc LibItsIpv6OverGeoNetworking_Functions.cc LibItsIpv6OverGeoNetworking_Pics.cc LibItsIpv6OverGeoNetworking_Pixits.cc LibItsIpv6OverGeoNetworking_Templates.cc LibItsIpv6OverGeoNetworking_TestSystem.cc LibItsIpv6OverGeoNetworking_TypesAndValues.cc LibItsGeoNetworking_Functions.cc LibItsGeoNetworking_Pics.cc LibItsGeoNetworking_Pixits.cc LibItsGeoNetworking_Templates.cc LibItsGeoNetworking_TestSystem.cc LibItsGeoNetworking_TypesAndValues.cc ItsGeoNetworking_TestCases.cc ItsGeoNetworking_TestControl.cc ItsGeoNetworking_TpFunctions.cc LibItsSecurity_Pics.cc LibItsSecurity_Pixits.cc LibItsSecurity_Templates.cc LibItsSecurity_TestSystem.cc LibItsSecurity_TypesAndValues.cc ITS_Container.cc CAM_PDU_Descriptions.cc DENM_PDU_Descriptions.cc TRI_interface_Types.cc
GENERATED_HEADERS = ASN_EncDec.hh TTCN_EncDec.hh General_Types.hh LibCommon_AbstractData.hh LibCommon_BasicTypesAndValues.hh LibCommon_DataStrings.hh LibCommon_Sync.hh LibCommon_TextStrings.hh LibCommon_Time.hh LibCommon_VerdictControl.hh LibItsCommon_Functions.hh LibItsCommon_Pixits.hh LibItsCommon_TestSystem.hh LibItsCommon_TypesAndValues.hh LibItsExternal_TypesAndValues.hh LibItsBtp_Functions.hh LibItsBtp_Pixits.hh LibItsBtp_Templates.hh LibItsBtp_TestSystem.hh LibItsBtp_TypesAndValues.hh ItsBtp_TestCases.hh ItsBtp_TestControl.hh LibItsDenm_Functions.hh LibItsDenm_Pics.hh LibItsDenm_Templates.hh LibItsDenm_TestSystem.hh LibItsDenm_TypesAndValues.hh ItsDenm_TestCases.hh ItsDenm_TestControl.hh ItsDenm_TpFunctions.hh LibItsCam_Functions.hh LibItsCam_Pics.hh LibItsCam_Templates.hh LibItsCam_TestSystem.hh LibItsCam_TypesAndValues.hh ItsCam_TestCases.hh ItsCam_TestControl.hh ItsCam_TpFunctions.hh LibItsIpv6OverGeoNetworking_Functions.hh LibItsIpv6OverGeoNetworking_Pics.hh LibItsIpv6OverGeoNetworking_Pixits.hh LibItsIpv6OverGeoNetworking_Templates.hh LibItsIpv6OverGeoNetworking_TestSystem.hh LibItsIpv6OverGeoNetworking_TypesAndValues.hh LibItsGeoNetworking_Functions.hh LibItsGeoNetworking_Pics.hh LibItsGeoNetworking_Pixits.hh LibItsGeoNetworking_Templates.hh LibItsGeoNetworking_TestSystem.hh LibItsGeoNetworking_TypesAndValues.hh ItsGeoNetworking_TestCases.hh ItsGeoNetworking_TestControl.hh ItsGeoNetworking_TpFunctions.hh LibItsSecurity_Pics.hh LibItsSecurity_Pixits.hh LibItsSecurity_Templates.hh LibItsSecurity_TestSystem.hh LibItsSecurity_TypesAndValues.hh ITS_Container.hh CAM_PDU_Descriptions.hh DENM_PDU_Descriptions.hh TRI_interface_Types.hh

# C/C++ Source & header files of Test Ports, external functions and
# other modules:
USER_SOURCES = External_Functions.cc BtpPort.cc TRI_mapper_API.cc UpperTesterPort.cc UpperTesterCAMPort.cc UpperTesterGNPort.cc
USER_HEADERS = BtpPort.hh TRI_mapper_API.hh UpperTesterPort.hh UpperTesterCAMPort.hh UpperTesterGNPort.hh

# Object files of this project that are needed for the executable test suite:
OBJECTS = $(GENERATED_OBJECTS) $(USER_OBJECTS)

GENERATED_OBJECTS = ASN_EncDec.o TTCN_EncDec.o General_Types.o LibCommon_AbstractData.o LibCommon_BasicTypesAndValues.o LibCommon_DataStrings.o LibCommon_Sync.o LibCommon_TextStrings.o LibCommon_Time.o LibCommon_VerdictControl.o LibItsCommon_Functions.o LibItsCommon_Pixits.o LibItsCommon_TestSystem.o LibItsCommon_TypesAndValues.o LibItsExternal_TypesAndValues.o LibItsBtp_Functions.o LibItsBtp_Pixits.o LibItsBtp_Templates.o LibItsBtp_TestSystem.o LibItsBtp_TypesAndValues.o ItsBtp_TestCases.o ItsBtp_TestControl.o LibItsDenm_Functions.o LibItsDenm_Pics.o LibItsDenm_Templates.o LibItsDenm_TestSystem.o LibItsDenm_TypesAndValues.o ItsDenm_TestCases.o ItsDenm_TestControl.o ItsDenm_TpFunctions.o LibItsCam_Functions.o LibItsCam_Pics.o LibItsCam_Templates.o LibItsCam_TestSystem.o LibItsCam_TypesAndValues.o ItsCam_TestCases.o ItsCam_TestControl.o ItsCam_TpFunctions.o LibItsIpv6OverGeoNetworking_Functions.o LibItsIpv6OverGeoNetworking_Pics.o LibItsIpv6OverGeoNetworking_Pixits.o LibItsIpv6OverGeoNetworking_Templates.o LibItsIpv6OverGeoNetworking_TestSystem.o LibItsIpv6OverGeoNetworking_TypesAndValues.o LibItsGeoNetworking_Functions.o LibItsGeoNetworking_Pics.o LibItsGeoNetworking_Pixits.o LibItsGeoNetworking_Templates.o LibItsGeoNetworking_TestSystem.o LibItsGeoNetworking_TypesAndValues.o ItsGeoNetworking_TestCases.o ItsGeoNetworking_TestControl.o ItsGeoNetworking_TpFunctions.o LibItsSecurity_Pics.o LibItsSecurity_Pixits.o LibItsSecurity_Templates.o LibItsSecurity_TestSystem.o LibItsSecurity_TypesAndValues.o ITS_Container.o CAM_PDU_Descriptions.o DENM_PDU_Descriptions.o TRI_interface_Types.o

USER_OBJECTS = External_Functions.o BtpPort.o TRI_mapper_API.o UpperTesterPort.o UpperTesterCAMPort.o UpperTesterGNPort.o

# Other files of the project (Makefile, configuration files, etc.)
# that will be added to the archived source files:
OTHER_FILES = Makefile

# The name of the executable test suite:
EXECUTABLE = ITS_Exec


LIBRARY = lib$(EXECUTABLE).a

TARGET = $(EXECUTABLE)

#
# Do not modify these unless you know what you are doing...
# Platform specific additional libraries:
#
SOLARIS_LIBS = -lsocket -lnsl -lxml2
SOLARIS8_LIBS = -lsocket -lnsl -lxml2
LINUX_LIBS = -lxml2 -lpcap -lpthread
FREEBSD_LIBS = -lxml2
WIN32_LIBS = -lxml2

#
# Rules for building the executable...
#

all: $(TARGET) ;

executable: $(EXECUTABLE) ;

library: $(LIBRARY) ;

objects: $(OBJECTS) compile;

$(EXECUTABLE): $(OBJECTS)
	if $(CXX) $(LDFLAGS) -o $@ $(OBJECTS) \
	-L$(TTCN3_DIR)/lib -l$(TTCN3_LIB) \
	-L$(OPENSSL_DIR)/lib -lcrypto \
	-L$(XMLDIR)/lib $($(PLATFORM)_LIBS); \
	then : ; else $(TTCN3_DIR)/bin/titanver $(OBJECTS); exit 1; fi

$(LIBRARY): $(OBJECTS)
	$(AR) -r $(ARFLAGS) $(LIBRARY) $(OBJECTS)

.cc.o .c.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

$(GENERATED_SOURCES) $(GENERATED_HEADERS): compile
	@if [ ! -f $@ ]; then rm -f compile; $(MAKE) compile; fi

check: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler -s $(COMPILER_FLAGS) \
	$(TTCN3_MODULES) $(PREPROCESSED_TTCN3_MODULES) $(ASN1_MODULES)

compile: $(TTCN3_MODULES) $(ASN1_MODULES)
	$(TTCN3_DIR)/bin/compiler $(COMPILER_FLAGS) \
	$(TTCN3_MODULES) $(ASN1_MODULES) - $?
	touch $@

clean:
	-rm -f $(EXECUTABLE) $(LIBRARY) $(OBJECTS) $(GENERATED_HEADERS) \
	$(GENERATED_SOURCES) compile \
	tags *.log

dep: $(GENERATED_SOURCES) $(USER_SOURCES) ;
	makedepend $(CPPFLAGS) -DMAKEDEPEND_RUN $(GENERATED_SOURCES) $(USER_SOURCES)

archive:
	mkdir -p $(ARCHIVE_DIR)
	tar -cvhf - $(TTCN3_MODULES) $(ASN1_MODULES) \
	$(USER_HEADERS) $(USER_SOURCES) $(OTHER_FILES) \
	| gzip >$(ARCHIVE_DIR)/`basename $(TARGET) .exe`-`date '+%y%m%d-%H%M'`.tgz

diag:
	$(TTCN3_DIR)/bin/compiler -v 2>&1
	$(TTCN3_DIR)/bin/mctr_cli -v 2>&1
	$(CXX) -v 2>&1
	$(AR) -V 2>&1
	@echo TTCN3_DIR=$(TTCN3_DIR)
	@echo OPENSSL_DIR=$(OPENSSL_DIR)
	@echo XMLDIR=$(XMLDIR)
	@echo PLATFORM=$(PLATFORM)

#
# Add your rules here if necessary...
#

