// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "LibItsMapSpat_Templates.hh"

namespace LibItsMapSpat__Templates {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();

/* Literal string constants */

static const unsigned char os_0_octets[] = { 0, 0, 0, 0, 0, 0, 0, 0 };
static const OCTETSTRING os_0(8, os_0_octets);
static const unsigned char module_checksum[] = { 0x55, 0xd6, 0x12, 0x59, 0x4a, 0x95, 0xf1, 0xad, 0x8a, 0xc6, 0x8b, 0xad, 0x1f, 0x38, 0xd4, 0xd5 };

/* Global variable definitions */

static INTEGER const_ItsPduHeader__protocolVersion__currentVersion__;
const INTEGER& ItsPduHeader__protocolVersion__currentVersion__ = const_ItsPduHeader__protocolVersion__currentVersion__;
static INTEGER const_ItsPduHeader__messageID__spat__;
const INTEGER& ItsPduHeader__messageID__spat__ = const_ItsPduHeader__messageID__spat__;
static INTEGER const_ItsPduHeader__messageID__map__;
const INTEGER& ItsPduHeader__messageID__map__ = const_ItsPduHeader__messageID__map__;
static INTEGER_template template_mw__mapIndWithGnParameters_p__gnNextHeader_defval;
const INTEGER_template& mw__mapIndWithGnParameters_p__gnNextHeader_defval = template_mw__mapIndWithGnParameters_p__gnNextHeader_defval;
static INTEGER_template template_mw__mapIndWithGnParameters_p__gnHeaderType_defval;
const INTEGER_template& mw__mapIndWithGnParameters_p__gnHeaderType_defval = template_mw__mapIndWithGnParameters_p__gnHeaderType_defval;
static INTEGER_template template_mw__mapIndWithGnParameters_p__gnHeaderSubtype_defval;
const INTEGER_template& mw__mapIndWithGnParameters_p__gnHeaderSubtype_defval = template_mw__mapIndWithGnParameters_p__gnHeaderSubtype_defval;
static INTEGER_template template_mw__mapIndWithGnParameters_p__gnLifetime_defval;
const INTEGER_template& mw__mapIndWithGnParameters_p__gnLifetime_defval = template_mw__mapIndWithGnParameters_p__gnLifetime_defval;
static INTEGER_template template_mw__mapIndWithGnParameters_p__gnTrafficClass_defval;
const INTEGER_template& mw__mapIndWithGnParameters_p__gnTrafficClass_defval = template_mw__mapIndWithGnParameters_p__gnTrafficClass_defval;
static INTEGER_template template_mw__spatIndWithGnParameters_p__gnNextHeader_defval;
const INTEGER_template& mw__spatIndWithGnParameters_p__gnNextHeader_defval = template_mw__spatIndWithGnParameters_p__gnNextHeader_defval;
static INTEGER_template template_mw__spatIndWithGnParameters_p__gnHeaderType_defval;
const INTEGER_template& mw__spatIndWithGnParameters_p__gnHeaderType_defval = template_mw__spatIndWithGnParameters_p__gnHeaderType_defval;
static INTEGER_template template_mw__spatIndWithGnParameters_p__gnHeaderSubtype_defval;
const INTEGER_template& mw__spatIndWithGnParameters_p__gnHeaderSubtype_defval = template_mw__spatIndWithGnParameters_p__gnHeaderSubtype_defval;
static INTEGER_template template_mw__spatIndWithGnParameters_p__gnLifetime_defval;
const INTEGER_template& mw__spatIndWithGnParameters_p__gnLifetime_defval = template_mw__spatIndWithGnParameters_p__gnLifetime_defval;
static INTEGER_template template_mw__spatIndWithGnParameters_p__gnTrafficClass_defval;
const INTEGER_template& mw__spatIndWithGnParameters_p__gnTrafficClass_defval = template_mw__spatIndWithGnParameters_p__gnTrafficClass_defval;
static LibItsCommon__TypesAndValues::UtInitialize_template template_m__mapSpatInitialize;
const LibItsCommon__TypesAndValues::UtInitialize_template& m__mapSpatInitialize = template_m__mapSpatInitialize;
static ITS__Container::ItsPduHeader_template template_mw__mapPdu_p__itsPduHeader_defval;
const ITS__Container::ItsPduHeader_template& mw__mapPdu_p__itsPduHeader_defval = template_mw__mapPdu_p__itsPduHeader_defval;
static DSRC::MapData_template template_mw__mapPdu_p__map_defval;
const DSRC::MapData_template& mw__mapPdu_p__map_defval = template_mw__mapPdu_p__map_defval;
static ITS__Container::ItsPduHeader_template template_mw__spatPdu_p__itsPduHeader_defval;
const ITS__Container::ItsPduHeader_template& mw__spatPdu_p__itsPduHeader_defval = template_mw__spatPdu_p__itsPduHeader_defval;
static DSRC::SPAT_template template_mw__spatPdu_p__spat_defval;
const DSRC::SPAT_template& mw__spatPdu_p__spat_defval = template_mw__spatPdu_p__spat_defval;
static INTEGER_template template_m__itsPduHeader_p__stationID_defval;
const INTEGER_template& m__itsPduHeader_p__stationID_defval = template_m__itsPduHeader_p__stationID_defval;
static INTEGER_template template_m__itsPduHeader_p__protocolVersion_defval;
const INTEGER_template& m__itsPduHeader_p__protocolVersion_defval = template_m__itsPduHeader_p__protocolVersion_defval;
static INTEGER_template template_mw__itsPduHeader_p__stationID_defval;
const INTEGER_template& mw__itsPduHeader_p__stationID_defval = template_mw__itsPduHeader_p__stationID_defval;
static INTEGER_template template_mw__itsPduHeader_p__protocolVersion_defval;
const INTEGER_template& mw__itsPduHeader_p__protocolVersion_defval = template_mw__itsPduHeader_p__protocolVersion_defval;
static INTEGER_template template_mw__itsPduHeader_p__messageID_defval;
const INTEGER_template& mw__itsPduHeader_p__messageID_defval = template_mw__itsPduHeader_p__messageID_defval;
static INTEGER_template template_mw__itsPduHeaderMap_p__stationID_defval;
const INTEGER_template& mw__itsPduHeaderMap_p__stationID_defval = template_mw__itsPduHeaderMap_p__stationID_defval;
static INTEGER_template template_mw__itsPduHeaderMap_p__protocolVersion_defval;
const INTEGER_template& mw__itsPduHeaderMap_p__protocolVersion_defval = template_mw__itsPduHeaderMap_p__protocolVersion_defval;
static INTEGER_template template_mw__itsPduHeaderMap_p__messageID_defval;
const INTEGER_template& mw__itsPduHeaderMap_p__messageID_defval = template_mw__itsPduHeaderMap_p__messageID_defval;
static INTEGER_template template_mw__itsPduHeaderSpat_p__stationID_defval;
const INTEGER_template& mw__itsPduHeaderSpat_p__stationID_defval = template_mw__itsPduHeaderSpat_p__stationID_defval;
static INTEGER_template template_mw__itsPduHeaderSpat_p__protocolVersion_defval;
const INTEGER_template& mw__itsPduHeaderSpat_p__protocolVersion_defval = template_mw__itsPduHeaderSpat_p__protocolVersion_defval;
static INTEGER_template template_mw__itsPduHeaderSpat_p__messageID_defval;
const INTEGER_template& mw__itsPduHeaderSpat_p__messageID_defval = template_mw__itsPduHeaderSpat_p__messageID_defval;
static INTEGER_template template_mw__anyStationId;
const INTEGER_template& mw__anyStationId = template_mw__anyStationId;
static DSRC::MapData_template template_m__map;
const DSRC::MapData_template& m__map = template_m__map;
static DSRC::MapData_template template_mw__anyMap;
const DSRC::MapData_template& mw__anyMap = template_mw__anyMap;
static DSRC::MapData_template template_mw__mapSubId1;
const DSRC::MapData_template& mw__mapSubId1 = template_mw__mapSubId1;
static DSRC::MapData_template template_mw__mapNoMsgCrc;
const DSRC::MapData_template& mw__mapNoMsgCrc = template_mw__mapNoMsgCrc;
static DSRC::MapData_template template_mw__mapMsgCrcLast;
const DSRC::MapData_template& mw__mapMsgCrcLast = template_mw__mapMsgCrcLast;
static DSRC::MapData_template template_mw__mapNoLayerType;
const DSRC::MapData_template& mw__mapNoLayerType = template_mw__mapNoLayerType;
static DSRC::MapData_template template_mw__mapWellFormatted;
const DSRC::MapData_template& mw__mapWellFormatted = template_mw__mapWellFormatted;
static DSRC::SPAT_template template_m__spat;
const DSRC::SPAT_template& m__spat = template_m__spat;
static DSRC::IntersectionStateList_template template_m__intersections;
const DSRC::IntersectionStateList_template& m__intersections = template_m__intersections;
static DSRC::IntersectionState_template template_m__intersection;
const DSRC::IntersectionState_template& m__intersection = template_m__intersection;
static DSRC::IntersectionReferenceID_template template_m__intersectionReferenceID;
const DSRC::IntersectionReferenceID_template& m__intersectionReferenceID = template_m__intersectionReferenceID;
static DSRC::MovementList_template template_m__movements;
const DSRC::MovementList_template& m__movements = template_m__movements;
static DSRC::MovementState_template template_m__movement;
const DSRC::MovementState_template& m__movement = template_m__movement;
static DSRC::MovementEventList_template template_m__movementEventList;
const DSRC::MovementEventList_template& m__movementEventList = template_m__movementEventList;
static DSRC::MovementEvent_template template_m__movementEvent;
const DSRC::MovementEvent_template& m__movementEvent = template_m__movementEvent;
static DSRC::SPAT_template template_mw__anySpat;
const DSRC::SPAT_template& mw__anySpat = template_mw__anySpat;
static DSRC::SPAT_template template_mw__spatSubId1;
const DSRC::SPAT_template& mw__spatSubId1 = template_mw__spatSubId1;
static const size_t num_namespaces = 0;
TTCN_Module module_object("LibItsMapSpat_Templates", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

LibItsMapSpat__TestSystem::MapReq_template m__mapReq(const MAP__SPAT__ETSI::MAP__PDU_template& p__mapMsg)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 39, TTCN_Location::LOCATION_TEMPLATE, "m_mapReq");
LibItsMapSpat__TestSystem::MapReq_template ret_val;
ret_val.msgOut() = p__mapMsg;
return ret_val;
}

LibItsMapSpat__TestSystem::MapInd_template mw__mapInd(const LibItsMapSpat__TestSystem::MapMsg_template& p__mapMsg)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 49, TTCN_Location::LOCATION_TEMPLATE, "mw_mapInd");
LibItsMapSpat__TestSystem::MapInd_template ret_val;
ret_val.msgIn() = p__mapMsg;
ret_val.gnNextHeader() = ANY_OR_OMIT;
ret_val.gnHeaderType() = ANY_OR_OMIT;
ret_val.gnHeaderSubtype() = ANY_OR_OMIT;
ret_val.gnLifetime() = ANY_OR_OMIT;
ret_val.gnTrafficClass() = ANY_OR_OMIT;
ret_val.btpDestinationPort() = ANY_OR_OMIT;
ret_val.btpInfo() = ANY_OR_OMIT;
return ret_val;
}

LibItsMapSpat__TestSystem::MapInd_template mw__mapIndWithGnParameters(const LibItsMapSpat__TestSystem::MapMsg_template& p__mapMsg, const INTEGER_template& p__gnNextHeader, const INTEGER_template& p__gnHeaderType, const INTEGER_template& p__gnHeaderSubtype, const INTEGER_template& p__gnLifetime, const INTEGER_template& p__gnTrafficClass)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 71, TTCN_Location::LOCATION_TEMPLATE, "mw_mapIndWithGnParameters");
LibItsMapSpat__TestSystem::MapInd_template ret_val(mw__mapInd(p__mapMsg));
ret_val.gnNextHeader() = p__gnNextHeader;
ret_val.gnHeaderType() = p__gnHeaderType;
ret_val.gnHeaderSubtype() = p__gnHeaderSubtype;
ret_val.gnLifetime() = p__gnLifetime;
ret_val.gnTrafficClass() = p__gnTrafficClass;
return ret_val;
}

LibItsMapSpat__TestSystem::SpatReq_template m__spatReq(const MAP__SPAT__ETSI::SPAT__PDU_template& p__spatMsg)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 90, TTCN_Location::LOCATION_TEMPLATE, "m_spatReq");
LibItsMapSpat__TestSystem::SpatReq_template ret_val;
ret_val.msgOut() = p__spatMsg;
return ret_val;
}

LibItsMapSpat__TestSystem::SpatInd_template mw__spatInd(const LibItsMapSpat__TestSystem::SpatMsg_template& p__spatMsg)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 100, TTCN_Location::LOCATION_TEMPLATE, "mw_spatInd");
LibItsMapSpat__TestSystem::SpatInd_template ret_val;
ret_val.msgIn() = p__spatMsg;
ret_val.gnNextHeader() = ANY_OR_OMIT;
ret_val.gnHeaderType() = ANY_OR_OMIT;
ret_val.gnHeaderSubtype() = ANY_OR_OMIT;
ret_val.gnLifetime() = ANY_OR_OMIT;
ret_val.gnTrafficClass() = ANY_OR_OMIT;
ret_val.btpDestinationPort() = ANY_OR_OMIT;
ret_val.btpInfo() = ANY_OR_OMIT;
return ret_val;
}

LibItsMapSpat__TestSystem::SpatInd_template mw__spatIndWithGnParameters(const LibItsMapSpat__TestSystem::SpatMsg_template& p__spatMsg, const INTEGER_template& p__gnNextHeader, const INTEGER_template& p__gnHeaderType, const INTEGER_template& p__gnHeaderSubtype, const INTEGER_template& p__gnLifetime, const INTEGER_template& p__gnTrafficClass)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 122, TTCN_Location::LOCATION_TEMPLATE, "mw_spatIndWithGnParameters");
LibItsMapSpat__TestSystem::SpatInd_template ret_val(mw__spatInd(p__spatMsg));
ret_val.gnNextHeader() = p__gnNextHeader;
ret_val.gnHeaderType() = p__gnHeaderType;
ret_val.gnHeaderSubtype() = p__gnHeaderSubtype;
ret_val.gnLifetime() = p__gnLifetime;
ret_val.gnTrafficClass() = p__gnTrafficClass;
return ret_val;
}

LibItsMapSpat__TypesAndValues::UtMapSpatTrigger_template m__utTriggerEvent(const LibItsMapSpat__TypesAndValues::Event& p__event)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 152, TTCN_Location::LOCATION_TEMPLATE, "m_utTriggerEvent");
LibItsMapSpat__TypesAndValues::UtMapSpatTrigger_template ret_val;
ret_val.event() = p__event;
return ret_val;
}

MAP__SPAT__ETSI::MAP__PDU_template m__mapPdu(const DSRC::MapData_template& p__map)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 163, TTCN_Location::LOCATION_TEMPLATE, "m_mapPdu");
MAP__SPAT__ETSI::MAP__PDU_template ret_val;
ret_val.header() = m__itsPduHeader(m__itsPduHeader_p__stationID_defval, m__itsPduHeader_p__protocolVersion_defval, INTEGER_template(5));
ret_val.mapData() = p__map;
return ret_val;
}

MAP__SPAT__ETSI::SPAT__PDU_template m__spatPdu(const DSRC::SPAT_template& p__spat)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 174, TTCN_Location::LOCATION_TEMPLATE, "m_spatPdu");
MAP__SPAT__ETSI::SPAT__PDU_template ret_val;
ret_val.header() = m__itsPduHeader(m__itsPduHeader_p__stationID_defval, m__itsPduHeader_p__protocolVersion_defval, INTEGER_template(4));
ret_val.spatData() = p__spat;
return ret_val;
}

LibItsMapSpat__TestSystem::MapMsg_template mw__mapPdu(const ITS__Container::ItsPduHeader_template& p__itsPduHeader, const DSRC::MapData_template& p__map)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 186, TTCN_Location::LOCATION_TEMPLATE, "mw_mapPdu");
LibItsMapSpat__TestSystem::MapMsg_template ret_val;
{
MAP__SPAT__ETSI::MAP__PDU_template& tmp_0 = ret_val.msgMap();
tmp_0.header() = p__itsPduHeader;
tmp_0.mapData() = p__map;
}
ret_val.rawData() = ANY_VALUE;
return ret_val;
}

LibItsMapSpat__TestSystem::SpatMsg_template mw__spatPdu(const ITS__Container::ItsPduHeader_template& p__itsPduHeader, const DSRC::SPAT_template& p__spat)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 201, TTCN_Location::LOCATION_TEMPLATE, "mw_spatPdu");
LibItsMapSpat__TestSystem::SpatMsg_template ret_val;
{
MAP__SPAT__ETSI::SPAT__PDU_template& tmp_1 = ret_val.msgSpat();
tmp_1.header() = p__itsPduHeader;
tmp_1.spatData() = p__spat;
}
ret_val.rawData() = ANY_VALUE;
return ret_val;
}

ITS__Container::ItsPduHeader_template m__itsPduHeader(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 221, TTCN_Location::LOCATION_TEMPLATE, "m_itsPduHeader");
ITS__Container::ItsPduHeader_template ret_val;
ret_val.protocolVersion() = p__protocolVersion;
ret_val.messageID() = p__messageID;
ret_val.stationID() = p__stationID;
return ret_val;
}

ITS__Container::ItsPduHeader_template mw__itsPduHeader(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 237, TTCN_Location::LOCATION_TEMPLATE, "mw_itsPduHeader");
ITS__Container::ItsPduHeader_template ret_val;
ret_val.protocolVersion() = p__protocolVersion;
ret_val.messageID() = p__messageID;
ret_val.stationID() = p__stationID;
return ret_val;
}

ITS__Container::ItsPduHeader_template mw__itsPduHeaderMap(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 253, TTCN_Location::LOCATION_TEMPLATE, "mw_itsPduHeaderMap");
ITS__Container::ItsPduHeader_template ret_val;
ret_val.protocolVersion() = p__protocolVersion;
ret_val.messageID() = p__messageID;
ret_val.stationID() = p__stationID;
return ret_val;
}

ITS__Container::ItsPduHeader_template mw__itsPduHeaderSpat(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID)
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 269, TTCN_Location::LOCATION_TEMPLATE, "mw_itsPduHeaderSpat");
ITS__Container::ItsPduHeader_template ret_val;
ret_val.protocolVersion() = p__protocolVersion;
ret_val.messageID() = p__messageID;
ret_val.stationID() = p__stationID;
return ret_val;
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsMapSpat_Templates");
LibItsCommon__Functions::module_object.pre_init_module();
LibItsMapSpat__TestSystem::module_object.pre_init_module();
LibItsMapSpat__Pixits::module_object.pre_init_module();
current_location.update_lineno(29);
/* LibItsMapSpat_Templates.ttcn, line 29 */
const_ItsPduHeader__protocolVersion__currentVersion__ = 1;
current_location.update_lineno(30);
/* LibItsMapSpat_Templates.ttcn, line 30 */
const_ItsPduHeader__messageID__spat__ = 4;
current_location.update_lineno(31);
/* LibItsMapSpat_Templates.ttcn, line 31 */
const_ItsPduHeader__messageID__map__ = 5;
}

static void post_init_module()
{
TTCN_Location current_location("LibItsMapSpat_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsMapSpat_Templates");
LibItsCommon__Functions::module_object.post_init_module();
LibItsMapSpat__TestSystem::module_object.post_init_module();
LibItsMapSpat__Pixits::module_object.post_init_module();
template_mw__mapIndWithGnParameters_p__gnNextHeader_defval = ANY_OR_OMIT;
template_mw__mapIndWithGnParameters_p__gnHeaderType_defval = ANY_OR_OMIT;
template_mw__mapIndWithGnParameters_p__gnHeaderSubtype_defval = ANY_OR_OMIT;
template_mw__mapIndWithGnParameters_p__gnLifetime_defval = ANY_OR_OMIT;
template_mw__mapIndWithGnParameters_p__gnTrafficClass_defval = ANY_OR_OMIT;
template_mw__spatIndWithGnParameters_p__gnNextHeader_defval = ANY_OR_OMIT;
template_mw__spatIndWithGnParameters_p__gnHeaderType_defval = ANY_OR_OMIT;
template_mw__spatIndWithGnParameters_p__gnHeaderSubtype_defval = ANY_OR_OMIT;
template_mw__spatIndWithGnParameters_p__gnLifetime_defval = ANY_OR_OMIT;
template_mw__spatIndWithGnParameters_p__gnTrafficClass_defval = ANY_OR_OMIT;
current_location.update_lineno(145);
/* LibItsMapSpat_Templates.ttcn, line 145 */
template_m__mapSpatInitialize.hashedId8() = os_0;
template_mw__mapPdu_p__itsPduHeader_defval = ANY_VALUE;
template_mw__mapPdu_p__map_defval = ANY_VALUE;
template_mw__spatPdu_p__itsPduHeader_defval = ANY_VALUE;
template_mw__spatPdu_p__spat_defval = ANY_VALUE;
template_m__itsPduHeader_p__stationID_defval = LibItsCommon__Functions::f__getTsStationId();
template_m__itsPduHeader_p__protocolVersion_defval = 1;
template_mw__itsPduHeader_p__stationID_defval = ANY_VALUE;
template_mw__itsPduHeader_p__protocolVersion_defval = 1;
template_mw__itsPduHeader_p__messageID_defval = ANY_VALUE;
template_mw__itsPduHeaderMap_p__stationID_defval = ANY_VALUE;
template_mw__itsPduHeaderMap_p__protocolVersion_defval = 1;
template_mw__itsPduHeaderMap_p__messageID_defval = 5;
template_mw__itsPduHeaderSpat_p__stationID_defval = ANY_VALUE;
template_mw__itsPduHeaderSpat_p__protocolVersion_defval = 1;
template_mw__itsPduHeaderSpat_p__messageID_defval = 4;
current_location.update_lineno(282);
/* LibItsMapSpat_Templates.ttcn, line 282 */
template_mw__anyStationId = ANY_VALUE;
current_location.update_lineno(291);
/* LibItsMapSpat_Templates.ttcn, line 291 */
template_m__map.msgID() = DSRC::mapData__P;
template_m__map.msgSubID() = 1;
template_m__map.msgIssueRevision() = LibItsMapSpat__Pixits::PX__MSG__ISSUE__REVISION;
template_m__map.layerType() = OMIT_VALUE;
template_m__map.layerID() = OMIT_VALUE;
template_m__map.intersections() = OMIT_VALUE;
template_m__map.roadSegments() = OMIT_VALUE;
template_m__map.dataParameters() = OMIT_VALUE;
template_m__map.restrictionList() = OMIT_VALUE;
template_m__map.regional() = OMIT_VALUE;
template_m__map.crc() = OMIT_VALUE;
current_location.update_lineno(308);
/* LibItsMapSpat_Templates.ttcn, line 308 */
template_mw__anyMap.msgID() = DSRC::mapData__P;
template_mw__anyMap.msgSubID() = ANY_OR_OMIT;
template_mw__anyMap.msgIssueRevision() = ANY_VALUE;
template_mw__anyMap.layerType() = ANY_OR_OMIT;
template_mw__anyMap.layerID() = ANY_OR_OMIT;
template_mw__anyMap.intersections() = ANY_OR_OMIT;
template_mw__anyMap.roadSegments() = ANY_OR_OMIT;
template_mw__anyMap.dataParameters() = ANY_OR_OMIT;
template_mw__anyMap.restrictionList() = ANY_OR_OMIT;
template_mw__anyMap.regional() = ANY_OR_OMIT;
template_mw__anyMap.crc() = ANY_OR_OMIT;
current_location.update_lineno(325);
/* LibItsMapSpat_Templates.ttcn, line 325 */
template_mw__mapSubId1 = mw__anyMap;
template_mw__mapSubId1.msgSubID() = 1;
current_location.update_lineno(332);
/* LibItsMapSpat_Templates.ttcn, line 332 */
template_mw__mapNoMsgCrc = mw__anyMap;
template_mw__mapNoMsgCrc.crc() = OMIT_VALUE;
current_location.update_lineno(339);
/* LibItsMapSpat_Templates.ttcn, line 339 */
template_mw__mapMsgCrcLast = mw__anyMap;
template_mw__mapMsgCrcLast.crc() = ANY_VALUE;
current_location.update_lineno(346);
/* LibItsMapSpat_Templates.ttcn, line 346 */
template_mw__mapNoLayerType = mw__anyMap;
template_mw__mapNoLayerType.layerType() = OMIT_VALUE;
current_location.update_lineno(353);
/* LibItsMapSpat_Templates.ttcn, line 353 */
template_mw__mapWellFormatted = mw__anyMap;
template_mw__mapWellFormatted.msgSubID() = 1;
template_mw__mapWellFormatted.layerType() = OMIT_VALUE;
current_location.update_lineno(361);
/* LibItsMapSpat_Templates.ttcn, line 361 */
template_m__spat.msgID() = DSRC::signalPhaseAndTimingMessage__P;
template_m__spat.msgSubID() = 1;
template_m__spat.name() = OMIT_VALUE;
template_m__intersections.set_size(1);
template_m__intersection.name() = OMIT_VALUE;
template_m__intersectionReferenceID.region() = OMIT_VALUE;
template_m__intersectionReferenceID.id() = LibItsMapSpat__Pixits::PX__INTERSECTION__ID;
template_m__intersection.id() = m__intersectionReferenceID;
template_m__intersection.revision() = LibItsMapSpat__Pixits::PX__INTERSECTIONSTATE__REVISION;
template_m__intersection.status() = LibItsMapSpat__Pixits::PX__STATUS;
template_m__intersection.moy() = OMIT_VALUE;
template_m__intersection.timeStamp() = OMIT_VALUE;
template_m__intersection.enabledLanes() = OMIT_VALUE;
template_m__movements.set_size(1);
template_m__movement.movementName() = OMIT_VALUE;
template_m__movement.signalGroup() = LibItsMapSpat__Pixits::PX__SIGNAL__GROUP__ID;
template_m__movementEventList.set_size(1);
template_m__movementEvent.eventState() = DSRC::MovementPhaseState::stop__Then__Proceed;
template_m__movementEvent.timing() = OMIT_VALUE;
template_m__movementEvent.speeds() = OMIT_VALUE;
template_m__movementEvent.regional() = OMIT_VALUE;
template_m__movementEventList[0] = m__movementEvent;
template_m__movement.state__time__speed() = m__movementEventList;
template_m__movement.maneuverAssistList() = OMIT_VALUE;
template_m__movement.regional() = OMIT_VALUE;
template_m__movements[0] = m__movement;
template_m__intersection.states() = m__movements;
template_m__intersection.maneuverAssistList() = OMIT_VALUE;
template_m__intersection.priority() = OMIT_VALUE;
template_m__intersection.preempt() = OMIT_VALUE;
template_m__intersection.regional() = OMIT_VALUE;
template_m__intersections[0] = m__intersection;
template_m__spat.intersections() = m__intersections;
template_m__spat.regional() = OMIT_VALUE;
current_location.update_lineno(368);
/* LibItsMapSpat_Templates.ttcn, line 368 */
current_location.update_lineno(369);
/* LibItsMapSpat_Templates.ttcn, line 369 */
current_location.update_lineno(383);
/* LibItsMapSpat_Templates.ttcn, line 383 */
current_location.update_lineno(387);
/* LibItsMapSpat_Templates.ttcn, line 387 */
current_location.update_lineno(388);
/* LibItsMapSpat_Templates.ttcn, line 388 */
current_location.update_lineno(395);
/* LibItsMapSpat_Templates.ttcn, line 395 */
current_location.update_lineno(396);
/* LibItsMapSpat_Templates.ttcn, line 396 */
current_location.update_lineno(406);
/* LibItsMapSpat_Templates.ttcn, line 406 */
template_mw__anySpat.msgID() = DSRC::signalPhaseAndTimingMessage__P;
template_mw__anySpat.msgSubID() = ANY_OR_OMIT;
template_mw__anySpat.name() = ANY_OR_OMIT;
template_mw__anySpat.intersections() = ANY_VALUE;
template_mw__anySpat.regional() = ANY_OR_OMIT;
current_location.update_lineno(417);
/* LibItsMapSpat_Templates.ttcn, line 417 */
template_mw__spatSubId1 = mw__anySpat;
template_mw__spatSubId1.msgSubID() = 1;
}


} /* end of namespace */
