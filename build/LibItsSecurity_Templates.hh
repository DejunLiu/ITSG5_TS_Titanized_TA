// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef LibItsSecurity__Templates_HH
#define LibItsSecurity__Templates_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include "LibItsCommon_TypesAndValues.hh"
#include "LibItsSecurity_Pixits.hh"

#if TTCN3_VERSION != 50400
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace LibItsSecurity__Templates {

/* Function prototypes */

extern LibItsSecurity__TypesAndValues::EccPoint_template m__eccPointecdsa__nistp256__with__sha256__x__coordinate__only(const OCTETSTRING_template& p__x);
extern LibItsSecurity__TypesAndValues::EccPoint_template m__eccPointecdsa__nistp256__with__sha256__y__coordinate__only(const OCTETSTRING_template& p__x);
extern LibItsSecurity__TypesAndValues::EccPoint_template m__eccPointecdsa__nistp256__with__sha256__uncompressed(const OCTETSTRING_template& p__x, const OCTETSTRING_template& p__y);
extern LibItsSecurity__TypesAndValues::AesCcm_template m__aesccm(const LibItsSecurity__TypesAndValues::EccPoint_template& p__eccPoint);
extern LibItsSecurity__TypesAndValues::EncryptionParameters_template m__encryptionParameters__aes__128__ccm(const OCTETSTRING_template& p__nonce);
extern LibItsSecurity__TypesAndValues::PublicKey_template m__publicKey__eccPoint(const LibItsSecurity__TypesAndValues::EccPoint_template& p__eccPoint);
extern LibItsSecurity__TypesAndValues::PublicKey_template m__publicKey__aesccm(const LibItsSecurity__TypesAndValues::AesCcm_template& p__aesCcm);
extern LibItsSecurity__TypesAndValues::Signature_template m__signature(const LibItsSecurity__TypesAndValues::EcdsaSignature_template& p__ecdsaSignature);
extern LibItsSecurity__TypesAndValues::EcdsaSignature_template m__ecdsaSignature(const LibItsSecurity__TypesAndValues::EccPoint_template& p__r, const OCTETSTRING_template& p__s);
extern LibItsSecurity__TypesAndValues::SignerInfo_template m__signerInfo__digest(const OCTETSTRING_template& p__digest);
extern LibItsSecurity__TypesAndValues::SignerInfo_template m__signerInfo__certificate(const LibItsSecurity__TypesAndValues::Certificate_template& p__certificate);
extern LibItsSecurity__TypesAndValues::SignerInfo_template m__signerInfo__certificates(const LibItsSecurity__TypesAndValues::CertificateChain_template& p__certificates);
extern LibItsSecurity__TypesAndValues::Time64WithStandardDeviation_template m__time64WithStandardDeviation(const INTEGER_template& p__time, const INTEGER_template& p__log__std__dev);
extern LibItsSecurity__TypesAndValues::Duration_template m__duration__in__seconds(const INTEGER_template& p__duration);
extern LibItsSecurity__TypesAndValues::TwoDLocation_template m__twoDLocation(const INTEGER_template& p__latitude, const INTEGER_template& p__longitude);
extern LibItsSecurity__TypesAndValues::ThreeDLocation_template m__threeDLocation(const INTEGER_template& p__latitude, const INTEGER_template& p__longitude, const OCTETSTRING_template& p__elevation);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template m__geographicRegion__circle(const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__center, const INTEGER_template& p__radius);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template m__geographicRegion__rectangle(const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__northwest, const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__southeast);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template m__geographicRegion__polygonial(const LibItsSecurity__TypesAndValues::PolygonalRegion_template& p__polygonal__region);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template m__geographicRegion__identifiedRegion(const LibItsSecurity__TypesAndValues::IdentifiedRegion_template& p__id__region);
extern LibItsSecurity__TypesAndValues::EccPoint_template mw__eccPointecdsa__nistp256__with__sha256__x__coordinate__only(const OCTETSTRING_template& p__x);
extern LibItsSecurity__TypesAndValues::EccPoint_template mw__eccPointecdsa__nistp256__with__sha256__y0__coordinate__only(const OCTETSTRING_template& p__x);
extern LibItsSecurity__TypesAndValues::EccPoint_template mw__eccPointecdsa__nistp256__with__sha256__y1__coordinate__only(const OCTETSTRING_template& p__x);
extern LibItsSecurity__TypesAndValues::EccPoint_template mw__eccPointecdsa__nistp256__with__sha256__uncompressed(const OCTETSTRING_template& p__x, const OCTETSTRING_template& p__y);
extern LibItsSecurity__TypesAndValues::SignerInfo_template mw__signerInfo__digest(const OCTETSTRING_template& p__digest);
extern LibItsSecurity__TypesAndValues::SignerInfo_template mw__signerInfo__certificate(const LibItsSecurity__TypesAndValues::Certificate_template& p__certificate);
extern LibItsSecurity__TypesAndValues::SignerInfo_template mw__signerInfo__certificates(const LibItsSecurity__TypesAndValues::CertificateChain_template& p__certificates);
extern LibItsSecurity__TypesAndValues::Signature_template mw__signature(const LibItsSecurity__TypesAndValues::EcdsaSignature_template& p__ecdsaSignature);
extern LibItsSecurity__TypesAndValues::EcdsaSignature_template mw__ecdsaSignature(const LibItsSecurity__TypesAndValues::EccPoint_template& p__r, const OCTETSTRING_template& p__s);
extern LibItsSecurity__TypesAndValues::Time64WithStandardDeviation_template mw__time64WithStandardDeviation(const INTEGER_template& p__time, const INTEGER_template& p__log__std__dev);
extern LibItsSecurity__TypesAndValues::Duration_template mw__duration__in__seconds(const INTEGER_template& p__duration);
extern LibItsSecurity__TypesAndValues::TwoDLocation_template mw__twoDLocation(const INTEGER_template& p__latitude, const INTEGER_template& p__longitude);
extern LibItsSecurity__TypesAndValues::ThreeDLocation_template mw__threeDLocation(const INTEGER_template& p__latitude, const INTEGER_template& p__longitude, const OCTETSTRING_template& p__elevation);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template mw__geographicRegion__circle(const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__center, const INTEGER_template& p__radius);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template mw__geographicRegion__rectangular(const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__northwest, const LibItsSecurity__TypesAndValues::TwoDLocation_template& p__southeast);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template mw__geographicRegion__polygonal(const LibItsSecurity__TypesAndValues::PolygonalRegion_template& p__polygonal__region);
extern LibItsSecurity__TypesAndValues::GeographicRegion_template mw__geographicRegion__identified(const LibItsSecurity__TypesAndValues::IdentifiedRegion_template& p__id__region);
extern LibItsSecurity__TypesAndValues::SecPayload_template m__payload__signed__external(const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template m__securedMessage(const LibItsSecurity__TypesAndValues::HeaderFields_template& p__header__fields, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload__field, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer__fields);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template mdw__securedMessage(const LibItsSecurity__TypesAndValues::HeaderFields_template& p__header, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template mdw__securedMessage__CAMs__headers(const LibItsSecurity__TypesAndValues::HeaderField_template& p__header, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template mdw__securedMessage__CAMs(const LibItsSecurity__TypesAndValues::HeaderField_template& p__header, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template mdw__securedMessage__DENMs(const LibItsSecurity__TypesAndValues::HeaderField_template& p__header, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer);
extern LibItsSecurity__TypesAndValues::SecuredMessage_template mdw__securedMessage__Others(const LibItsSecurity__TypesAndValues::HeaderField_template& p__header, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload, const LibItsSecurity__TypesAndValues::TrailerFields_template& p__trailer);
extern LibItsSecurity__TypesAndValues::SecPayload_template m__payload__unsecured(const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::SecPayload_template m__payload__signed(const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::SecPayload_template m__payload__encrypted(const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::SecPayload_template m__payload__signed__and__encrypted(const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::SecPayload_template mw__payload(const LibItsSecurity__TypesAndValues::SecPayloadType_template& p__type, const OCTETSTRING_template& p__data);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__generation__time(const INTEGER_template& p__generation__time);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__generation__time__with__standard__deviation(const LibItsSecurity__TypesAndValues::Time64WithStandardDeviation_template& p__generation__time__with__standard__deviation);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__expiry__time(const INTEGER_template& p__expiry__time);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__generation__location(const LibItsSecurity__TypesAndValues::ThreeDLocation_template& p__generation__location);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__unrecognised__certificate(const OCTETSTRING_template& p__digest);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__unrecognised__certificates(const LibItsSecurity__TypesAndValues::HashedId3s_template& p__digests);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__its__aid(const INTEGER_template& p__its__aid);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__signer__info(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__recipient(const LibItsSecurity__TypesAndValues::RecipientInfo_template& p__recipient);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__multiple__recipients(const LibItsSecurity__TypesAndValues::RecipientInfos_template& p__recipients);
extern LibItsSecurity__TypesAndValues::HeaderField_template m__header__field__enc__params(const LibItsSecurity__TypesAndValues::EncryptionParameters_template& p__enc__params);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field(const LibItsSecurity__TypesAndValues::HeaderFieldType& p__headerType);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__generation__time(const INTEGER_template& p__generation__time);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__generation__time__with__standard__deviation(const LibItsSecurity__TypesAndValues::Time64WithStandardDeviation_template& p__generation__time__with__standard__deviation);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__expiry__time(const INTEGER_template& p__expiry__time);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__generation__location(const LibItsSecurity__TypesAndValues::ThreeDLocation_template& p__generation__location);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__multiple__digests(const LibItsSecurity__TypesAndValues::HashedId3s_template& p__digests);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__signer__info(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__signer__info__certificate(const LibItsSecurity__TypesAndValues::Certificate_template& p__cert);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__signer__info__digest(const OCTETSTRING_template& p__digest);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__signer__info__certificate__chain(const LibItsSecurity__TypesAndValues::CertificateChain_template& p__certs);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__multiple__recipients(const LibItsSecurity__TypesAndValues::RecipientInfos_template& p__recipients);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__enc__params(const LibItsSecurity__TypesAndValues::EncryptionParameters_template& p__enc__params);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__request__unrecognized__certificate(const LibItsSecurity__TypesAndValues::HashedId3s_template& p__digests);
extern LibItsSecurity__TypesAndValues::HeaderField_template mw__header__field__its__aid(const INTEGER_template& p__its__aid);
extern LibItsSecurity__TypesAndValues::TrailerField_template m__trailer__field__signature(const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::TrailerField_template mw__trailer__field__signature(const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::RecipientInfo_template m__recipientInfo__ecies__enc__key(const OCTETSTRING_template& p__cert__id, const LibItsSecurity__TypesAndValues::PublicKeyAlgorithm_template& p__pk__encryption, const LibItsSecurity__TypesAndValues::EciesEncryptedKey_template& p__enc__key);
extern LibItsSecurity__TypesAndValues::RecipientInfo_template m__recipientInfo__other__enc__key(const OCTETSTRING_template& p__cert__id, const LibItsSecurity__TypesAndValues::PublicKeyAlgorithm_template& p__pk__encryption, const OCTETSTRING_template& p__enc__key__other);
extern LibItsSecurity__TypesAndValues::RecipientInfo_template mw__recipientInfo__ecies__enc__key(const OCTETSTRING_template& p__cert__id, const LibItsSecurity__TypesAndValues::PublicKeyAlgorithm_template& p__pk__encryption, const LibItsSecurity__TypesAndValues::EciesEncryptedKey_template& p__enc__key);
extern LibItsSecurity__TypesAndValues::EciesEncryptedKey_template m__eciesEncryptedKey__aesccm(const LibItsSecurity__TypesAndValues::EccPoint_template& p__ecc__key, const OCTETSTRING_template& p__encrypted__key, const OCTETSTRING_template& p__authentication__tag);
extern LibItsSecurity__TypesAndValues::EciesEncryptedKey_template mw__eciesEncryptedKey__aesccm(const LibItsSecurity__TypesAndValues::EccPoint_template& p__ecc__key, const OCTETSTRING_template& p__encrypted__key, const OCTETSTRING_template& p__authentication__tag);
extern LibItsSecurity__TypesAndValues::Certificate_template m__certificate(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer__info, const LibItsSecurity__TypesAndValues::SubjectInfo_template& p__subject__info, const LibItsSecurity__TypesAndValues::SubjectAttributes_template& p__subject__attributes, const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& p__validity__restrictions, const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::SubjectInfo_template m__subject__info__root__ca(const OCTETSTRING_template& p__subject__name);
extern LibItsSecurity__TypesAndValues::SubjectInfo_template m__subject__info__authorization__authority(const OCTETSTRING_template& p__subject__name);
extern LibItsSecurity__TypesAndValues::SubjectInfo_template m__subject__info__revocation(const OCTETSTRING_template& p__subject__name);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__verification__key(const LibItsSecurity__TypesAndValues::PublicKey_template& p__key);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__encryption__key(const LibItsSecurity__TypesAndValues::PublicKey_template& p__key);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__reconstruction__value(const LibItsSecurity__TypesAndValues::EccPoint_template& p__rv);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__assurance__level(const LibItsSecurity__TypesAndValues::SubjectAssurance_template& p__assurance__level);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__its__aid__list(const LibItsSecurity__TypesAndValues::IntXs_template& p__its__aid__list);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template m__subject__attribute__its__aid__ssp__list(const LibItsSecurity__TypesAndValues::ItsAidSsps_template& p__its__aid__ssp__list);
extern LibItsSecurity__TypesAndValues::SubjectAssurance_template m__subjectAssurance(const BITSTRING_template& p__levels, const BITSTRING_template& p__confidence);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template m__validity__restriction__time__end(const INTEGER_template& p__end__validity);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template m__validity__restriction__time__start__and__end(const INTEGER_template& p__start__validity, const INTEGER_template& p__end__validity);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template m__validity__restriction__time__start__and__duration(const INTEGER_template& p__start__validity, const LibItsSecurity__TypesAndValues::Duration_template& p__duration);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template m__validity__restriction__region(const LibItsSecurity__TypesAndValues::GeographicRegion_template& p__region);
extern LibItsSecurity__TypesAndValues::Certificate_template mw__certificate(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer__info, const LibItsSecurity__TypesAndValues::SubjectInfo_template& p__subject__info, const LibItsSecurity__TypesAndValues::SubjectAttributes_template& p__subject__attributes, const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& p__validity__restrictions, const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::Certificate_template mw__aa__certificate(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer__info, const LibItsSecurity__TypesAndValues::SubjectAttributes_template& p__subject__attributes, const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& p__validity__restrictions, const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::Certificate_template mw__at__certificate(const LibItsSecurity__TypesAndValues::SignerInfo_template& p__signer__info, const LibItsSecurity__TypesAndValues::SubjectAttributes_template& p__subject__attributes, const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& p__validity__restrictions, const LibItsSecurity__TypesAndValues::Signature_template& p__signature);
extern LibItsSecurity__TypesAndValues::SubjectInfo_template mw__subject__info__root__ca(const OCTETSTRING_template& p__subject__name);
extern LibItsSecurity__TypesAndValues::SubjectInfo_template mw__subject__info__revocation(const OCTETSTRING_template& p__subject__name);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__verification__key(const LibItsSecurity__TypesAndValues::PublicKey_template& p__key);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__encryption__key(const LibItsSecurity__TypesAndValues::EccPoint_template& p__rv);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__assurance__level(const LibItsSecurity__TypesAndValues::SubjectAssurance_template& p__assurance__level);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__reconstruction__value(const LibItsSecurity__TypesAndValues::IntXs_template& p__its__aid__list);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__its__aid__list(const LibItsSecurity__TypesAndValues::IntXs_template& p__its__aid__list);
extern LibItsSecurity__TypesAndValues::SubjectAttribute_template mw__subject__attribute__its__aid__ssp__list(const LibItsSecurity__TypesAndValues::ItsAidSsps_template& p__its__aid__ssp__list);
extern LibItsSecurity__TypesAndValues::SubjectAssurance_template mw__subjectAssurance(const BITSTRING_template& p__levels, const BITSTRING_template& p__confidence);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template mw__validity__restriction__time__end(const INTEGER_template& p__end__validity);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template mw__validity__restriction__time__start__and__end(const INTEGER_template& p__start__validity, const INTEGER_template& p__end__validity);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template mw__validity__restriction__time__start__and__duration(const INTEGER_template& p__start__validity, const LibItsSecurity__TypesAndValues::Duration_template& p__duration);
extern LibItsSecurity__TypesAndValues::ValidityRestriction_template mw__validity__restriction__region(const LibItsSecurity__TypesAndValues::GeographicRegion_template& p__region);
extern LibItsSecurity__TypesAndValues::ToBeSignedSecuredMessage_template m__toBeSignedSecuredMessage(const LibItsSecurity__TypesAndValues::HeaderFields_template& p__header__fields, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload__field, const LibItsSecurity__TypesAndValues::TrailerFieldType_template& p__trailer__field__type);
extern LibItsSecurity__TypesAndValues::ToBeSignedSecuredMessage_template m__toBeSignedSecuredMessage__wrong__protocol(const LibItsSecurity__TypesAndValues::HeaderFields_template& p__header__fields, const LibItsSecurity__TypesAndValues::SecPayload_template& p__payload__field, const LibItsSecurity__TypesAndValues::TrailerFieldType_template& p__trailer__field__type, const INTEGER_template& p__protocol__version, const INTEGER_template& p__trailer__fieldsLength);
extern LibItsSecurity__TypesAndValues::ToBeSignedCertificate_template m__toBeSignedCertificate(const LibItsSecurity__TypesAndValues::Certificate_template& p__certificate);
extern LibItsSecurity__TypesAndValues::AcEnableSecurity_template m__enableSecurity(const CHARSTRING& p__certificateId);
extern LibItsCommon__TypesAndValues::UtInitialize_template m__secGnInitialize(const OCTETSTRING& p__hashedId8);

/* Global variable declarations */

extern const INTEGER& c__protocol__version;
extern const INTEGER& c__certificate__version;
extern const INTEGER& c__its__aid__CAM;
extern const INTEGER& c__its__aid__DENM;
extern const INTEGER& c__its__aid__Other;
extern const INTEGER& c__minLongitude;
extern const INTEGER& c__maxLongitude;
extern const INTEGER& c__minLatitude;
extern const INTEGER& c__maxLatitude;
extern const LibItsSecurity__TypesAndValues::RegionIdentifiers& c__iso3166Codes;
extern const LibItsSecurity__TypesAndValues::RegionIdentifiers& c__unStatsAdditionalCodes;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__publicKey__eccPoint__dummy;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__publicKey__aesccm__dummy;
extern const LibItsSecurity__TypesAndValues::Time64WithStandardDeviation_template& mw__time64WithStandardDeviation__dummy;
extern const LibItsSecurity__TypesAndValues::TwoDLocation_template& mw__twoDLocation__dummy;
extern const LibItsSecurity__TypesAndValues::ThreeDLocation_template& mdw__threeDLocation__dummy;
extern const LibItsSecurity__TypesAndValues::SignerInfo_template& m__signerInfo__self;
extern const LibItsSecurity__TypesAndValues::GeographicRegion_template& m__geographicRegion__nonce;
extern const OCTETSTRING_template& mw__eccPointecdsa__nistp256__with__sha256__x__coordinate__only_p__x_defval;
extern const OCTETSTRING_template& mw__eccPointecdsa__nistp256__with__sha256__y0__coordinate__only_p__x_defval;
extern const OCTETSTRING_template& mw__eccPointecdsa__nistp256__with__sha256__y1__coordinate__only_p__x_defval;
extern const OCTETSTRING_template& mw__eccPointecdsa__nistp256__with__sha256__uncompressed_p__x_defval;
extern const OCTETSTRING_template& mw__eccPointecdsa__nistp256__with__sha256__uncompressed_p__y_defval;
extern const OCTETSTRING_template& mw__signerInfo__digest_p__digest_defval;
extern const LibItsSecurity__TypesAndValues::Certificate_template& mw__signerInfo__certificate_p__certificate_defval;
extern const LibItsSecurity__TypesAndValues::CertificateChain_template& mw__signerInfo__certificates_p__certificates_defval;
extern const LibItsSecurity__TypesAndValues::EcdsaSignature_template& mw__signature_p__ecdsaSignature_defval;
extern const LibItsSecurity__TypesAndValues::EccPoint_template& mw__ecdsaSignature_p__r_defval;
extern const OCTETSTRING_template& mw__ecdsaSignature_p__s_defval;
extern const LibItsSecurity__TypesAndValues::TwoDLocation_template& mw__geographicRegion__circle_p__center_defval;
extern const INTEGER_template& mw__geographicRegion__circle_p__radius_defval;
extern const LibItsSecurity__TypesAndValues::TwoDLocation_template& mw__geographicRegion__rectangular_p__northwest_defval;
extern const LibItsSecurity__TypesAndValues::TwoDLocation_template& mw__geographicRegion__rectangular_p__southeast_defval;
extern const LibItsSecurity__TypesAndValues::PolygonalRegion_template& mw__geographicRegion__polygonal_p__polygonal__region_defval;
extern const LibItsSecurity__TypesAndValues::IdentifiedRegion_template& mw__geographicRegion__identified_p__id__region_defval;
extern const LibItsSecurity__TypesAndValues::GeographicRegion_template& mw__geographicRegion__none;
extern const LibItsSecurity__TypesAndValues::IdentifiedRegion_template& mw__identifiedRegion__iso3166__any;
extern const LibItsSecurity__TypesAndValues::IdentifiedRegion_template& mw__identifiedRegion__un__stats__any;
extern const OCTETSTRING_template& m__payload__signed__external_p__data_defval;
extern const LibItsSecurity__TypesAndValues::SecuredMessage_template& m__secureMessage__dummy;
extern const LibItsSecurity__TypesAndValues::SecuredMessage_template& mdw__securedMessage__dummy;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mw__unsecuredPayload__dummy;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mw__signedPayload__dummy;
extern const LibItsSecurity__TypesAndValues::EciesEncryptedKey_template& mw__eciesEncryptedKey__dummy;
extern const LibItsSecurity__TypesAndValues::HeaderFields_template& mdw__securedMessage_p__header_defval;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mdw__securedMessage_p__payload_defval;
extern const LibItsSecurity__TypesAndValues::TrailerFields_template& mdw__securedMessage_p__trailer_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mdw__securedMessage__CAMs__headers_p__header_defval;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mdw__securedMessage__CAMs__headers_p__payload_defval;
extern const LibItsSecurity__TypesAndValues::TrailerFields_template& mdw__securedMessage__CAMs__headers_p__trailer_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mdw__securedMessage__CAMs_p__header_defval;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mdw__securedMessage__CAMs_p__payload_defval;
extern const LibItsSecurity__TypesAndValues::TrailerFields_template& mdw__securedMessage__CAMs_p__trailer_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mdw__securedMessage__DENMs_p__header_defval;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mdw__securedMessage__DENMs_p__payload_defval;
extern const LibItsSecurity__TypesAndValues::TrailerFields_template& mdw__securedMessage__DENMs_p__trailer_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mdw__securedMessage__Others_p__header_defval;
extern const LibItsSecurity__TypesAndValues::SecPayload_template& mdw__securedMessage__Others_p__payload_defval;
extern const LibItsSecurity__TypesAndValues::TrailerFields_template& mdw__securedMessage__Others_p__trailer_defval;
extern const LibItsSecurity__TypesAndValues::SecPayloadType_template& mw__payload_p__type_defval;
extern const OCTETSTRING_template& mw__payload_p__data_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& m__header__field__its__aid__CAM;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& m__header__field__its__aid__DENM;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& m__header__field__its__aid__Other;
extern const INTEGER_template& mw__header__field__generation__time_p__generation__time_defval;
extern const LibItsSecurity__TypesAndValues::Certificate_template& mw__header__field__signer__info__certificate_p__cert_defval;
extern const OCTETSTRING_template& mw__header__field__signer__info__digest_p__digest_defval;
extern const LibItsSecurity__TypesAndValues::CertificateChain_template& mw__header__field__signer__info__certificate__chain_p__certs_defval;
extern const LibItsSecurity__TypesAndValues::HashedId3s_template& mw__header__field__request__unrecognized__certificate_p__digests_defval;
extern const INTEGER_template& mw__header__field__its__aid_p__its__aid_defval;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mw__header__field__its__aid__CAM;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mw__header__field__its__aid__DENM;
extern const LibItsSecurity__TypesAndValues::HeaderField_template& mw__header__field__its__aid__Other;
extern const LibItsSecurity__TypesAndValues::Signature_template& mw__trailer__field__signature_p__signature_defval;
extern const LibItsSecurity__TypesAndValues::Certificate_template& mw__certificate__dummy;
extern const LibItsSecurity__TypesAndValues::SubjectInfo_template& m__subject__info__authorization__ticket;
extern const LibItsSecurity__TypesAndValues::ValidityRestriction_template& m__validity__restriction__unknown;
extern const LibItsSecurity__TypesAndValues::SignerInfo_template& mw__certificate_p__signer__info_defval;
extern const LibItsSecurity__TypesAndValues::SubjectInfo_template& mw__certificate_p__subject__info_defval;
extern const LibItsSecurity__TypesAndValues::SubjectAttributes_template& mw__certificate_p__subject__attributes_defval;
extern const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& mw__certificate_p__validity__restrictions_defval;
extern const LibItsSecurity__TypesAndValues::Signature_template& mw__certificate_p__signature_defval;
extern const LibItsSecurity__TypesAndValues::SignerInfo_template& mw__aa__certificate_p__signer__info_defval;
extern const LibItsSecurity__TypesAndValues::SubjectAttributes_template& mw__aa__certificate_p__subject__attributes_defval;
extern const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& mw__aa__certificate_p__validity__restrictions_defval;
extern const LibItsSecurity__TypesAndValues::Signature_template& mw__aa__certificate_p__signature_defval;
extern const LibItsSecurity__TypesAndValues::SignerInfo_template& mw__at__certificate_p__signer__info_defval;
extern const LibItsSecurity__TypesAndValues::SubjectAttributes_template& mw__at__certificate_p__subject__attributes_defval;
extern const LibItsSecurity__TypesAndValues::ValidityRestrictions_template& mw__at__certificate_p__validity__restrictions_defval;
extern const LibItsSecurity__TypesAndValues::Signature_template& mw__at__certificate_p__signature_defval;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__subject__attribute__verification__key_p__key_defval;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__publicKey__eccPoint__compressed__lsb__y__0;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__publicKey__eccPoint__compressed__lsb__y__1;
extern const LibItsSecurity__TypesAndValues::PublicKey_template& mw__publicKey__eccPoint__uncompressed;
extern const LibItsSecurity__TypesAndValues::EccPoint_template& mw__subject__attribute__encryption__key_p__rv_defval;
extern const LibItsSecurity__TypesAndValues::SubjectAssurance_template& mw__subject__attribute__assurance__level_p__assurance__level_defval;
extern const LibItsSecurity__TypesAndValues::IntXs_template& mw__subject__attribute__reconstruction__value_p__its__aid__list_defval;
extern const LibItsSecurity__TypesAndValues::IntXs_template& mw__subject__attribute__its__aid__list_p__its__aid__list_defval;
extern const LibItsSecurity__TypesAndValues::ItsAidSsps_template& mw__subject__attribute__its__aid__ssp__list_p__its__aid__ssp__list_defval;
extern const INTEGER_template& mw__validity__restriction__time__end_p__end__validity_defval;
extern const INTEGER_template& mw__validity__restriction__time__start__and__end_p__start__validity_defval;
extern const INTEGER_template& mw__validity__restriction__time__start__and__end_p__end__validity_defval;
extern const INTEGER_template& mw__validity__restriction__time__start__and__duration_p__start__validity_defval;
extern const LibItsSecurity__TypesAndValues::Duration_template& mw__validity__restriction__time__start__and__duration_p__duration_defval;
extern const LibItsSecurity__TypesAndValues::ValidityRestriction_template& mw__validity__restriction__any__valid__region;
extern const LibItsSecurity__TypesAndValues::GeographicRegion_template& mw__validity__restriction__region_p__region_defval;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspTest;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& mw__sspTest;
extern const LibItsSecurity__TypesAndValues::SspCAM_template& m__sspCAMContainer__sign__all;
extern const LibItsSecurity__TypesAndValues::SspCAM_template& m__sspCAMContainer__vehicle;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspCAM__sign__all;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspCAM__vehicle;
extern const LibItsSecurity__TypesAndValues::SspCAM_template& mw__sspCAMContainer__dummy;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& mw__sspCAM__dummy;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& m__sspDENMContainer__sign__all;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& m__sspDENMContainer__vehicle;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& m__sspDENMContainer__roadSideUnit;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspDENM__sign__all;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspDENM__vehicle;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& m__sspDENM__roadSideUnit;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& mw__sspDENMContainer__dummy;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& mw__sspDENMContainer__vehicle;
extern const LibItsSecurity__TypesAndValues::SspDENM_template& mw__sspDENMContainer__roadSideUnit;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& mw__sspDENM__dummy;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& mw__sspDENM__vehicle;
extern const LibItsSecurity__TypesAndValues::ServiceSpecificPermissions_template& mw__sspDENM__roadSideUnit;
extern const INTEGER_template& m__toBeSignedSecuredMessage__wrong__protocol_p__protocol__version_defval;
extern const INTEGER_template& m__toBeSignedSecuredMessage__wrong__protocol_p__trailer__fieldsLength_defval;
extern const LibItsSecurity__TypesAndValues::AcDisableSecurity_template& m__disableSecurity;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
