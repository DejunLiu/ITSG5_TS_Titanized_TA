// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef LibItsMapSpat__Templates_HH
#define LibItsMapSpat__Templates_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include "LibItsCommon_Functions.hh"
#include "LibItsMapSpat_TestSystem.hh"
#include "LibItsMapSpat_Pixits.hh"

#if TTCN3_VERSION != 50400
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace LibItsMapSpat__Templates {

/* Function prototypes */

extern LibItsMapSpat__TestSystem::MapReq_template m__mapReq(const MAP__SPAT__ETSI::MAP__PDU_template& p__mapMsg);
extern LibItsMapSpat__TestSystem::MapInd_template mw__mapInd(const LibItsMapSpat__TestSystem::MapMsg_template& p__mapMsg);
extern LibItsMapSpat__TestSystem::MapInd_template mw__mapIndWithGnParameters(const LibItsMapSpat__TestSystem::MapMsg_template& p__mapMsg, const INTEGER_template& p__gnNextHeader, const INTEGER_template& p__gnHeaderType, const INTEGER_template& p__gnHeaderSubtype, const INTEGER_template& p__gnLifetime, const INTEGER_template& p__gnTrafficClass);
extern LibItsMapSpat__TestSystem::SpatReq_template m__spatReq(const MAP__SPAT__ETSI::SPAT__PDU_template& p__spatMsg);
extern LibItsMapSpat__TestSystem::SpatInd_template mw__spatInd(const LibItsMapSpat__TestSystem::SpatMsg_template& p__spatMsg);
extern LibItsMapSpat__TestSystem::SpatInd_template mw__spatIndWithGnParameters(const LibItsMapSpat__TestSystem::SpatMsg_template& p__spatMsg, const INTEGER_template& p__gnNextHeader, const INTEGER_template& p__gnHeaderType, const INTEGER_template& p__gnHeaderSubtype, const INTEGER_template& p__gnLifetime, const INTEGER_template& p__gnTrafficClass);
extern LibItsMapSpat__TypesAndValues::UtMapSpatTrigger_template m__utTriggerEvent(const LibItsMapSpat__TypesAndValues::Event& p__event);
extern MAP__SPAT__ETSI::MAP__PDU_template m__mapPdu(const DSRC::MapData_template& p__map);
extern MAP__SPAT__ETSI::SPAT__PDU_template m__spatPdu(const DSRC::SPAT_template& p__spat);
extern LibItsMapSpat__TestSystem::MapMsg_template mw__mapPdu(const ITS__Container::ItsPduHeader_template& p__itsPduHeader, const DSRC::MapData_template& p__map);
extern LibItsMapSpat__TestSystem::SpatMsg_template mw__spatPdu(const ITS__Container::ItsPduHeader_template& p__itsPduHeader, const DSRC::SPAT_template& p__spat);
extern ITS__Container::ItsPduHeader_template m__itsPduHeader(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID);
extern ITS__Container::ItsPduHeader_template mw__itsPduHeader(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID);
extern ITS__Container::ItsPduHeader_template mw__itsPduHeaderMap(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID);
extern ITS__Container::ItsPduHeader_template mw__itsPduHeaderSpat(const INTEGER_template& p__stationID, const INTEGER_template& p__protocolVersion, const INTEGER_template& p__messageID);

/* Global variable declarations */

extern const INTEGER& ItsPduHeader__protocolVersion__currentVersion__;
extern const INTEGER& ItsPduHeader__messageID__spat__;
extern const INTEGER& ItsPduHeader__messageID__map__;
extern const INTEGER_template& mw__mapIndWithGnParameters_p__gnNextHeader_defval;
extern const INTEGER_template& mw__mapIndWithGnParameters_p__gnHeaderType_defval;
extern const INTEGER_template& mw__mapIndWithGnParameters_p__gnHeaderSubtype_defval;
extern const INTEGER_template& mw__mapIndWithGnParameters_p__gnLifetime_defval;
extern const INTEGER_template& mw__mapIndWithGnParameters_p__gnTrafficClass_defval;
extern const INTEGER_template& mw__spatIndWithGnParameters_p__gnNextHeader_defval;
extern const INTEGER_template& mw__spatIndWithGnParameters_p__gnHeaderType_defval;
extern const INTEGER_template& mw__spatIndWithGnParameters_p__gnHeaderSubtype_defval;
extern const INTEGER_template& mw__spatIndWithGnParameters_p__gnLifetime_defval;
extern const INTEGER_template& mw__spatIndWithGnParameters_p__gnTrafficClass_defval;
extern const LibItsCommon__TypesAndValues::UtInitialize_template& m__mapSpatInitialize;
extern const ITS__Container::ItsPduHeader_template& mw__mapPdu_p__itsPduHeader_defval;
extern const DSRC::MapData_template& mw__mapPdu_p__map_defval;
extern const ITS__Container::ItsPduHeader_template& mw__spatPdu_p__itsPduHeader_defval;
extern const DSRC::SPAT_template& mw__spatPdu_p__spat_defval;
extern const INTEGER_template& m__itsPduHeader_p__stationID_defval;
extern const INTEGER_template& m__itsPduHeader_p__protocolVersion_defval;
extern const INTEGER_template& mw__itsPduHeader_p__stationID_defval;
extern const INTEGER_template& mw__itsPduHeader_p__protocolVersion_defval;
extern const INTEGER_template& mw__itsPduHeader_p__messageID_defval;
extern const INTEGER_template& mw__itsPduHeaderMap_p__stationID_defval;
extern const INTEGER_template& mw__itsPduHeaderMap_p__protocolVersion_defval;
extern const INTEGER_template& mw__itsPduHeaderMap_p__messageID_defval;
extern const INTEGER_template& mw__itsPduHeaderSpat_p__stationID_defval;
extern const INTEGER_template& mw__itsPduHeaderSpat_p__protocolVersion_defval;
extern const INTEGER_template& mw__itsPduHeaderSpat_p__messageID_defval;
extern const INTEGER_template& mw__anyStationId;
extern const DSRC::MapData_template& m__map;
extern const DSRC::MapData_template& mw__anyMap;
extern const DSRC::MapData_template& mw__mapSubId1;
extern const DSRC::MapData_template& mw__mapNoMsgCrc;
extern const DSRC::MapData_template& mw__mapMsgCrcLast;
extern const DSRC::MapData_template& mw__mapNoLayerType;
extern const DSRC::MapData_template& mw__mapWellFormatted;
extern const DSRC::SPAT_template& m__spat;
extern const DSRC::IntersectionStateList_template& m__intersections;
extern const DSRC::IntersectionState_template& m__intersection;
extern const DSRC::IntersectionReferenceID_template& m__intersectionReferenceID;
extern const DSRC::MovementList_template& m__movements;
extern const DSRC::MovementState_template& m__movement;
extern const DSRC::MovementEventList_template& m__movementEventList;
extern const DSRC::MovementEvent_template& m__movementEvent;
extern const DSRC::SPAT_template& mw__anySpat;
extern const DSRC::SPAT_template& mw__spatSubId1;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
