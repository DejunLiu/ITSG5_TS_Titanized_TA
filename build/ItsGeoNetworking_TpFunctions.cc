// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "ItsGeoNetworking_TpFunctions.hh"

namespace ItsGeoNetworking__TpFunctions {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments);

/* Literal string constants */

static const unsigned char bs_0_bits[] = { 0 };
static const BITSTRING bs_0(1, bs_0_bits);
static const unsigned char os_4_octets[] = { 68, 69, 70, 65, 85, 76, 84, 95, 80, 65, 89, 76, 79, 65, 68 },
os_0_octets[] = { 80, 65, 89, 76, 79, 65, 68 },
os_3_octets[] = { 80, 65, 89, 76, 79, 65, 68, 95, 48, 48, 48, 48 },
os_1_octets[] = { 80, 65, 89, 76, 79, 65, 68, 95, 49 },
os_2_octets[] = { 80, 65, 89, 76, 79, 65, 68, 95, 50 };
static const OCTETSTRING os_4(15, os_4_octets),
os_0(7, os_0_octets),
os_3(12, os_3_octets),
os_1(9, os_1_octets),
os_2(9, os_2_octets);
static const CHARSTRING cs_13(4, " != "),
cs_262(4, " ***"),
cs_14(4, ")***"),
cs_0(4, "*** "),
cs_261(2, ": "),
cs_142(66, ": Beacon not transmitted at prescribed periodicity (too early) ***"),
cs_144(65, ": Beacon not transmitted at prescribed periodicity (too late) ***"),
cs_143(50, ": Beacon transmitted at prescribed periodicity ***"),
cs_147(52, ": DEPV of the received GUC message correctly set ***"),
cs_148(54, ": DEPV of the received GUC message incorrectly set ***"),
cs_265(51, ": Expected amount of messages were not received ***"),
cs_77(35, ": Expected message not received ***"),
cs_84(36, ": Expected messages not received ***"),
cs_168(39, ": FAIL: Duplicate GUC was forwarded ***"),
cs_220(45, ": FAIL: Expected SHB message not received ***"),
cs_201(45, ": FAIL: Expected TSB message not received ***"),
cs_268(57, ": FAIL: Expected amount of messages were not received ***"),
cs_105(41, ": FAIL: Expected message not received ***"),
cs_152(40, ": FAIL: Fields not correctly updated ***"),
cs_153(34, ": FAIL: Forwarded GUC received ***"),
cs_239(33, ": FAIL: GAC message forwarded ***"),
cs_242(39, ": FAIL: GAC message not broadcasted ***"),
cs_237(37, ": FAIL: GAC message not forwarded ***"),
cs_228(52, ": FAIL: GAC message not forwarded to area center ***"),
cs_222(36, ": FAIL: GAC message not received ***"),
cs_226(36, ": FAIL: GAC message re-forwarded ***"),
cs_231(51, ": FAIL: GAC message re-forwarded to area center ***"),
cs_233(51, ": FAIL: GAC re-forwarded! (not to area center!) ***"),
cs_197(33, ": FAIL: GBC message forwarded ***"),
cs_246(39, ": FAIL: GBC message not broadcasted ***"),
cs_251(37, ": FAIL: GBC message not forwarded ***"),
cs_182(52, ": FAIL: GBC message not forwarded to area center ***"),
cs_190(42, ": FAIL: GBC message not re-broadcasted ***"),
cs_30(36, ": FAIL: GBC message not received ***"),
cs_178(38, ": FAIL: GBC message re-broadcasted ***"),
cs_184(51, ": FAIL: GBC message re-forwarded to area center ***"),
cs_257(31, ": FAIL: GBC not broadcasted ***"),
cs_130(31, ": FAIL: GBC packet received ***"),
cs_129(50, ": FAIL: GBC packet received in incorrect order ***"),
cs_69(62, ": FAIL: GBC packet received with incorrect sequence number ***"),
cs_188(51, ": FAIL: GBC re-forwarded! (not to area center!) ***"),
cs_254(42, ": FAIL: GBC received and not discarded ***"),
cs_247(57, ": FAIL: GBC retransmitted before CBF timer expiration ***"),
cs_62(72, ": FAIL: GN packet received with obsolete Destination Position Vector ***"),
cs_155(49, ": FAIL: GN was not transmitted to upper layer ***"),
cs_7(45, ": FAIL: GN was transmitted to upper layer ***"),
cs_42(45, ": FAIL: GUC packet has some inconsistence ***"),
cs_121(31, ": FAIL: GUC packet received ***"),
cs_125(50, ": FAIL: GUC packet received in incorrect order ***"),
cs_165(35, ": FAIL: GUC was not broadcasted ***"),
cs_151(33, ": FAIL: GUC was not forwarded ***"),
cs_161(38, ": FAIL: GUC was not re-broadcasted ***"),
cs_163(32, ": FAIL: GUC was not received ***"),
cs_158(51, ": FAIL: IUT re-broadcasted the packet too early ***"),
cs_18(58, ": FAIL: Incorrect GeoNetworking Common Header received ***"),
cs_103(38, ": FAIL: LS Reply was not forwarded ***"),
cs_72(59, ": FAIL: LS Request does not contain GN Address of nodeA ***"),
cs_116(36, ": FAIL: LS Request retransmitted ***"),
cs_101(45, ": FAIL: LS Request was not re-broadcasted ***"),
cs_97(45, ": FAIL: LS_REQUEST has not been discarded ***"),
cs_115(23, ": FAIL: LT1 expired ***"),
cs_132(45, ": FAIL: Lifetime was not handled properly ***"),
cs_259(33, ": FAIL: Message not discarded ***"),
cs_252(35, ": FAIL: Message was broadcasted ***"),
cs_80(48, ": FAIL: Messages received in incorrect order ***"),
cs_12(53, ": FAIL: PL does correctly not indicate payload size ("),
cs_16(46, ": FAIL: PL does not indicate empty payload ***"),
cs_180(52, ": FAIL: Pre-conditions: GBC message not received ***"),
cs_134(47, ": FAIL: Pre-conditions: TSB not broadcasted ***"),
cs_43(45, ": FAIL: Received Location Service Request ***"),
cs_216(58, ": FAIL: Same TSB packet was transmitted to upper layer ***"),
cs_66(55, ": FAIL: Sender Postion Vector not correctly updated ***"),
cs_210(43, ": FAIL: TSB message was re-broadcasted  ***"),
cs_208(55, ": FAIL: TSB packet received with incorrect HopLimit ***"),
cs_19(41, ": FAIL: TSB packet was not discarded  ***"),
cs_205(50, ": FAIL: The same TSB packet was re-broadcasted ***"),
cs_266(61, ": FAIL: Unexpected message received (Bad sequence number) ***"),
cs_113(39, ": FAIL: Unexpected message received ***"),
cs_107(50, ": FAIL: message with elapsed lifetime received ***"),
cs_109(54, ": FAIL: message with running lifetime not received ***"),
cs_223(32, ": FAIL: received GAC message ***"),
cs_173(32, ": FAIL: received GBC message ***"),
cs_79(30, ": First LsRequest received ***"),
cs_81(28, ": First Message received ***"),
cs_238(38, ": GAC packet passed to Upper Layer ***"),
cs_137(27, ": GN address is correct ***"),
cs_138(31, ": GN address is not correct ***"),
cs_145(22, ": GUC not received ***"),
cs_209(47, ": INCONC: Expected TSB message not received ***"),
cs_4(43, ": INCONC: Expected message not received ***"),
cs_167(41, ": INCONC: First GUC was not forwarded ***"),
cs_33(38, ": INCONC: GAC message not received ***"),
cs_126(37, ": INCONC: GBC packet not buffered ***"),
cs_6(51, ": INCONC: GN was not transmitted to upper layer ***"),
cs_27(38, ": INCONC: GUC message not received ***"),
cs_61(37, ": INCONC: LS Request not received ***"),
cs_204(63, ": INCONC: Pre-conditions: Expected TSB message not received ***"),
cs_234(70, ": INCONC: Pre-conditions: GAC message not forwarded to area center ***"),
cs_230(54, ": INCONC: Pre-conditions: GAC message not received ***"),
cs_186(70, ": INCONC: Pre-conditions: GBC message not forwarded to area center ***"),
cs_177(54, ": INCONC: Pre-conditions: GBC message not received ***"),
cs_104(53, ": INCONC: Pre-conditions: LS Request not received ***"),
cs_215(51, ": INCONC: Pre-conditions: TSB not rebroadcasted ***"),
cs_119(47, ": INCONC: Received Location Service Request ***"),
cs_36(38, ": INCONC: SHB message not received ***"),
cs_39(38, ": INCONC: TSB message not received ***"),
cs_214(52, ": INCONC: TSB was not transmitted to upper layer ***"),
cs_2(28, ": INCONC: Trigger failed ***"),
cs_249(29, ": INFO: CBF timer elapsed ***"),
cs_166(31, ": INFO: First GUC forwarded ***"),
cs_192(41, ": INFO: GBC message not rebroadcasted ***"),
cs_191(37, ": INFO: GBC message rebroadcasted ***"),
cs_117(31, ": INFO: GUC packet received ***"),
cs_106(45, ": INFO: LS Request retransmission ignored ***"),
cs_157(24, ": INFO: Message sent ***"),
cs_195(57, ": INFO: Pre-conditions: GBC message not rebroadcasted ***"),
cs_194(53, ": INFO: Pre-conditions: GBC message rebroadcasted ***"),
cs_159(47, ": INFO: Ready for receiving re-broadcasting ***"),
cs_140(51, ": IUT is still using old GN address. Waiting... ***"),
cs_141(29, ": IUT used new GN address ***"),
cs_96(44, ": LS_REPLY packet not received correctly ***"),
cs_95(40, ": LS_REPLY packet received correctly ***"),
cs_89(40, ": LS_REQUEST correctly retransmitted ***"),
cs_93(67, ": LS_REQUEST retransmitted itsGnLocationServiceMaxRetrans times ***"),
cs_94(77, ": LS_REQUEST retransmitted less than itsGnLocationServiceMaxRetrans times ***"),
cs_92(77, ": LS_REQUEST retransmitted more than itsGnLocationServiceMaxRetrans times ***"),
cs_90(40, ": LS_REQUEST retransmitted too early ***"),
cs_75(35, ": Lifetime was handled properly ***"),
cs_76(39, ": Lifetime was not handled properly ***"),
cs_85(22, ": Message received ***"),
cs_91(33, ": No LS_REQUEST retransmitted ***"),
cs_86(25, ": No message received ***"),
cs_74(35, ": No second LS_REQUEST received ***"),
cs_264(57, ": Older message was removed, new message was inserted ***"),
cs_3(44, ": PASS: Basic Header correctly formatted ***"),
cs_10(45, ": PASS: Common Header correclty formatted ***"),
cs_17(56, ": PASS: Correct GeoNetworking Common Header received ***"),
cs_169(39, ": PASS: Duplicate GUC not forwarded ***"),
cs_32(60, ": PASS: Fields of the received GAC message correctly set ***"),
cs_29(60, ": PASS: Fields of the received GBC message correctly set ***"),
cs_26(60, ": PASS: Fields of the received GUC message correctly set ***"),
cs_35(60, ": PASS: Fields of the received SHB message correctly set ***"),
cs_150(34, ": PASS: Forwarded GUC received ***"),
cs_102(39, ": PASS: Forwarded LS Reply received ***"),
cs_236(43, ": PASS: GAC message correctly forwarded ***"),
cs_227(58, ": PASS: GAC message correctly forwarded to area center ***"),
cs_240(37, ": PASS: GAC message not forwarded ***"),
cs_232(40, ": PASS: GAC message not re-forwarded ***"),
cs_224(36, ": PASS: GAC message not received ***"),
cs_221(42, ": PASS: GAC message received correctly ***"),
cs_256(27, ": PASS: GBC broadcasted ***"),
cs_250(35, ": PASS: GBC correctly forwarded ***"),
cs_245(35, ": PASS: GBC message broadcasted ***"),
cs_181(58, ": PASS: GBC message correctly forwarded to area center ***"),
cs_189(48, ": PASS: GBC message correctly re-broadcasted ***"),
cs_255(33, ": PASS: GBC message discarded ***"),
cs_198(37, ": PASS: GBC message not forwarded ***"),
cs_179(42, ": PASS: GBC message not re-broadcasted ***"),
cs_185(40, ": PASS: GBC message not re-forwarded ***"),
cs_174(36, ": PASS: GBC message not received ***"),
cs_199(38, ": PASS: GBC message re-broadcasted ***"),
cs_248(32, ": PASS: GBC message received ***"),
cs_171(42, ": PASS: GBC message received correctly ***"),
cs_127(31, ": PASS: GBC packet buffered ***"),
cs_68(41, ": PASS: GBC packet received correctly ***"),
cs_128(49, ": PASS: GBC packets received in correct order ***"),
cs_71(62, ": PASS: GBC packets received with correct sequence numbers ***"),
cs_22(41, ": PASS: GN address correctly received ***"),
cs_63(47, ": PASS: GN packet packet received correctly ***"),
cs_193(49, ": PASS: GN was NOT transmitted to upper layer ***"),
cs_8(63, ": PASS: GN was discarded and not transmitted to upper layer ***"),
cs_170(49, ": PASS: GN was not transmitted to upper layer ***"),
cs_5(45, ": PASS: GN was transmitted to upper layer ***"),
cs_41(41, ": PASS: GUC packet received correctly ***"),
cs_124(49, ": PASS: GUC packets received in correct order ***"),
cs_162(24, ": PASS: GUC received ***"),
cs_154(33, ": PASS: GUC was not forwarded ***"),
cs_118(40, ": PASS: LS Request not retransmitted ***"),
cs_60(41, ": PASS: LS Request received correctly ***"),
cs_98(32, ": PASS: LS_REQUEST discarded ***"),
cs_131(41, ": PASS: Lifetime was handled properly ***"),
cs_253(35, ": PASS: Message not broadcasted ***"),
cs_82(46, ": PASS: Messages received in correct order ***"),
cs_122(31, ": PASS: No message received ***"),
cs_114(31, ": PASS: No message was sent ***"),
cs_267(66, ": PASS: Older messages wer removed, new messages were inserted ***"),
cs_15(54, ": PASS: PL field correctly indicates empty payload ***"),
cs_11(53, ": PASS: PL field correctly indicates payload size ***"),
cs_123(38, ": PASS: Packet correctly forwarded ***"),
cs_23(62, ": PASS: Position equaling GN-MNGT primitive value received ***"),
cs_229(74, ": PASS: Pre-conditions: GAC message correctly forwarded to area center ***"),
cs_235(52, ": PASS: Pre-conditions: GAC message not received ***"),
cs_183(74, ": PASS: Pre-conditions: GBC message correctly forwarded to area center ***"),
cs_187(52, ": PASS: Pre-conditions: GBC message not received ***"),
cs_176(58, ": PASS: Pre-conditions: GBC message received correctly ***"),
cs_133(53, ": PASS: Pre-conditions: TSB correctly broadcasted ***"),
cs_218(55, ": PASS: Pre-conditions: TSB correctly rebroadcasted ***"),
cs_213(81, ": PASS: Pre-conditions: TSB correctly rebroadcasted and passed to Upper Layer ***"),
cs_203(58, ": PASS: Pre-conditions: TSB packet received correctly  ***"),
cs_160(39, ": PASS: Re-broadcasted GUC received ***"),
cs_100(75, ": PASS: Re-broadcasted LS Request received with HL field decreased by 1 ***"),
cs_50(57, ": PASS: Received second GUC packet without LS Request ***"),
cs_219(42, ": PASS: SHB packet received correctly  ***"),
cs_217(58, ": PASS: Same TSB packet was not passed to Upper Layer  ***"),
cs_67(51, ": PASS: Sender Postion Vector correctly updated ***"),
cs_211(46, ": PASS: TSB message was not re-broadcasted ***"),
cs_200(42, ": PASS: TSB packet received correctly  ***"),
cs_207(41, ": PASS: TSB packet received correctly ***"),
cs_20(39, ": PASS: TSB was correctly discarded ***"),
cs_206(54, ": PASS: The same TSB packet was not re-broadcasted ***"),
cs_24(63, ": PASS: Timestamp equaling GN-MNGT primitive value received ***"),
cs_164(36, ": PASS: broadcasted GUC received ***"),
cs_38(69, ": PASS: message received with correct common and extended headers ***"),
cs_108(50, ": PASS: message with running lifetime received ***"),
cs_260(40, ": PASS: packet correctly broadcasted ***"),
cs_120(38, ": PASS: packet correctly forwarded ***"),
cs_241(32, ": PASS: received GAC message ***"),
cs_135(53, ": PICS_GN_ADDR_AUTO required for executing the TC ***"),
cs_1(56, ": PICS_GN_BASIC_HEADER required for executing the TC ***"),
cs_51(54, ": PICS_GN_BEACON_DST required for executing the TC ***"),
cs_21(54, ": PICS_GN_BEACON_SRC required for executing the TC ***"),
cs_9(57, ": PICS_GN_COMMON_HEADER required for executing the TC ***"),
cs_139(47, ": PICS_GN_DAD required for executing the TC ***"),
cs_53(51, ": PICS_GN_GAC_DST required for executing the TC ***"),
cs_225(51, ": PICS_GN_GAC_FWD required for executing the TC ***"),
cs_31(51, ": PICS_GN_GAC_SRC required for executing the TC ***"),
cs_54(51, ": PICS_GN_GBC_DST required for executing the TC ***"),
cs_175(51, ": PICS_GN_GBC_FWD required for executing the TC ***"),
cs_28(51, ": PICS_GN_GBC_SRC required for executing the TC ***"),
cs_244(76, ": PICS_GN_GEOBROADCAST_CBF_MIN_TIME >= 300 required for executing the TC ***"),
cs_196(90, ": PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM == ( e_cbf ) required for executing the TC ***"),
cs_172(110, ": PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM == ( e_simple or e_unspecified ) required for executing the TC ***"),
cs_258(91, ": PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM == e_advanced required for executing the TC ***"),
cs_243(86, ": PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM == e_cbf required for executing the TC ***"),
cs_146(107, ": PICS_GN_GEOUNICAST_FORWARDING_ALGORITHM == (e_greedy  or e_unspecified) required for executing the TC ***"),
cs_156(84, ": PICS_GN_GEOUNICAST_FORWARDING_ALGORITHM == e_cbf required for executing the TC ***"),
cs_52(51, ": PICS_GN_GUC_DST required for executing the TC ***"),
cs_149(51, ": PICS_GN_GUC_FWD required for executing the TC ***"),
cs_40(74, ": PICS_GN_GUC_SRC and PICS_GN_BEACON_DST required for executing the TC ***"),
cs_25(51, ": PICS_GN_GUC_SRC required for executing the TC ***"),
cs_136(76, ": PICS_GN_LOCAL_ADDR_CONF_METHOD == e_auto required for executing the TC ***"),
cs_99(50, ": PICS_GN_LS_FWD required for executing the TC ***"),
cs_58(54, ": PICS_GN_LS_REP_DST required for executing the TC ***"),
cs_57(54, ": PICS_GN_LS_REQ_DST required for executing the TC ***"),
cs_87(65, ": PICS_GN_LS_REQ_RETRANSMISSION required for executing the TC ***"),
cs_45(77, ": PICS_GN_LS_REQ_SRC AND PICS_GN_LS_REP_DST required for executing the TC ***"),
cs_59(54, ": PICS_GN_LS_REQ_SRC required for executing the TC ***"),
cs_56(51, ": PICS_GN_SHB_DST required for executing the TC ***"),
cs_34(51, ": PICS_GN_SHB_SRC required for executing the TC ***"),
cs_55(51, ": PICS_GN_TSB_DST required for executing the TC ***"),
cs_202(51, ": PICS_GN_TSB_FWD required for executing the TC ***"),
cs_37(51, ": PICS_GN_TSB_SRC required for executing the TC ***"),
cs_64(37, ": Pre-conditions: Beacon received ***"),
cs_65(51, ": Pre-conditions: Expected message not received ***"),
cs_47(58, ": Pre-conditions: First GUC message received correctly ***"),
cs_70(48, ": Pre-conditions: First GUC packet received  ***"),
cs_48(60, ": Pre-conditions: GUC packet received without LS Request ***"),
cs_49(55, ": Pre-conditions: Initial conditions not satisfied. ***"),
cs_111(83, ": Pre-conditions: LS_REQUEST retransmitted itsGnLocationServiceMaxRetrans times ***"),
cs_112(93, ": Pre-conditions: LS_REQUEST retransmitted less than itsGnLocationServiceMaxRetrans times ***"),
cs_110(93, ": Pre-conditions: LS_REQUEST retransmitted more than itsGnLocationServiceMaxRetrans times ***"),
cs_46(68, ": Pre-conditions: Received and answered Location Service Request ***"),
cs_88(30, ": Ready for retransmission ***"),
cs_73(32, ": Second LS_REQUEST received ***"),
cs_78(31, ": Second LsRequest received ***"),
cs_83(29, ": Second Message received ***"),
cs_44(44, ": TIMEOUT: Expected message not received ***"),
cs_212(39, ": TSB packet passed to Upper Layer  ***"),
cs_263(8, "PAYLOAD_");
static const unsigned char module_checksum[] = { 0x98, 0xc7, 0x64, 0x59, 0xbc, 0x41, 0x6d, 0xc9, 0xa3, 0x4f, 0x8d, 0x3a, 0x5e, 0x06, 0xa8, 0xca };

/* Global variable definitions */

static const size_t num_namespaces = 0;
TTCN_Module module_object("ItsGeoNetworking_TpFunctions", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, start_ptc_function, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

void f__GEONW__FDV__BAH__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 38, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BAH_BV_01");
current_location.update_lineno(41);
/* ItsGeoNetworking_TpFunctions.ttcn, line 41 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(44);
/* ItsGeoNetworking_TpFunctions.ttcn, line 44 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BASIC__HEADER))) {
current_location.update_lineno(45);
/* ItsGeoNetworking_TpFunctions.ttcn, line 45 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_1).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(46);
/* ItsGeoNetworking_TpFunctions.ttcn, line 46 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(47);
/* ItsGeoNetworking_TpFunctions.ttcn, line 47 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(51);
/* ItsGeoNetworking_TpFunctions.ttcn, line 51 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(52);
/* ItsGeoNetworking_TpFunctions.ttcn, line 52 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(CHARSTRING(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__componentName));
current_location.update_lineno(57);
/* ItsGeoNetworking_TpFunctions.ttcn, line 57 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(58);
/* ItsGeoNetworking_TpFunctions.ttcn, line 58 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(61);
/* ItsGeoNetworking_TpFunctions.ttcn, line 61 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(62);
/* ItsGeoNetworking_TpFunctions.ttcn, line 62 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(63);
/* ItsGeoNetworking_TpFunctions.ttcn, line 63 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(65);
/* ItsGeoNetworking_TpFunctions.ttcn, line 65 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(66);
/* ItsGeoNetworking_TpFunctions.ttcn, line 66 */
{
tmp_1:
alt_status tmp_1_alt_flag_0 = ALT_MAYBE;
alt_status tmp_1_alt_flag_1 = ALT_MAYBE;
alt_status tmp_1_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_1_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(67);
/* ItsGeoNetworking_TpFunctions.ttcn, line 67 */
tmp_1_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__Functions::f__getDefaultHopLimit()))), NULL, any_compref, NULL);
if (tmp_1_alt_flag_0 == ALT_YES) {
current_location.update_lineno(68);
/* ItsGeoNetworking_TpFunctions.ttcn, line 68 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(69);
/* ItsGeoNetworking_TpFunctions.ttcn, line 69 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_3).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(70);
/* ItsGeoNetworking_TpFunctions.ttcn, line 70 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_1_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(72);
/* ItsGeoNetworking_TpFunctions.ttcn, line 72 */
tmp_1_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_1_alt_flag_1 == ALT_YES) {
current_location.update_lineno(73);
/* ItsGeoNetworking_TpFunctions.ttcn, line 73 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(74);
/* ItsGeoNetworking_TpFunctions.ttcn, line 74 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_1_default_flag == ALT_MAYBE) {
tmp_1_default_flag = TTCN_Default::try_altsteps();
if (tmp_1_default_flag == ALT_YES || tmp_1_default_flag == ALT_BREAK) break;
else if (tmp_1_default_flag == ALT_REPEAT) goto tmp_1;
}
current_location.update_lineno(66);
/* ItsGeoNetworking_TpFunctions.ttcn, line 66 */
if (tmp_1_alt_flag_0 == ALT_NO && tmp_1_alt_flag_1 == ALT_NO && tmp_1_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 66 and 76.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(79);
/* ItsGeoNetworking_TpFunctions.ttcn, line 79 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(80);
/* ItsGeoNetworking_TpFunctions.ttcn, line 80 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BAH__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BAH_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BAH_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__BAH__BI__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 87, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BAH_BI_02");
current_location.update_lineno(89);
/* ItsGeoNetworking_TpFunctions.ttcn, line 89 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(90);
/* ItsGeoNetworking_TpFunctions.ttcn, line 90 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(91);
/* ItsGeoNetworking_TpFunctions.ttcn, line 91 */
INTEGER i;
current_location.update_lineno(92);
/* ItsGeoNetworking_TpFunctions.ttcn, line 92 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(95);
/* ItsGeoNetworking_TpFunctions.ttcn, line 95 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BASIC__HEADER))) {
current_location.update_lineno(96);
/* ItsGeoNetworking_TpFunctions.ttcn, line 96 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_1).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(97);
/* ItsGeoNetworking_TpFunctions.ttcn, line 97 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(98);
/* ItsGeoNetworking_TpFunctions.ttcn, line 98 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 102 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 103 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 108 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 109 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 111 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 113 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(115);
/* ItsGeoNetworking_TpFunctions.ttcn, line 115 */
if ((0 < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(116);
/* ItsGeoNetworking_TpFunctions.ttcn, line 116 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 118 */
LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds = NULL_VALUE;
current_location.update_lineno(119);
/* ItsGeoNetworking_TpFunctions.ttcn, line 119 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 122 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_6).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(123);
/* ItsGeoNetworking_TpFunctions.ttcn, line 123 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 127 */
{
INTEGER_template tmp_5;
tmp_5 = (v__gnPacket.basicHeader().version().valueof() + 1);
v__gnPacket.basicHeader().version() = tmp_5;
}
current_location.update_lineno(129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 129 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(131);
/* ItsGeoNetworking_TpFunctions.ttcn, line 131 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 133 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 134 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 135 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 138 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_8).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 139 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 143 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 144 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BAH__BI__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BAH_BI_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BAH_BI_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 156, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BV_01");
current_location.update_lineno(159);
/* ItsGeoNetworking_TpFunctions.ttcn, line 159 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 162 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__COMMON__HEADER))) {
current_location.update_lineno(163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 163 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_9).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 164 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 165 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 169 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 170 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(175);
/* ItsGeoNetworking_TpFunctions.ttcn, line 175 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 176 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(177);
/* ItsGeoNetworking_TpFunctions.ttcn, line 177 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 178 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 181 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 182 */
{
tmp_7:
alt_status tmp_7_alt_flag_0 = ALT_MAYBE;
alt_status tmp_7_alt_flag_1 = ALT_MAYBE;
alt_status tmp_7_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_7_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 183 */
tmp_7_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_7_alt_flag_0 == ALT_YES) {
current_location.update_lineno(184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 184 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 185 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_10).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 186 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_7_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 188 */
tmp_7_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_7_alt_flag_1 == ALT_YES) {
current_location.update_lineno(189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 189 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(190);
/* ItsGeoNetworking_TpFunctions.ttcn, line 190 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_7_default_flag == ALT_MAYBE) {
tmp_7_default_flag = TTCN_Default::try_altsteps();
if (tmp_7_default_flag == ALT_YES || tmp_7_default_flag == ALT_BREAK) break;
else if (tmp_7_default_flag == ALT_REPEAT) goto tmp_7;
}
current_location.update_lineno(182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 182 */
if (tmp_7_alt_flag_0 == ALT_NO && tmp_7_alt_flag_1 == ALT_NO && tmp_7_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 182 and 192.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 194 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__stopPassBeaconing);
current_location.update_lineno(197);
/* ItsGeoNetworking_TpFunctions.ttcn, line 197 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 198 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__COH__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 205, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BV_02");
current_location.update_lineno(208);
/* ItsGeoNetworking_TpFunctions.ttcn, line 208 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNwInd;
current_location.update_lineno(209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 209 */
OCTETSTRING v__payload(os_0);
current_location.update_lineno(212);
/* ItsGeoNetworking_TpFunctions.ttcn, line 212 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__COMMON__HEADER))) {
current_location.update_lineno(213);
/* ItsGeoNetworking_TpFunctions.ttcn, line 213 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_9).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 214 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 215 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(219);
/* ItsGeoNetworking_TpFunctions.ttcn, line 219 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(224);
/* ItsGeoNetworking_TpFunctions.ttcn, line 224 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 225 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessageWithPayload(v__payload))))) {
current_location.update_lineno(226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 226 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 227 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 229 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 232 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(233);
/* ItsGeoNetworking_TpFunctions.ttcn, line 233 */
{
tmp_8:
alt_status tmp_8_alt_flag_0 = ALT_MAYBE;
alt_status tmp_8_alt_flag_1 = ALT_MAYBE;
alt_status tmp_8_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_8_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(234);
/* ItsGeoNetworking_TpFunctions.ttcn, line 234 */
tmp_8_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__sourceLongPosVec_defval, LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNwInd), any_compref, NULL);
if (tmp_8_alt_flag_0 == ALT_YES) {
current_location.update_lineno(235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 235 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 236 */
{
boolean tmp_15;
{
boolean tmp_9 = v__geoNwInd.is_bound();
if(tmp_9) {
const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu& tmp_10 = v__geoNwInd.msgIn();
tmp_9 = tmp_10.is_bound();
if(tmp_9) {
const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket& tmp_11 = tmp_10.gnPacket();
tmp_9 = tmp_11.is_bound();
if(tmp_9) {
const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket& tmp_12 = tmp_11.packet();
tmp_9 = tmp_12.is_bound();
if(tmp_9) {
const OPTIONAL<LibItsGeoNetworking__TypesAndValues::Payload>& tmp_13 = tmp_12.payload();
switch (tmp_13.get_selection()) {
case OPTIONAL_UNBOUND:
tmp_9 = false;
break;
case OPTIONAL_OMIT:
tmp_9 = false;
break;
default:
{
const LibItsGeoNetworking__TypesAndValues::Payload& tmp_14 = (const LibItsGeoNetworking__TypesAndValues::Payload&) tmp_13;
tmp_9 = tmp_14.is_present();
break;}
}
}
}
}
}
tmp_15 = tmp_9;
}
if (tmp_15) {
current_location.update_lineno(237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 237 */
if ((const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().commonHeader().plLength() == const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().payload()().rawPayload().lengthof())) {
current_location.update_lineno(238);
/* ItsGeoNetworking_TpFunctions.ttcn, line 238 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_11).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 239 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(242);
/* ItsGeoNetworking_TpFunctions.ttcn, line 242 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((((((cs_0 + TTCN_Runtime::get_testcasename()) + cs_12) + int2str(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().commonHeader().plLength())) + cs_13) + int2str(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().payload()().rawPayload().lengthof())) + cs_14).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(247);
/* ItsGeoNetworking_TpFunctions.ttcn, line 247 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
}
else {
current_location.update_lineno(251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 251 */
if ((const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().commonHeader().plLength() == 0)) {
current_location.update_lineno(252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 252 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_15).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 253 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 256 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_16).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 257 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
}
}
break;
}
}
if (tmp_8_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(261);
/* ItsGeoNetworking_TpFunctions.ttcn, line 261 */
tmp_8_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_8_alt_flag_1 == ALT_YES) {
current_location.update_lineno(262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 262 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 263 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_8_default_flag == ALT_MAYBE) {
tmp_8_default_flag = TTCN_Default::try_altsteps();
if (tmp_8_default_flag == ALT_YES || tmp_8_default_flag == ALT_BREAK) break;
else if (tmp_8_default_flag == ALT_REPEAT) goto tmp_8;
}
current_location.update_lineno(233);
/* ItsGeoNetworking_TpFunctions.ttcn, line 233 */
if (tmp_8_alt_flag_0 == ALT_NO && tmp_8_alt_flag_1 == ALT_NO && tmp_8_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 233 and 265.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 268 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 269 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__COH__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 276, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BV_03");
current_location.update_lineno(279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 279 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 282 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__COMMON__HEADER))) {
current_location.update_lineno(283);
/* ItsGeoNetworking_TpFunctions.ttcn, line 283 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_9).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 284 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 285 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 289 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 290 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 295 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 296 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 299 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 300 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 301 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 304 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 305 */
{
tmp_17:
alt_status tmp_17_alt_flag_0 = ALT_MAYBE;
alt_status tmp_17_alt_flag_1 = ALT_MAYBE;
alt_status tmp_17_alt_flag_2 = ALT_MAYBE;
alt_status tmp_17_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_17_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(307);
/* ItsGeoNetworking_TpFunctions.ttcn, line 307 */
tmp_17_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithHlAndFlags(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), INTEGER_template(LibItsGeoNetworking__Functions::f__getDefaultHopLimit()), BITSTRING_template(LibItsGeoNetworking__Functions::f__isMobile())), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_17_alt_flag_0 == ALT_YES) {
current_location.update_lineno(308);
/* ItsGeoNetworking_TpFunctions.ttcn, line 308 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 309 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_17).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 310 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_17_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(312);
/* ItsGeoNetworking_TpFunctions.ttcn, line 312 */
tmp_17_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE));
if (tmp_17_alt_flag_1 == ALT_REPEAT) goto tmp_17;
if (tmp_17_alt_flag_1 == ALT_BREAK) break;
if (tmp_17_alt_flag_1 == ALT_YES) {
current_location.update_lineno(313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 313 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 314 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_18).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(315);
/* ItsGeoNetworking_TpFunctions.ttcn, line 315 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_17_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(318);
/* ItsGeoNetworking_TpFunctions.ttcn, line 318 */
tmp_17_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_17_alt_flag_2 == ALT_YES) {
current_location.update_lineno(319);
/* ItsGeoNetworking_TpFunctions.ttcn, line 319 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 320 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_17_default_flag == ALT_MAYBE) {
tmp_17_default_flag = TTCN_Default::try_altsteps();
if (tmp_17_default_flag == ALT_YES || tmp_17_default_flag == ALT_BREAK) break;
else if (tmp_17_default_flag == ALT_REPEAT) goto tmp_17;
}
current_location.update_lineno(305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 305 */
if (tmp_17_alt_flag_0 == ALT_NO && tmp_17_alt_flag_1 == ALT_NO && tmp_17_alt_flag_2 == ALT_NO && tmp_17_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 305 and 322.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 325 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 326 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__COH__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BO__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 335, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BO_04");
current_location.update_lineno(338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 338 */
COMPONENT v__nodeB;
current_location.update_lineno(339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 339 */
COMPONENT v__nodeD;
current_location.update_lineno(342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 342 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__COMMON__HEADER))) {
current_location.update_lineno(343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 343 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_9).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(344);
/* ItsGeoNetworking_TpFunctions.ttcn, line 344 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 345 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 349 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 354 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 355 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 356 */
start_f__GEONW__FDV__COH__BO__04__nodeB(v__nodeB);
current_location.update_lineno(357);
/* ItsGeoNetworking_TpFunctions.ttcn, line 357 */
start_f__GEONW__FDV__COH__BO__04__nodeD(v__nodeD);
current_location.update_lineno(360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 360 */
{
LibCommon__Sync::SyncPointList tmp_20;
tmp_20.set_size(2);
tmp_20[0] = LibCommon__Sync::c__prDone;
tmp_20[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_20);
}
current_location.update_lineno(363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 363 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__FDV__COH__BO__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BO_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BO_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BO__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 370, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BO_04_nodeB");
current_location.update_lineno(373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 373 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 374 */
INTEGER v__hopLimit(LibItsGeoNetworking__Functions::f__getDefaultHopLimit());
current_location.update_lineno(377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 377 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 378 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 381 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template((v__hopLimit - 1)), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(v__hopLimit))));
current_location.update_lineno(395);
/* ItsGeoNetworking_TpFunctions.ttcn, line 395 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 396 */
{
tmp_21:
alt_status tmp_21_alt_flag_0 = ALT_MAYBE;
alt_status tmp_21_alt_flag_1 = ALT_MAYBE;
alt_status tmp_21_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_21_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 397 */
tmp_21_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_21_alt_flag_0 == ALT_YES) {
current_location.update_lineno(407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 407 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 408 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_19).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 409 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_21_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 411 */
tmp_21_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_21_alt_flag_1 == ALT_YES) {
current_location.update_lineno(412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 412 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_20).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 413 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_21_default_flag == ALT_MAYBE) {
tmp_21_default_flag = TTCN_Default::try_altsteps();
if (tmp_21_default_flag == ALT_YES || tmp_21_default_flag == ALT_BREAK) break;
else if (tmp_21_default_flag == ALT_REPEAT) goto tmp_21;
}
current_location.update_lineno(396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 396 */
if (tmp_21_alt_flag_0 == ALT_NO && tmp_21_alt_flag_1 == ALT_NO && tmp_21_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 396 and 415.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 418 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__FDV__COH__BO__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BO_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BO_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__COH__BO__04__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 425, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_COH_BO_04_nodeD");
current_location.update_lineno(428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 428 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(431);
/* ItsGeoNetworking_TpFunctions.ttcn, line 431 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 432 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(435);
/* ItsGeoNetworking_TpFunctions.ttcn, line 435 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(436);
/* ItsGeoNetworking_TpFunctions.ttcn, line 436 */
{
tmp_22:
alt_status tmp_22_alt_flag_0 = ALT_MAYBE;
alt_status tmp_22_alt_flag_1 = ALT_MAYBE;
alt_status tmp_22_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_22_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(437);
/* ItsGeoNetworking_TpFunctions.ttcn, line 437 */
tmp_22_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_22_alt_flag_0 == ALT_YES) {
current_location.update_lineno(447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 447 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 448 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_19).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 449 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_22_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(451);
/* ItsGeoNetworking_TpFunctions.ttcn, line 451 */
tmp_22_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_22_alt_flag_1 == ALT_YES) {
current_location.update_lineno(452);
/* ItsGeoNetworking_TpFunctions.ttcn, line 452 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_20).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 453 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_22_default_flag == ALT_MAYBE) {
tmp_22_default_flag = TTCN_Default::try_altsteps();
if (tmp_22_default_flag == ALT_YES || tmp_22_default_flag == ALT_BREAK) break;
else if (tmp_22_default_flag == ALT_REPEAT) goto tmp_22;
}
current_location.update_lineno(436);
/* ItsGeoNetworking_TpFunctions.ttcn, line 436 */
if (tmp_22_alt_flag_0 == ALT_NO && tmp_22_alt_flag_1 == ALT_NO && tmp_22_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 436 and 455.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 458 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__FDV__COH__BO__04__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_COH_BO_04_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_COH_BO_04_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__BEA__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 472, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BEA_BV_01");
current_location.update_lineno(475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 475 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 478 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 479 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 480 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 481 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 485 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 486 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 491 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 492 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 493 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 494 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 497 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 498 */
{
tmp_24:
alt_status tmp_24_alt_flag_0 = ALT_MAYBE;
alt_status tmp_24_alt_flag_1 = ALT_MAYBE;
alt_status tmp_24_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_24_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 499 */
tmp_24_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_24_alt_flag_0 == ALT_YES) {
current_location.update_lineno(500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 500 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 501 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_10).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 502 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_24_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 504 */
tmp_24_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_24_alt_flag_1 == ALT_YES) {
current_location.update_lineno(505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 505 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 506 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_24_default_flag == ALT_MAYBE) {
tmp_24_default_flag = TTCN_Default::try_altsteps();
if (tmp_24_default_flag == ALT_YES || tmp_24_default_flag == ALT_BREAK) break;
else if (tmp_24_default_flag == ALT_REPEAT) goto tmp_24;
}
current_location.update_lineno(498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 498 */
if (tmp_24_alt_flag_0 == ALT_NO && tmp_24_alt_flag_1 == ALT_NO && tmp_24_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 498 and 508.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 511 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 512 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BEA__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BEA_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BEA_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__BEA__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 519, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BEA_BV_02");
current_location.update_lineno(522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 522 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(525);
/* ItsGeoNetworking_TpFunctions.ttcn, line 525 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(526);
/* ItsGeoNetworking_TpFunctions.ttcn, line 526 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 527 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 528 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 532 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 533 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 538 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 539 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 540 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 541 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 544 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 545 */
{
tmp_26:
alt_status tmp_26_alt_flag_0 = ALT_MAYBE;
alt_status tmp_26_alt_flag_1 = ALT_MAYBE;
alt_status tmp_26_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_26_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 546 */
tmp_26_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorAny(LibItsGeoNetworking__TypesAndValues::GN__Address_template(LibItsGeoNetworking__Functions::f__getIutGnLocalAddress())), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_26_alt_flag_0 == ALT_YES) {
current_location.update_lineno(548);
/* ItsGeoNetworking_TpFunctions.ttcn, line 548 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 549 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_22).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 550 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_26_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(552);
/* ItsGeoNetworking_TpFunctions.ttcn, line 552 */
tmp_26_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_26_alt_flag_1 == ALT_YES) {
current_location.update_lineno(553);
/* ItsGeoNetworking_TpFunctions.ttcn, line 553 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(554);
/* ItsGeoNetworking_TpFunctions.ttcn, line 554 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_26_default_flag == ALT_MAYBE) {
tmp_26_default_flag = TTCN_Default::try_altsteps();
if (tmp_26_default_flag == ALT_YES || tmp_26_default_flag == ALT_BREAK) break;
else if (tmp_26_default_flag == ALT_REPEAT) goto tmp_26;
}
current_location.update_lineno(545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 545 */
if (tmp_26_alt_flag_0 == ALT_NO && tmp_26_alt_flag_1 == ALT_NO && tmp_26_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 545 and 556.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 559 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 560 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BEA__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BEA_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BEA_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__BEA__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 567, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BEA_BV_03");
current_location.update_lineno(570);
/* ItsGeoNetworking_TpFunctions.ttcn, line 570 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(573);
/* ItsGeoNetworking_TpFunctions.ttcn, line 573 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(574);
/* ItsGeoNetworking_TpFunctions.ttcn, line 574 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 575 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 576 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 580 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 581 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 586 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 587 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 588 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 589 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 592 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 593 */
{
tmp_28:
alt_status tmp_28_alt_flag_0 = ALT_MAYBE;
alt_status tmp_28_alt_flag_1 = ALT_MAYBE;
alt_status tmp_28_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_28_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 594 */
tmp_28_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_28_alt_flag_0 == ALT_YES) {
current_location.update_lineno(595);
/* ItsGeoNetworking_TpFunctions.ttcn, line 595 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 596 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_23).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 597 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_28_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(599);
/* ItsGeoNetworking_TpFunctions.ttcn, line 599 */
tmp_28_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_28_alt_flag_1 == ALT_YES) {
current_location.update_lineno(600);
/* ItsGeoNetworking_TpFunctions.ttcn, line 600 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 601 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_28_default_flag == ALT_MAYBE) {
tmp_28_default_flag = TTCN_Default::try_altsteps();
if (tmp_28_default_flag == ALT_YES || tmp_28_default_flag == ALT_BREAK) break;
else if (tmp_28_default_flag == ALT_REPEAT) goto tmp_28;
}
current_location.update_lineno(593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 593 */
if (tmp_28_alt_flag_0 == ALT_NO && tmp_28_alt_flag_1 == ALT_NO && tmp_28_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 593 and 603.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 606 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 607 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BEA__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BEA_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BEA_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__BEA__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 614, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_BEA_BV_04");
current_location.update_lineno(617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 617 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(620);
/* ItsGeoNetworking_TpFunctions.ttcn, line 620 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(621);
/* ItsGeoNetworking_TpFunctions.ttcn, line 621 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 622 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 623 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 627 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 628 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 633 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 634 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 635 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 636 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 639 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 640 */
{
tmp_30:
alt_status tmp_30_alt_flag_0 = ALT_MAYBE;
alt_status tmp_30_alt_flag_1 = ALT_MAYBE;
alt_status tmp_30_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_30_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(641);
/* ItsGeoNetworking_TpFunctions.ttcn, line 641 */
tmp_30_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_30_alt_flag_0 == ALT_YES) {
current_location.update_lineno(642);
/* ItsGeoNetworking_TpFunctions.ttcn, line 642 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(643);
/* ItsGeoNetworking_TpFunctions.ttcn, line 643 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_24).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(644);
/* ItsGeoNetworking_TpFunctions.ttcn, line 644 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_30_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 646 */
tmp_30_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_30_alt_flag_1 == ALT_YES) {
current_location.update_lineno(647);
/* ItsGeoNetworking_TpFunctions.ttcn, line 647 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(648);
/* ItsGeoNetworking_TpFunctions.ttcn, line 648 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_30_default_flag == ALT_MAYBE) {
tmp_30_default_flag = TTCN_Default::try_altsteps();
if (tmp_30_default_flag == ALT_YES || tmp_30_default_flag == ALT_BREAK) break;
else if (tmp_30_default_flag == ALT_REPEAT) goto tmp_30;
}
current_location.update_lineno(640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 640 */
if (tmp_30_alt_flag_0 == ALT_NO && tmp_30_alt_flag_1 == ALT_NO && tmp_30_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 640 and 650.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 653 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(654);
/* ItsGeoNetworking_TpFunctions.ttcn, line 654 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__BEA__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_BEA_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_BEA_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__GUC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 666, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_GUC_BV_01");
current_location.update_lineno(669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 669 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 670 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(673);
/* ItsGeoNetworking_TpFunctions.ttcn, line 673 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 674 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 675 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 676 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 680 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 685 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 686 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(687);
/* ItsGeoNetworking_TpFunctions.ttcn, line 687 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(688);
/* ItsGeoNetworking_TpFunctions.ttcn, line 688 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(691);
/* ItsGeoNetworking_TpFunctions.ttcn, line 691 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr()))))) {
current_location.update_lineno(692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 692 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(693);
/* ItsGeoNetworking_TpFunctions.ttcn, line 693 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 696 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 697 */
{
tmp_33:
alt_status tmp_33_alt_flag_0 = ALT_MAYBE;
alt_status tmp_33_alt_flag_1 = ALT_MAYBE;
alt_status tmp_33_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_33_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 698 */
tmp_33_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacketWithSourcePv(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_33_alt_flag_0 == ALT_YES) {
current_location.update_lineno(709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 709 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 711 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_26).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 712 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_33_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(714);
/* ItsGeoNetworking_TpFunctions.ttcn, line 714 */
tmp_33_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_33_alt_flag_1 == ALT_YES) {
current_location.update_lineno(715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 715 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_27).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 716 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_33_default_flag == ALT_MAYBE) {
tmp_33_default_flag = TTCN_Default::try_altsteps();
if (tmp_33_default_flag == ALT_YES || tmp_33_default_flag == ALT_BREAK) break;
else if (tmp_33_default_flag == ALT_REPEAT) goto tmp_33;
}
current_location.update_lineno(697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 697 */
if (tmp_33_alt_flag_0 == ALT_NO && tmp_33_alt_flag_1 == ALT_NO && tmp_33_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 697 and 718.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(721);
/* ItsGeoNetworking_TpFunctions.ttcn, line 721 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(722);
/* ItsGeoNetworking_TpFunctions.ttcn, line 722 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__GUC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_GUC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_GUC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__GBC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 734, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_GBC_BV_01");
current_location.update_lineno(737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 737 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(738);
/* ItsGeoNetworking_TpFunctions.ttcn, line 738 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(739);
/* ItsGeoNetworking_TpFunctions.ttcn, line 739 */
OCTETSTRING v__payload(os_0);
current_location.update_lineno(742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 742 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 743 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 744 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 745 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 749 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 754 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 755 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 756 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(757);
/* ItsGeoNetworking_TpFunctions.ttcn, line 757 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(760);
/* ItsGeoNetworking_TpFunctions.ttcn, line 760 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessageWithPayload(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1), v__payload))))) {
current_location.update_lineno(761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 761 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 762 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(764);
/* ItsGeoNetworking_TpFunctions.ttcn, line 764 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(765);
/* ItsGeoNetworking_TpFunctions.ttcn, line 765 */
{
tmp_36:
alt_status tmp_36_alt_flag_0 = ALT_MAYBE;
alt_status tmp_36_alt_flag_1 = ALT_MAYBE;
alt_status tmp_36_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_36_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 766 */
tmp_36_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__TypesAndValues::Payload_template(ANY_VALUE)), NULL, any_compref, NULL);
if (tmp_36_alt_flag_0 == ALT_YES) {
current_location.update_lineno(779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 779 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(780);
/* ItsGeoNetworking_TpFunctions.ttcn, line 780 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_29).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(781);
/* ItsGeoNetworking_TpFunctions.ttcn, line 781 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_36_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(783);
/* ItsGeoNetworking_TpFunctions.ttcn, line 783 */
tmp_36_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_36_alt_flag_1 == ALT_YES) {
current_location.update_lineno(784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 784 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 785 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_36_default_flag == ALT_MAYBE) {
tmp_36_default_flag = TTCN_Default::try_altsteps();
if (tmp_36_default_flag == ALT_YES || tmp_36_default_flag == ALT_BREAK) break;
else if (tmp_36_default_flag == ALT_REPEAT) goto tmp_36;
}
current_location.update_lineno(765);
/* ItsGeoNetworking_TpFunctions.ttcn, line 765 */
if (tmp_36_alt_flag_0 == ALT_NO && tmp_36_alt_flag_1 == ALT_NO && tmp_36_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 765 and 787.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 790 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 791 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__GBC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_GBC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_GBC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__GAC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 803, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_GAC_BV_01");
current_location.update_lineno(806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 806 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(807);
/* ItsGeoNetworking_TpFunctions.ttcn, line 807 */
OCTETSTRING v__payload(os_0);
current_location.update_lineno(810);
/* ItsGeoNetworking_TpFunctions.ttcn, line 810 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 811 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(812);
/* ItsGeoNetworking_TpFunctions.ttcn, line 812 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 813 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 817 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 822 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 823 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 824 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 827 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoAnycastMessageWithPayload(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1), v__payload))))) {
current_location.update_lineno(828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 828 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(829);
/* ItsGeoNetworking_TpFunctions.ttcn, line 829 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 831 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 832 */
{
tmp_38:
alt_status tmp_38_alt_flag_0 = ALT_MAYBE;
alt_status tmp_38_alt_flag_1 = ALT_MAYBE;
alt_status tmp_38_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_38_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 833 */
tmp_38_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__TypesAndValues::Payload_template(ANY_VALUE)), NULL, any_compref, NULL);
if (tmp_38_alt_flag_0 == ALT_YES) {
current_location.update_lineno(846);
/* ItsGeoNetworking_TpFunctions.ttcn, line 846 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 847 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_32).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(848);
/* ItsGeoNetworking_TpFunctions.ttcn, line 848 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_38_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 850 */
tmp_38_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_38_alt_flag_1 == ALT_YES) {
current_location.update_lineno(851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 851 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_33).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(852);
/* ItsGeoNetworking_TpFunctions.ttcn, line 852 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_38_default_flag == ALT_MAYBE) {
tmp_38_default_flag = TTCN_Default::try_altsteps();
if (tmp_38_default_flag == ALT_YES || tmp_38_default_flag == ALT_BREAK) break;
else if (tmp_38_default_flag == ALT_REPEAT) goto tmp_38;
}
current_location.update_lineno(832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 832 */
if (tmp_38_alt_flag_0 == ALT_NO && tmp_38_alt_flag_1 == ALT_NO && tmp_38_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 832 and 854.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 857 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 858 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__GAC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_GAC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_GAC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__SHB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 870, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_SHB_BV_01");
current_location.update_lineno(873);
/* ItsGeoNetworking_TpFunctions.ttcn, line 873 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 876 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__SHB__SRC))) {
current_location.update_lineno(877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 877 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_34).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(878);
/* ItsGeoNetworking_TpFunctions.ttcn, line 878 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(879);
/* ItsGeoNetworking_TpFunctions.ttcn, line 879 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 883 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(888);
/* ItsGeoNetworking_TpFunctions.ttcn, line 888 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(889);
/* ItsGeoNetworking_TpFunctions.ttcn, line 889 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(890);
/* ItsGeoNetworking_TpFunctions.ttcn, line 890 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(893);
/* ItsGeoNetworking_TpFunctions.ttcn, line 893 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessage)))) {
current_location.update_lineno(894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 894 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 895 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 897 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 898 */
{
tmp_40:
alt_status tmp_40_alt_flag_0 = ALT_MAYBE;
alt_status tmp_40_alt_flag_1 = ALT_MAYBE;
alt_status tmp_40_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_40_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 899 */
tmp_40_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(1)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_40_alt_flag_0 == ALT_YES) {
current_location.update_lineno(909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 909 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 910 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_35).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 911 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_40_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(913);
/* ItsGeoNetworking_TpFunctions.ttcn, line 913 */
tmp_40_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_40_alt_flag_1 == ALT_YES) {
current_location.update_lineno(914);
/* ItsGeoNetworking_TpFunctions.ttcn, line 914 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_36).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 915 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_40_default_flag == ALT_MAYBE) {
tmp_40_default_flag = TTCN_Default::try_altsteps();
if (tmp_40_default_flag == ALT_YES || tmp_40_default_flag == ALT_BREAK) break;
else if (tmp_40_default_flag == ALT_REPEAT) goto tmp_40;
}
current_location.update_lineno(898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 898 */
if (tmp_40_alt_flag_0 == ALT_NO && tmp_40_alt_flag_1 == ALT_NO && tmp_40_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 898 and 917.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 920 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 921 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__SHB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_SHB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_SHB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__FDV__TSB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 933, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_FDV_TSB_BV_01");
current_location.update_lineno(936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 936 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 939 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__SRC))) {
current_location.update_lineno(940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 940 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_37).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 941 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(942);
/* ItsGeoNetworking_TpFunctions.ttcn, line 942 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 946 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 951 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 952 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(953);
/* ItsGeoNetworking_TpFunctions.ttcn, line 953 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 956 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateTsbMessage)))) {
current_location.update_lineno(957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 957 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 958 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(960);
/* ItsGeoNetworking_TpFunctions.ttcn, line 960 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 961 */
{
tmp_42:
alt_status tmp_42_alt_flag_0 = ALT_MAYBE;
alt_status tmp_42_alt_flag_1 = ALT_MAYBE;
alt_status tmp_42_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_42_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(962);
/* ItsGeoNetworking_TpFunctions.ttcn, line 962 */
tmp_42_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_42_alt_flag_0 == ALT_YES) {
current_location.update_lineno(972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 972 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 973 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_38).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 974 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_42_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(976);
/* ItsGeoNetworking_TpFunctions.ttcn, line 976 */
tmp_42_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_42_alt_flag_1 == ALT_YES) {
current_location.update_lineno(977);
/* ItsGeoNetworking_TpFunctions.ttcn, line 977 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_39).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 978 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_42_default_flag == ALT_MAYBE) {
tmp_42_default_flag = TTCN_Default::try_altsteps();
if (tmp_42_default_flag == ALT_YES || tmp_42_default_flag == ALT_BREAK) break;
else if (tmp_42_default_flag == ALT_REPEAT) goto tmp_42;
}
current_location.update_lineno(961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 961 */
if (tmp_42_alt_flag_0 == ALT_NO && tmp_42_alt_flag_1 == ALT_NO && tmp_42_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 961 and 980.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 983 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 984 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__FDV__TSB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_FDV_TSB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_FDV_TSB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1001, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_01");
current_location.update_lineno(1004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1004 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1007 */
{
boolean tmp_43;
tmp_43 = (!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC));
if (!tmp_43) tmp_43 = (!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__DST));
if (tmp_43) {
current_location.update_lineno(1008);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1008 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_40).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1009 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1010 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(1014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1014 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1015 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(1020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1020 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(1021);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1021 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1024);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1024 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr()))))) {
current_location.update_lineno(1025);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1025 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1026);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1026 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1029 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1030 */
{
tmp_45:
alt_status tmp_45_alt_flag_0 = ALT_MAYBE;
alt_status tmp_45_alt_flag_1 = ALT_MAYBE;
alt_status tmp_45_alt_flag_2 = ALT_MAYBE;
alt_status tmp_45_alt_flag_3 = ALT_MAYBE;
alt_status tmp_45_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_45_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1031 */
tmp_45_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))));
if (tmp_45_alt_flag_0 == ALT_REPEAT) goto tmp_45;
if (tmp_45_alt_flag_0 == ALT_BREAK) break;
if (tmp_45_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1032 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1033);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1033 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_41).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1034);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1034 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_45_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1036 */
tmp_45_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(ANY_VALUE));
if (tmp_45_alt_flag_1 == ALT_REPEAT) goto tmp_45;
if (tmp_45_alt_flag_1 == ALT_BREAK) break;
if (tmp_45_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1037);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1037 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1038 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_42).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1039 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_45_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1041 */
tmp_45_alt_flag_2 = LibItsGeoNetworking__Functions::a__receiveAnyLsRequest_instance();
if (tmp_45_alt_flag_2 == ALT_REPEAT) goto tmp_45;
if (tmp_45_alt_flag_2 == ALT_BREAK) break;
if (tmp_45_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1042 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1043 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_43).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1044 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_45_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(1046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1046 */
tmp_45_alt_flag_3 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_45_alt_flag_3 == ALT_YES) {
current_location.update_lineno(1047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1047 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_44).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1048 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_45_default_flag == ALT_MAYBE) {
tmp_45_default_flag = TTCN_Default::try_altsteps();
if (tmp_45_default_flag == ALT_YES || tmp_45_default_flag == ALT_BREAK) break;
else if (tmp_45_default_flag == ALT_REPEAT) goto tmp_45;
}
current_location.update_lineno(1030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1030 */
if (tmp_45_alt_flag_0 == ALT_NO && tmp_45_alt_flag_1 == ALT_NO && tmp_45_alt_flag_2 == ALT_NO && tmp_45_alt_flag_3 == ALT_NO && tmp_45_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1030 and 1050.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1053);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1053 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(1054);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1054 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOT__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1061, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_02");
current_location.update_lineno(1064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1064 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(1065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1065 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1066 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(1067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1067 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__gnAddressNodeA;
current_location.update_lineno(1068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1068 */
BOOLEAN v__lsRequestReceived(FALSE);
current_location.update_lineno(1071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1071 */
{
boolean tmp_46;
tmp_46 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC));
if (!tmp_46) tmp_46 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REP__DST));
if (tmp_46) {
current_location.update_lineno(1072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1072 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_45).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1073 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1074);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1074 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(1078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1078 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1079 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(1080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1080 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(1081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1081 */
v__gnAddressNodeA = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr();
current_location.update_lineno(1086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1086 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(1088);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1088 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(1089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1089 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1090 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1092);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1092 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1093 */
{
tmp_50:
alt_status tmp_50_alt_flag_0 = ALT_MAYBE;
alt_status tmp_50_alt_flag_1 = ALT_MAYBE;
alt_status tmp_50_alt_flag_2 = ALT_MAYBE;
alt_status tmp_50_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_50_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1094);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1094 */
tmp_50_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequestAndReply_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::GN__Address&>(v__gnAddressNodeA).mid()), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB));
if (tmp_50_alt_flag_0 == ALT_REPEAT) goto tmp_50;
if (tmp_50_alt_flag_0 == ALT_BREAK) break;
if (tmp_50_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1098 */
v__lsRequestReceived = TRUE;
current_location.update_lineno(1099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1099 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_46).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1100 */
goto tmp_50;
}
}
if (tmp_50_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1102 */
tmp_50_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_50_alt_flag_1 == ALT_REPEAT) goto tmp_50;
if (tmp_50_alt_flag_1 == ALT_BREAK) break;
if (tmp_50_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1103 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1104 */
if ((v__lsRequestReceived == TRUE)) {
current_location.update_lineno(1105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1105 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_47).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
}
else {
current_location.update_lineno(1108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1108 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_48).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1109 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_50_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1112 */
tmp_50_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_50_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1113 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_49).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1114 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_50_default_flag == ALT_MAYBE) {
tmp_50_default_flag = TTCN_Default::try_altsteps();
if (tmp_50_default_flag == ALT_YES || tmp_50_default_flag == ALT_BREAK) break;
else if (tmp_50_default_flag == ALT_REPEAT) goto tmp_50;
}
current_location.update_lineno(1093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1093 */
if (tmp_50_alt_flag_0 == ALT_NO && tmp_50_alt_flag_1 == ALT_NO && tmp_50_alt_flag_2 == ALT_NO && tmp_50_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1093 and 1116.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1117);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1117 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1120);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1120 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(1121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1121 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1122 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1124 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1125 */
{
tmp_52:
alt_status tmp_52_alt_flag_0 = ALT_MAYBE;
alt_status tmp_52_alt_flag_1 = ALT_MAYBE;
alt_status tmp_52_alt_flag_2 = ALT_MAYBE;
alt_status tmp_52_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_52_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1126 */
tmp_52_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::GN__Address&>(v__gnAddressNodeA).mid()), v__longPosVectorIut);
if (tmp_52_alt_flag_0 == ALT_REPEAT) goto tmp_52;
if (tmp_52_alt_flag_0 == ALT_BREAK) break;
if (tmp_52_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1127 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1128 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_43).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1129 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_52_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1131);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1131 */
tmp_52_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_52_alt_flag_1 == ALT_REPEAT) goto tmp_52;
if (tmp_52_alt_flag_1 == ALT_BREAK) break;
if (tmp_52_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1132 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1133 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_50).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1134 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_52_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1137 */
tmp_52_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_52_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1138 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1139 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_52_default_flag == ALT_MAYBE) {
tmp_52_default_flag = TTCN_Default::try_altsteps();
if (tmp_52_default_flag == ALT_YES || tmp_52_default_flag == ALT_BREAK) break;
else if (tmp_52_default_flag == ALT_REPEAT) goto tmp_52;
}
current_location.update_lineno(1125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1125 */
if (tmp_52_alt_flag_0 == ALT_NO && tmp_52_alt_flag_1 == ALT_NO && tmp_52_alt_flag_2 == ALT_NO && tmp_52_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1125 and 1141.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1144 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(1145);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1145 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOT__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1154, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_01");
current_location.update_lineno(1157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1157 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(1160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1160 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__DST))) {
current_location.update_lineno(1161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1161 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_51).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1162 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1163 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1166 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode)));
current_location.update_lineno(1172);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1172 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1179, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_02");
current_location.update_lineno(1182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1182 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1185 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__DST))) {
current_location.update_lineno(1186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1186 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_52).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1187 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1188 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1191);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1191 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__getIutShortPosVector()), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval));
current_location.update_lineno(1199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1199 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1206, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_03");
current_location.update_lineno(1209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1209 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1212);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1212 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__DST))) {
current_location.update_lineno(1213);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1213 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_53).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1214 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1215 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1218 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval));
current_location.update_lineno(1226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1226 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1233, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_04");
current_location.update_lineno(1236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1236 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1239 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__DST))) {
current_location.update_lineno(1240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1240 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_54).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1241 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1242);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1242 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1245);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1245 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval));
current_location.update_lineno(1253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1253 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1260, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_05");
current_location.update_lineno(1263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1263 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1266 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__DST))) {
current_location.update_lineno(1267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1267 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_55).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1268 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1269 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1272);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1272 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval));
current_location.update_lineno(1279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1279 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1286, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_06");
current_location.update_lineno(1289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1289 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(1292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1292 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__SHB__DST))) {
current_location.update_lineno(1293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1293 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_56).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1294 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1295 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1298 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode)));
current_location.update_lineno(1304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1304 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1311, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_07");
current_location.update_lineno(1314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1314 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1317);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1317 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__DST))) {
current_location.update_lineno(1318);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1318 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_57).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1319);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1319 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1320 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1323 */
LibItsGeoNetworking__Functions::activate_a__receiveAnyLsReply();
current_location.update_lineno(1325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1325 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwLsRequestPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GN__Address_template(LibItsGeoNetworking__Functions::f__getIutGnLocalAddress())));
current_location.update_lineno(1333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1333 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__03__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1340, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_03_08");
current_location.update_lineno(1343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1343 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode(f__TP__GEONW__PON__LOT__BV__03__pre__1(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(1346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1346 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REP__DST))) {
current_location.update_lineno(1347);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1347 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_58).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1348 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1349 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1352 */
f__TP__GEONW__PON__LOT__BV__03__pre__2(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__getIutShortPosVector()), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)));
current_location.update_lineno(1360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1360 */
f__TP__GEONW__PON__LOT__BV__03__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNode));
}

void start_f__GEONW__PON__LOT__BV__03__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_03_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_03_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

LibItsGeoNetworking__TypesAndValues::LongPosVector f__TP__GEONW__PON__LOT__BV__03__pre__1(const CHARSTRING& p__nodeName)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1367, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_03_pre_1");
current_location.update_lineno(1370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1370 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNode;
current_location.update_lineno(1375);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1375 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1376 */
v__longPosVectorNode = LibItsGeoNetworking__Functions::f__getPosition(p__nodeName);
current_location.update_lineno(1381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1381 */
if ((p__nodeName == LibItsGeoNetworking__TypesAndValues::c__compNodeA)) {
current_location.update_lineno(1382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1382 */
LibItsGeoNetworking__Functions::f__prNeighbour();
}
else {
current_location.update_lineno(1385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1385 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
}
current_location.update_lineno(1388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1388 */
return v__longPosVectorNode;
}

void start_f__TP__GEONW__PON__LOT__BV__03__pre__1(const COMPONENT& component_reference, const CHARSTRING& p__nodeName)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_pre_1(");
p__nodeName.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_TP_GEONW_PON_LOT_BV_03_pre_1", text_buf);
p__nodeName.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__TP__GEONW__PON__LOT__BV__03__pre__2(const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1394, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_03_pre_2");
current_location.update_lineno(1397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1397 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(p__packet, LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
current_location.update_lineno(1400);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1400 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}

void start_f__TP__GEONW__PON__LOT__BV__03__pre__2(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_pre_2(");
p__packet.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_TP_GEONW_PON_LOT_BV_03_pre_2", text_buf);
p__packet.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__TP__GEONW__PON__LOT__BV__03__main(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVectorNode)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1406, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_03_main");
current_location.update_lineno(1409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1409 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(p__longPosVectorNode.gnAddr().valueof()))))) {
current_location.update_lineno(1410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1410 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1411 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1414 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1415 */
{
tmp_54:
alt_status tmp_54_alt_flag_0 = ALT_MAYBE;
alt_status tmp_54_alt_flag_1 = ALT_MAYBE;
alt_status tmp_54_alt_flag_2 = ALT_MAYBE;
alt_status tmp_54_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_54_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1416 */
tmp_54_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveAnyLsRequest_instance();
if (tmp_54_alt_flag_0 == ALT_REPEAT) goto tmp_54;
if (tmp_54_alt_flag_0 == ALT_BREAK) break;
if (tmp_54_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1417 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1418 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_43).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1419);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1419 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_54_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1421 */
tmp_54_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNode.valueof()))));
if (tmp_54_alt_flag_1 == ALT_REPEAT) goto tmp_54;
if (tmp_54_alt_flag_1 == ALT_BREAK) break;
if (tmp_54_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1422 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1423 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_41).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1424);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1424 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_54_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1426 */
tmp_54_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_54_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1427 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1428 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_54_default_flag == ALT_MAYBE) {
tmp_54_default_flag = TTCN_Default::try_altsteps();
if (tmp_54_default_flag == ALT_YES || tmp_54_default_flag == ALT_BREAK) break;
else if (tmp_54_default_flag == ALT_REPEAT) goto tmp_54;
}
current_location.update_lineno(1415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1415 */
if (tmp_54_alt_flag_0 == ALT_NO && tmp_54_alt_flag_1 == ALT_NO && tmp_54_alt_flag_2 == ALT_NO && tmp_54_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1415 and 1430.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1433 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(1434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1434 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__TP__GEONW__PON__LOT__BV__03__main(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVectorNode)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_main(");
p__longPosVectorNode.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_TP_GEONW_PON_LOT_BV_03_main", text_buf);
p__longPosVectorNode.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1443, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_04");
current_location.update_lineno(1446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1446 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1447 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(1450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1450 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(1451);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1451 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1452);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1452 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1453 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1457);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1457 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1458 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(1461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1461 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(1462);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1462 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB))), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
current_location.update_lineno(1463);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1463 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1466);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1466 */
LibCommon__Time::f__sleep((LibItsGeoNetworking__Functions::f__getLifetimeLocTableEntry() + LibItsGeoNetworking__Pixits::PX__T__DELTA));
current_location.update_lineno(1467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1467 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr()))))) {
current_location.update_lineno(1468);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1468 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1469);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1469 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1472 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1473 */
{
tmp_56:
alt_status tmp_56_alt_flag_0 = ALT_MAYBE;
alt_status tmp_56_alt_flag_1 = ALT_MAYBE;
alt_status tmp_56_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_56_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1474 */
tmp_56_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr().mid()), v__longPosVectorIut);
if (tmp_56_alt_flag_0 == ALT_REPEAT) goto tmp_56;
if (tmp_56_alt_flag_0 == ALT_BREAK) break;
if (tmp_56_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1475 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_60).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1476);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1476 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_56_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1478 */
tmp_56_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_56_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1479 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_61).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1480 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_56_default_flag == ALT_MAYBE) {
tmp_56_default_flag = TTCN_Default::try_altsteps();
if (tmp_56_default_flag == ALT_YES || tmp_56_default_flag == ALT_BREAK) break;
else if (tmp_56_default_flag == ALT_REPEAT) goto tmp_56;
}
current_location.update_lineno(1473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1473 */
if (tmp_56_alt_flag_0 == ALT_NO && tmp_56_alt_flag_1 == ALT_NO && tmp_56_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1473 and 1482.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1485 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(1486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1486 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOT__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1495, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_01");
current_location.update_lineno(1498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1498 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1499 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1502 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__DST))) {
current_location.update_lineno(1503);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1503 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_52).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1504 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1505 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1508 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1510 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__getIutShortPosVector()), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval));
current_location.update_lineno(1518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1518 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1525, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_02");
current_location.update_lineno(1528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1528 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1529);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1529 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1532 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__DST))) {
current_location.update_lineno(1533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1533 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_53).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1534 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1535 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1538 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1540 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval));
current_location.update_lineno(1548);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1548 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1555, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_03");
current_location.update_lineno(1558);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1558 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1559 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1562 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__DST))) {
current_location.update_lineno(1563);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1563 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_54).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1564);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1564 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1565);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1565 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1568 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1570);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1570 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval));
current_location.update_lineno(1578);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1578 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1585, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_04");
current_location.update_lineno(1588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1588 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1589 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1592 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__DST))) {
current_location.update_lineno(1593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1593 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_55).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1594 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1595);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1595 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1598);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1598 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1600);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1600 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval));
current_location.update_lineno(1607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1607 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1614, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_05");
current_location.update_lineno(1617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1617 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1618 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1621);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1621 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__SHB__DST))) {
current_location.update_lineno(1622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1622 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_56).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1623 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1624 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1627 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1629 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB)));
current_location.update_lineno(1635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1635 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1642, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_06");
current_location.update_lineno(1645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1645 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1646 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1649 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__DST))) {
current_location.update_lineno(1650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1650 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_57).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1651 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1652 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1655 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1657 */
LibItsGeoNetworking__Functions::activate_a__receiveAnyLsReply();
current_location.update_lineno(1659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1659 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwLsRequestPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GN__Address_template(LibItsGeoNetworking__Functions::f__getIutGnLocalAddress())));
current_location.update_lineno(1667);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1667 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOT__BV__05__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1674, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOT_BV_05_07");
current_location.update_lineno(1677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1677 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(1678);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1678 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeB;
current_location.update_lineno(1681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1681 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__DST))) {
current_location.update_lineno(1682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1682 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_57).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1683 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1684);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1684 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1687);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1687 */
f__TP__GEONW__PON__LOT__BV__05__pre__1(v__longPosVectorNodeB, v__obsoleteLongPosVectorNodeB);
current_location.update_lineno(1689);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1689 */
f__TP__GEONW__PON__LOT__BV__05__pre__2(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__getIutShortPosVector()), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)));
current_location.update_lineno(1697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1697 */
f__TP__GEONW__PON__LOT__BV__05__main(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__obsoleteLongPosVectorNodeB));
}

void start_f__GEONW__PON__LOT__BV__05__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOT_BV_05_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOT_BV_05_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__TP__GEONW__PON__LOT__BV__05__pre__1(LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeB, LibItsGeoNetworking__TypesAndValues::LongPosVector& p__obsoleteLongPosVectorNodeB)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1704, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_05_pre_1");
p__longPosVectorNodeB.clean_up();
p__obsoleteLongPosVectorNodeB.clean_up();
current_location.update_lineno(1711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1711 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1712 */
p__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(1713);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1713 */
p__obsoleteLongPosVectorNodeB = p__longPosVectorNodeB;
current_location.update_lineno(1714);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1714 */
{
INTEGER tmp_59;
tmp_59 = (const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(p__obsoleteLongPosVectorNodeB).timestamp() - 1000);
p__obsoleteLongPosVectorNodeB.timestamp() = tmp_59;
}
current_location.update_lineno(1715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1715 */
{
INTEGER tmp_60;
tmp_60 = (const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(p__obsoleteLongPosVectorNodeB).latitude() - 1);
p__obsoleteLongPosVectorNodeB.latitude() = tmp_60;
}
current_location.update_lineno(1720);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1720 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(1723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1723 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB))), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
}

void f__TP__GEONW__PON__LOT__BV__05__pre__2(const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1729, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_05_pre_2");
current_location.update_lineno(1732);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1732 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(p__packet, LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(1735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1735 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}

void start_f__TP__GEONW__PON__LOT__BV__05__pre__2(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_05_pre_2(");
p__packet.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_TP_GEONW_PON_LOT_BV_05_pre_2", text_buf);
p__packet.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__TP__GEONW__PON__LOT__BV__05__main(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVectorNodeB, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__obsoleteLongPosVectorNodeB)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1741, TTCN_Location::LOCATION_FUNCTION, "f_TP_GEONW_PON_LOT_BV_05_main");
current_location.update_lineno(1744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1744 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(p__longPosVectorNodeB.gnAddr().valueof()))))) {
current_location.update_lineno(1745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1745 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1746);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1746 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1749 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1750 */
{
tmp_61:
alt_status tmp_61_alt_flag_0 = ALT_MAYBE;
alt_status tmp_61_alt_flag_1 = ALT_MAYBE;
alt_status tmp_61_alt_flag_2 = ALT_MAYBE;
alt_status tmp_61_alt_flag_3 = ALT_MAYBE;
alt_status tmp_61_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_61_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1751 */
tmp_61_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveAnyLsRequest_instance();
if (tmp_61_alt_flag_0 == ALT_REPEAT) goto tmp_61;
if (tmp_61_alt_flag_0 == ALT_BREAK) break;
if (tmp_61_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1752 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1753 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_43).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1754 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_61_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1756 */
tmp_61_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__obsoleteLongPosVectorNodeB.valueof()))));
if (tmp_61_alt_flag_1 == ALT_REPEAT) goto tmp_61;
if (tmp_61_alt_flag_1 == ALT_BREAK) break;
if (tmp_61_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1757);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1757 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1758 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_62).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1759);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1759 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_61_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1761 */
tmp_61_alt_flag_2 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeB.valueof()))));
if (tmp_61_alt_flag_2 == ALT_REPEAT) goto tmp_61;
if (tmp_61_alt_flag_2 == ALT_BREAK) break;
if (tmp_61_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1762 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1763);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1763 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_63).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1764);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1764 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_61_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(1766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1766 */
tmp_61_alt_flag_3 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_61_alt_flag_3 == ALT_YES) {
current_location.update_lineno(1767);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1767 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1768);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1768 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_61_default_flag == ALT_MAYBE) {
tmp_61_default_flag = TTCN_Default::try_altsteps();
if (tmp_61_default_flag == ALT_YES || tmp_61_default_flag == ALT_BREAK) break;
else if (tmp_61_default_flag == ALT_REPEAT) goto tmp_61;
}
current_location.update_lineno(1750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1750 */
if (tmp_61_alt_flag_0 == ALT_NO && tmp_61_alt_flag_1 == ALT_NO && tmp_61_alt_flag_2 == ALT_NO && tmp_61_alt_flag_3 == ALT_NO && tmp_61_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1750 and 1770.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1773);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1773 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(1774);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1774 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__TP__GEONW__PON__LOT__BV__05__main(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVectorNodeB, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__obsoleteLongPosVectorNodeB)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_05_main(");
p__longPosVectorNodeB.log();
TTCN_Logger::log_event_str(", ");
p__obsoleteLongPosVectorNodeB.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_TP_GEONW_PON_LOT_BV_05_main", text_buf);
p__longPosVectorNodeB.encode_text(text_buf);
p__obsoleteLongPosVectorNodeB.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LPV__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1788, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LPV_BV_01");
current_location.update_lineno(1791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1791 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(1792);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1792 */
LibItsGeoNetworking__TypesAndValues::LongPosVector_template v__previouslongPosVectorIut;
current_location.update_lineno(1793);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1793 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNwInd;
current_location.update_lineno(1796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1796 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(1797);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1797 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1798);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1798 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1799);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1799 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1803 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1804);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1804 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(1805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1805 */
v__previouslongPosVectorIut = v__longPosVectorIut;
current_location.update_lineno(1806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1806 */
v__previouslongPosVectorIut.timestamp() = ANY_VALUE;
current_location.update_lineno(1811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1811 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(1812);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1812 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(1813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1813 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(1814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1814 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1815 */
{
tmp_65:
alt_status tmp_65_alt_flag_0 = ALT_MAYBE;
alt_status tmp_65_alt_flag_1 = ALT_MAYBE;
alt_status tmp_65_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_65_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1816);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1816 */
tmp_65_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorAny(LibItsGeoNetworking__TypesAndValues::GN__Address_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorIut).gnAddr())), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNwInd), any_compref, NULL);
if (tmp_65_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1821 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1822 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_64).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1823 */
v__longPosVectorIut = const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().extendedHeader()().beaconHeader().srcPosVector();
break;
}
}
if (tmp_65_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1825 */
tmp_65_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_65_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1826);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1826 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1827 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_65_default_flag == ALT_MAYBE) {
tmp_65_default_flag = TTCN_Default::try_altsteps();
if (tmp_65_default_flag == ALT_YES || tmp_65_default_flag == ALT_BREAK) break;
else if (tmp_65_default_flag == ALT_REPEAT) goto tmp_65;
}
current_location.update_lineno(1815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1815 */
if (tmp_65_alt_flag_0 == ALT_NO && tmp_65_alt_flag_1 == ALT_NO && tmp_65_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1815 and 1829.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1830);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1830 */
LibItsGeoNetworking__Functions::f__utChangePosition();
current_location.update_lineno(1831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1831 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1834 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.clear();
current_location.update_lineno(1835);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1835 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1836 */
{
tmp_67:
alt_status tmp_67_alt_flag_0 = ALT_MAYBE;
alt_status tmp_67_alt_flag_1 = ALT_MAYBE;
alt_status tmp_67_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_67_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1837);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1837 */
tmp_67_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorAny(LibItsGeoNetworking__TypesAndValues::GN__Address_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorIut).gnAddr())), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNwInd), any_compref, NULL);
if (tmp_67_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1842);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1842 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1844 */
if (v__previouslongPosVectorIut.match(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().extendedHeader()().beaconHeader().srcPosVector(), TRUE)) {
current_location.update_lineno(1845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1845 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_66).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1846);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1846 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(1849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1849 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_67).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1850 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_67_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1853 */
tmp_67_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_67_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1854);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1854 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1855 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_67_default_flag == ALT_MAYBE) {
tmp_67_default_flag = TTCN_Default::try_altsteps();
if (tmp_67_default_flag == ALT_YES || tmp_67_default_flag == ALT_BREAK) break;
else if (tmp_67_default_flag == ALT_REPEAT) goto tmp_67;
}
current_location.update_lineno(1836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1836 */
if (tmp_67_alt_flag_0 == ALT_NO && tmp_67_alt_flag_1 == ALT_NO && tmp_67_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1836 and 1857.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1858 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__stopPassBeaconing);
current_location.update_lineno(1861);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1861 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(1862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1862 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LPV__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LPV_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LPV_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SQN__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1874, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SQN_BV_01");
current_location.update_lineno(1877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1877 */
INTEGER v__expectedSequenceNumber(0);
current_location.update_lineno(1878);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1878 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(1881);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1881 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(1882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1882 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1883 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1884);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1884 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1888);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1888 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1889);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1889 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(1894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1894 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(1895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1895 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1898 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(1899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1899 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1900 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1903 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1904 */
{
tmp_69:
alt_status tmp_69_alt_flag_0 = ALT_MAYBE;
alt_status tmp_69_alt_flag_1 = ALT_MAYBE;
alt_status tmp_69_alt_flag_2 = ALT_MAYBE;
alt_status tmp_69_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_69_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1905 */
tmp_69_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(v__expectedSequenceNumber));
if (tmp_69_alt_flag_0 == ALT_REPEAT) goto tmp_69;
if (tmp_69_alt_flag_0 == ALT_BREAK) break;
if (tmp_69_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1908);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1908 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1909 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_68).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1910 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_69_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1912 */
tmp_69_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(v__expectedSequenceNumber));
if (tmp_69_alt_flag_1 == ALT_REPEAT) goto tmp_69;
if (tmp_69_alt_flag_1 == ALT_BREAK) break;
if (tmp_69_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1915 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1916 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_69).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1917 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_69_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(1919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1919 */
tmp_69_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_69_alt_flag_2 == ALT_YES) {
current_location.update_lineno(1920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1920 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1921 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_69_default_flag == ALT_MAYBE) {
tmp_69_default_flag = TTCN_Default::try_altsteps();
if (tmp_69_default_flag == ALT_YES || tmp_69_default_flag == ALT_BREAK) break;
else if (tmp_69_default_flag == ALT_REPEAT) goto tmp_69;
}
current_location.update_lineno(1904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1904 */
if (tmp_69_alt_flag_0 == ALT_NO && tmp_69_alt_flag_1 == ALT_NO && tmp_69_alt_flag_2 == ALT_NO && tmp_69_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1904 and 1923.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1926);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1926 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(1927);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1927 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__SQN__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SQN_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SQN_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SQN__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 1934, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SQN_BV_02");
current_location.update_lineno(1937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1937 */
INTEGER v__expectedSequenceNumber(0);
current_location.update_lineno(1938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1938 */
INTEGER v__nbReceivedPackets(0);
current_location.update_lineno(1939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1939 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNwInd;
current_location.update_lineno(1940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1940 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(1943);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1943 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(1944);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1944 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1945 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(1946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1946 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(1950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1950 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(1951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1951 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(1956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1956 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(1957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1957 */
LibCommon__Time::f__sleep(1.0e1);
current_location.update_lineno(1959);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1959 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(1960);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1960 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1961 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1963 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1964 */
{
tmp_71:
alt_status tmp_71_alt_flag_0 = ALT_MAYBE;
alt_status tmp_71_alt_flag_1 = ALT_MAYBE;
alt_status tmp_71_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_71_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1966);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1966 */
tmp_71_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNwInd), any_compref, NULL);
if (tmp_71_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1970 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1971);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1971 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_70).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1972 */
v__expectedSequenceNumber = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNwInd).msgIn().gnPacket().packet().extendedHeader()().geoBroadcastHeader().seqNumber() + 1);
break;
}
}
if (tmp_71_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(1974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1974 */
tmp_71_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_71_alt_flag_1 == ALT_YES) {
current_location.update_lineno(1975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1975 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1976);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1976 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_71_default_flag == ALT_MAYBE) {
tmp_71_default_flag = TTCN_Default::try_altsteps();
if (tmp_71_default_flag == ALT_YES || tmp_71_default_flag == ALT_BREAK) break;
else if (tmp_71_default_flag == ALT_REPEAT) goto tmp_71;
}
current_location.update_lineno(1964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1964 */
if (tmp_71_alt_flag_0 == ALT_NO && tmp_71_alt_flag_1 == ALT_NO && tmp_71_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1964 and 1978.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(1979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1979 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(1982);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1982 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(1983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1983 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1984 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(1986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1986 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(1987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1987 */
{
tmp_73:
alt_status tmp_73_alt_flag_0 = ALT_MAYBE;
alt_status tmp_73_alt_flag_1 = ALT_MAYBE;
alt_status tmp_73_alt_flag_2 = ALT_MAYBE;
alt_status tmp_73_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_73_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(1988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1988 */
tmp_73_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(v__expectedSequenceNumber));
if (tmp_73_alt_flag_0 == ALT_REPEAT) goto tmp_73;
if (tmp_73_alt_flag_0 == ALT_BREAK) break;
if (tmp_73_alt_flag_0 == ALT_YES) {
current_location.update_lineno(1991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1991 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(1992);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1992 */
{
INTEGER tmp_74;
++v__nbReceivedPackets;
}
current_location.update_lineno(1993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1993 */
if ((v__nbReceivedPackets >= LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) {
current_location.update_lineno(1994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1994 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_71).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(1995);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1995 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(1998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1998 */
{
INTEGER tmp_75;
++v__expectedSequenceNumber;
}
current_location.update_lineno(1999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1999 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(2000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2000 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2001 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2003 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2004 */
goto tmp_73;
}
break;
}
}
if (tmp_73_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2007 */
tmp_73_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE));
if (tmp_73_alt_flag_1 == ALT_REPEAT) goto tmp_73;
if (tmp_73_alt_flag_1 == ALT_BREAK) break;
if (tmp_73_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2010 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2011);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2011 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_69).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2012);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2012 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_73_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(2014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2014 */
tmp_73_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_73_alt_flag_2 == ALT_YES) {
current_location.update_lineno(2015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2015 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2016 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_73_default_flag == ALT_MAYBE) {
tmp_73_default_flag = TTCN_Default::try_altsteps();
if (tmp_73_default_flag == ALT_YES || tmp_73_default_flag == ALT_BREAK) break;
else if (tmp_73_default_flag == ALT_REPEAT) goto tmp_73;
}
current_location.update_lineno(1987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 1987 */
if (tmp_73_alt_flag_0 == ALT_NO && tmp_73_alt_flag_1 == ALT_NO && tmp_73_alt_flag_2 == ALT_NO && tmp_73_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 1987 and 2018.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2021);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2021 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2022 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__SQN__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SQN_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SQN_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2034, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_01");
current_location.update_lineno(2037);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2037 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2038 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__gnAddressNodeA;
current_location.update_lineno(2041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2041 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(2042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2042 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2043 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2044 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2048 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2049 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(2050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2050 */
v__gnAddressNodeA = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorA).gnAddr();
current_location.update_lineno(2055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2055 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2056 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2059);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2059 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(v__gnAddressNodeA))))) {
current_location.update_lineno(2060);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2060 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2061 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2064 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2065 */
{
tmp_77:
alt_status tmp_77_alt_flag_0 = ALT_MAYBE;
alt_status tmp_77_alt_flag_1 = ALT_MAYBE;
alt_status tmp_77_alt_flag_2 = ALT_MAYBE;
alt_status tmp_77_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_77_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2066 */
tmp_77_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::GN__Address&>(v__gnAddressNodeA).mid()), v__longPosVectorIut);
if (tmp_77_alt_flag_0 == ALT_REPEAT) goto tmp_77;
if (tmp_77_alt_flag_0 == ALT_BREAK) break;
if (tmp_77_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2071 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2072 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_60).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2073 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_77_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2075 */
tmp_77_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveAnyLsRequest_instance();
if (tmp_77_alt_flag_1 == ALT_REPEAT) goto tmp_77;
if (tmp_77_alt_flag_1 == ALT_BREAK) break;
if (tmp_77_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2076 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2077 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_72).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2078 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_77_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(2080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2080 */
tmp_77_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_77_alt_flag_2 == ALT_YES) {
current_location.update_lineno(2081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2081 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2082 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_77_default_flag == ALT_MAYBE) {
tmp_77_default_flag = TTCN_Default::try_altsteps();
if (tmp_77_default_flag == ALT_YES || tmp_77_default_flag == ALT_BREAK) break;
else if (tmp_77_default_flag == ALT_REPEAT) goto tmp_77;
}
current_location.update_lineno(2065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2065 */
if (tmp_77_alt_flag_0 == ALT_NO && tmp_77_alt_flag_1 == ALT_NO && tmp_77_alt_flag_2 == ALT_NO && tmp_77_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2065 and 2084.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2087 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2088);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2088 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2095, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_02");
current_location.update_lineno(2098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2098 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2099 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__gnAddressNodeA;
current_location.update_lineno(2102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2102 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(2103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2103 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2104 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2105 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2109 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2110);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2110 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(2111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2111 */
v__gnAddressNodeA = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorA).gnAddr();
current_location.update_lineno(2116);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2116 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2117);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2117 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(v__gnAddressNodeA))))) {
current_location.update_lineno(2118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2118 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2119);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2119 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2121 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2122 */
{
tmp_79:
alt_status tmp_79_alt_flag_0 = ALT_MAYBE;
alt_status tmp_79_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_79_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2123);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2123 */
tmp_79_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::GN__Address&>(v__gnAddressNodeA).mid()), v__longPosVectorIut);
if (tmp_79_alt_flag_0 == ALT_REPEAT) goto tmp_79;
if (tmp_79_alt_flag_0 == ALT_BREAK) break;
if (tmp_79_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2124 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2126 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start((LibItsGeoNetworking__Functions::f__getLsRetransmitTimer() - LibItsGeoNetworking__Functions::f__getDeltaTimer()));
break;
}
}
if (tmp_79_default_flag == ALT_MAYBE) {
tmp_79_default_flag = TTCN_Default::try_altsteps();
if (tmp_79_default_flag == ALT_YES || tmp_79_default_flag == ALT_BREAK) break;
else if (tmp_79_default_flag == ALT_REPEAT) goto tmp_79;
}
current_location.update_lineno(2122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2122 */
if (tmp_79_alt_flag_0 == ALT_NO && tmp_79_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2122 and 2128.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2129 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2132 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(v__gnAddressNodeA))))) {
current_location.update_lineno(2133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2133 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2134 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2137 */
{
tmp_80:
alt_status tmp_80_alt_flag_0 = ALT_MAYBE;
alt_status tmp_80_alt_flag_1 = ALT_MAYBE;
alt_status tmp_80_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_80_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2138 */
tmp_80_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::GN__Address&>(v__gnAddressNodeA).mid()), v__longPosVectorIut);
if (tmp_80_alt_flag_0 == ALT_REPEAT) goto tmp_80;
if (tmp_80_alt_flag_0 == ALT_BREAK) break;
if (tmp_80_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2139 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2140 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_73).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2141 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_80_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2143 */
tmp_80_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_80_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2144 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_74).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2145);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2145 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_80_default_flag == ALT_MAYBE) {
tmp_80_default_flag = TTCN_Default::try_altsteps();
if (tmp_80_default_flag == ALT_YES || tmp_80_default_flag == ALT_BREAK) break;
else if (tmp_80_default_flag == ALT_REPEAT) goto tmp_80;
}
current_location.update_lineno(2137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2137 */
if (tmp_80_alt_flag_0 == ALT_NO && tmp_80_alt_flag_1 == ALT_NO && tmp_80_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2137 and 2147.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2150);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2150 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2151 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2158, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_03");
current_location.update_lineno(2161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2161 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2162 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2163 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(2166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2166 */
{
boolean tmp_81;
tmp_81 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC));
if (!tmp_81) tmp_81 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REP__DST));
if (tmp_81) {
current_location.update_lineno(2167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2167 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_45).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2168);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2168 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2169 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(2173);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2173 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2174 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2179);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2179 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2180);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2180 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(2181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2181 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2182 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2184 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2185 */
{
tmp_83:
alt_status tmp_83_alt_flag_0 = ALT_MAYBE;
alt_status tmp_83_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_83_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2186 */
tmp_83_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_83_alt_flag_0 == ALT_REPEAT) goto tmp_83;
if (tmp_83_alt_flag_0 == ALT_BREAK) break;
if (tmp_83_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2187 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
break;
}
}
if (tmp_83_default_flag == ALT_MAYBE) {
tmp_83_default_flag = TTCN_Default::try_altsteps();
if (tmp_83_default_flag == ALT_YES || tmp_83_default_flag == ALT_BREAK) break;
else if (tmp_83_default_flag == ALT_REPEAT) goto tmp_83;
}
current_location.update_lineno(2185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2185 */
if (tmp_83_alt_flag_0 == ALT_NO && tmp_83_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2185 and 2189.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2190);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2190 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2193 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(2205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2205 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2206 */
{
tmp_84:
alt_status tmp_84_alt_flag_0 = ALT_MAYBE;
alt_status tmp_84_alt_flag_1 = ALT_MAYBE;
alt_status tmp_84_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_84_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2208);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2208 */
tmp_84_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_84_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2218 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2221);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2221 */
if ((LibItsGeoNetworking__Functions::f__getLifetimeValue(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().basicHeader().lifeTime()) < LibItsGeoNetworking__Functions::f__getMaxPacketLifeTime())) {
current_location.update_lineno(2222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2222 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_75).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2223);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2223 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2226 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_76).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2227 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_84_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2230 */
tmp_84_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_84_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2231 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_77).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2232 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_84_default_flag == ALT_MAYBE) {
tmp_84_default_flag = TTCN_Default::try_altsteps();
if (tmp_84_default_flag == ALT_YES || tmp_84_default_flag == ALT_BREAK) break;
else if (tmp_84_default_flag == ALT_REPEAT) goto tmp_84;
}
current_location.update_lineno(2206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2206 */
if (tmp_84_alt_flag_0 == ALT_NO && tmp_84_alt_flag_1 == ALT_NO && tmp_84_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2206 and 2235.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2238);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2238 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2239 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2246, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_04");
current_location.update_lineno(2249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2249 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2250 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2251 */
OCTETSTRING v__payload1(os_1);
current_location.update_lineno(2252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2252 */
OCTETSTRING v__payload2(os_2);
current_location.update_lineno(2253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2253 */
BOOLEAN v__msg1Received(FALSE);
current_location.update_lineno(2254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2254 */
BOOLEAN v__msg2Received(FALSE);
current_location.update_lineno(2255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2255 */
BOOLEAN v__firstLsRequestReceived(FALSE);
current_location.update_lineno(2258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2258 */
{
boolean tmp_85;
tmp_85 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC));
if (!tmp_85) tmp_85 = (!(LibItsGeoNetworking__Pics::PICS__GN__LS__REP__DST));
if (tmp_85) {
current_location.update_lineno(2259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2259 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_45).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2260);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2260 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2261);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2261 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(2265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2265 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2266 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2271 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2273 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), v__payload1))))) {
current_location.update_lineno(2274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2274 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2275 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2278 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2279 */
{
tmp_87:
alt_status tmp_87_alt_flag_0 = ALT_MAYBE;
alt_status tmp_87_alt_flag_1 = ALT_MAYBE;
alt_status tmp_87_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_87_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2280 */
tmp_87_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_87_alt_flag_0 == ALT_REPEAT) goto tmp_87;
if (tmp_87_alt_flag_0 == ALT_BREAK) break;
if (tmp_87_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2281 */
if ((v__firstLsRequestReceived == TRUE)) {
current_location.update_lineno(2282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2282 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_78).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2283);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2283 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2284 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(2290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2290 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2293 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_79).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2294 */
v__firstLsRequestReceived = TRUE;
current_location.update_lineno(2295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2295 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), v__payload2))))) {
current_location.update_lineno(2296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2296 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2297);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2297 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2299 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2300 */
goto tmp_87;
}
break;
}
}
if (tmp_87_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2303 */
tmp_87_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_87_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2304 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2305 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_87_default_flag == ALT_MAYBE) {
tmp_87_default_flag = TTCN_Default::try_altsteps();
if (tmp_87_default_flag == ALT_YES || tmp_87_default_flag == ALT_BREAK) break;
else if (tmp_87_default_flag == ALT_REPEAT) goto tmp_87;
}
current_location.update_lineno(2279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2279 */
if (tmp_87_alt_flag_0 == ALT_NO && tmp_87_alt_flag_1 == ALT_NO && tmp_87_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2279 and 2307.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2310 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2311);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2311 */
{
tmp_89:
alt_status tmp_89_alt_flag_0 = ALT_MAYBE;
alt_status tmp_89_alt_flag_1 = ALT_MAYBE;
alt_status tmp_89_alt_flag_2 = ALT_MAYBE;
alt_status tmp_89_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_89_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2312);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2312 */
tmp_89_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__Templates::f__adaptPayload__mw(OCTETSTRING_template(v__payload1))), NULL, any_compref, NULL);
if (tmp_89_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2325 */
v__msg1Received = TRUE;
current_location.update_lineno(2326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2326 */
if (v__msg2Received) {
current_location.update_lineno(2327);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2327 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_80).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2328);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2328 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(2331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2331 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_81).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2332 */
goto tmp_89;
}
break;
}
}
if (tmp_89_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2335);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2335 */
tmp_89_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__Templates::f__adaptPayload__mw(OCTETSTRING_template(v__payload2))), NULL, any_compref, NULL);
if (tmp_89_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2348 */
v__msg2Received = TRUE;
current_location.update_lineno(2349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2349 */
if (v__msg1Received) {
current_location.update_lineno(2350);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2350 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_82).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2351);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2351 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2354 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_83).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2355 */
goto tmp_89;
}
break;
}
}
if (tmp_89_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(2358);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2358 */
tmp_89_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_89_alt_flag_2 == ALT_YES) {
current_location.update_lineno(2359);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2359 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_84).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2360 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_89_default_flag == ALT_MAYBE) {
tmp_89_default_flag = TTCN_Default::try_altsteps();
if (tmp_89_default_flag == ALT_YES || tmp_89_default_flag == ALT_BREAK) break;
else if (tmp_89_default_flag == ALT_REPEAT) goto tmp_89;
}
current_location.update_lineno(2311);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2311 */
if (tmp_89_alt_flag_0 == ALT_NO && tmp_89_alt_flag_1 == ALT_NO && tmp_89_alt_flag_2 == ALT_NO && tmp_89_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2311 and 2362.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2365);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2365 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2366);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2366 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2373, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_05");
current_location.update_lineno(2376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2376 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2377 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2378 */
OCTETSTRING v__payload1(os_1);
current_location.update_lineno(2379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2379 */
OCTETSTRING v__payload2(os_2);
current_location.update_lineno(2382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2382 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(2383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2383 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2384);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2384 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2385 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2389 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2390 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2395);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2395 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2397 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), v__payload1))))) {
current_location.update_lineno(2398);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2398 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2399 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2401);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2401 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), v__payload2))))) {
current_location.update_lineno(2402);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2402 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2403 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2406);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2406 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2407 */
{
tmp_93:
alt_status tmp_93_alt_flag_0 = ALT_MAYBE;
alt_status tmp_93_alt_flag_1 = ALT_MAYBE;
alt_status tmp_93_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_93_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2408 */
tmp_93_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_93_alt_flag_0 == ALT_REPEAT) goto tmp_93;
if (tmp_93_alt_flag_0 == ALT_BREAK) break;
if (tmp_93_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2409 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2410 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2412 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start((1.0e1 + LibItsGeoNetworking__Functions::f__getDeltaTimer()));
break;
}
}
if (tmp_93_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2414 */
tmp_93_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_93_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2415 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2416 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_93_default_flag == ALT_MAYBE) {
tmp_93_default_flag = TTCN_Default::try_altsteps();
if (tmp_93_default_flag == ALT_YES || tmp_93_default_flag == ALT_BREAK) break;
else if (tmp_93_default_flag == ALT_REPEAT) goto tmp_93;
}
current_location.update_lineno(2407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2407 */
if (tmp_93_alt_flag_0 == ALT_NO && tmp_93_alt_flag_1 == ALT_NO && tmp_93_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2407 and 2418.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2422 */
{
tmp_94:
alt_status tmp_94_alt_flag_0 = ALT_MAYBE;
alt_status tmp_94_alt_flag_1 = ALT_MAYBE;
alt_status tmp_94_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_94_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2423 */
tmp_94_alt_flag_0 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_94_alt_flag_0 == ALT_YES) break;
}
if (tmp_94_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2426 */
tmp_94_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_94_alt_flag_1 == ALT_REPEAT) goto tmp_94;
if (tmp_94_alt_flag_1 == ALT_BREAK) break;
if (tmp_94_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2428 */
goto tmp_94;
}
}
if (tmp_94_default_flag == ALT_MAYBE) {
tmp_94_default_flag = TTCN_Default::try_altsteps();
if (tmp_94_default_flag == ALT_YES || tmp_94_default_flag == ALT_BREAK) break;
else if (tmp_94_default_flag == ALT_REPEAT) goto tmp_94;
}
current_location.update_lineno(2422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2422 */
if (tmp_94_alt_flag_0 == ALT_NO && tmp_94_alt_flag_1 == ALT_NO && tmp_94_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2422 and 2430.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2432 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(2445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2445 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(2446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2446 */
{
tmp_95:
alt_status tmp_95_alt_flag_0 = ALT_MAYBE;
alt_status tmp_95_alt_flag_1 = ALT_MAYBE;
alt_status tmp_95_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_95_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2447 */
tmp_95_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_95_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2448 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(2449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2449 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_85).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2450 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_95_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2452);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2452 */
tmp_95_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_95_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2453 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_86).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2454 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_95_default_flag == ALT_MAYBE) {
tmp_95_default_flag = TTCN_Default::try_altsteps();
if (tmp_95_default_flag == ALT_YES || tmp_95_default_flag == ALT_BREAK) break;
else if (tmp_95_default_flag == ALT_REPEAT) goto tmp_95;
}
current_location.update_lineno(2446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2446 */
if (tmp_95_alt_flag_0 == ALT_NO && tmp_95_alt_flag_1 == ALT_NO && tmp_95_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2446 and 2456.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2459 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2460 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__TI__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2467, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_TI_06");
current_location.update_lineno(2470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2470 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2471);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2471 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2472 */
INTEGER v__maxNbrRetrans(LibItsGeoNetworking__Functions::f__getLsMaxRetrans());
current_location.update_lineno(2473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2473 */
INTEGER v__rtc(0);
current_location.update_lineno(2474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2474 */
BOOLEAN v__retransmitOk(FALSE);
current_location.update_lineno(2475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2475 */
TIMER t__minRetrans("t_minRetrans", (LibItsGeoNetworking__Functions::f__getLsRetransmitTimer() - LibItsGeoNetworking__Functions::f__getDeltaTimer()));
current_location.update_lineno(2478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2478 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__RETRANSMISSION))) {
current_location.update_lineno(2479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2479 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_87).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2480 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2481 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2485 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2486 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2491 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2493 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithLifetime(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), float2int(((int2float((v__maxNbrRetrans + 2)) * LibItsGeoNetworking__Functions::f__getLsRetransmitTimer()) * 1.0e3))))))) {
current_location.update_lineno(2494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2494 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2495 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2498 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2499 */
{
tmp_97:
alt_status tmp_97_alt_flag_0 = ALT_MAYBE;
alt_status tmp_97_alt_flag_1 = ALT_MAYBE;
alt_status tmp_97_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_97_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2500 */
tmp_97_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_97_alt_flag_0 == ALT_REPEAT) goto tmp_97;
if (tmp_97_alt_flag_0 == ALT_BREAK) break;
if (tmp_97_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2501 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2502 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2504 */
t__minRetrans.start();
break;
}
}
if (tmp_97_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2506 */
tmp_97_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_97_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2507 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2508 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_97_default_flag == ALT_MAYBE) {
tmp_97_default_flag = TTCN_Default::try_altsteps();
if (tmp_97_default_flag == ALT_YES || tmp_97_default_flag == ALT_BREAK) break;
else if (tmp_97_default_flag == ALT_REPEAT) goto tmp_97;
}
current_location.update_lineno(2499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2499 */
if (tmp_97_alt_flag_0 == ALT_NO && tmp_97_alt_flag_1 == ALT_NO && tmp_97_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2499 and 2510.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2513 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2514 */
{
tmp_98:
alt_status tmp_98_alt_flag_0 = ALT_MAYBE;
alt_status tmp_98_alt_flag_1 = ALT_MAYBE;
alt_status tmp_98_alt_flag_2 = ALT_MAYBE;
alt_status tmp_98_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_98_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2515 */
tmp_98_alt_flag_0 = t__minRetrans.timeout();
if (tmp_98_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2516 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_88).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2517 */
v__retransmitOk = TRUE;
current_location.update_lineno(2518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2518 */
goto tmp_98;
}
}
if (tmp_98_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2520 */
tmp_98_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_98_alt_flag_1 == ALT_REPEAT) goto tmp_98;
if (tmp_98_alt_flag_1 == ALT_BREAK) break;
if (tmp_98_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2521 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2522 */
if ((v__retransmitOk == TRUE)) {
current_location.update_lineno(2523);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2523 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_89).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2524 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2527 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_90).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2528 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_98_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(2531);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2531 */
tmp_98_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_98_alt_flag_2 == ALT_YES) {
current_location.update_lineno(2532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2532 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_91).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2533 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_98_default_flag == ALT_MAYBE) {
tmp_98_default_flag = TTCN_Default::try_altsteps();
if (tmp_98_default_flag == ALT_YES || tmp_98_default_flag == ALT_BREAK) break;
else if (tmp_98_default_flag == ALT_REPEAT) goto tmp_98;
}
current_location.update_lineno(2514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2514 */
if (tmp_98_alt_flag_0 == ALT_NO && tmp_98_alt_flag_1 == ALT_NO && tmp_98_alt_flag_2 == ALT_NO && tmp_98_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2514 and 2535.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2538 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2539 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__TI__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_TI_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_TI_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2546, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_07");
current_location.update_lineno(2549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2549 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2550 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2551 */
INTEGER v__maxNbrRetrans(LibItsGeoNetworking__Functions::f__getLsMaxRetrans());
current_location.update_lineno(2552);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2552 */
INTEGER v__nbLsReceived(0);
current_location.update_lineno(2555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2555 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__RETRANSMISSION))) {
current_location.update_lineno(2556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2556 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_87).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2557 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2558);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2558 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2562 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2563);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2563 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2568 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2569 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithLifetime(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), float2int(((int2float((v__maxNbrRetrans + 2)) * LibItsGeoNetworking__Functions::f__getLsRetransmitTimer()) * 1.0e3))))))) {
current_location.update_lineno(2572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2572 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2573);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2573 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(2576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2576 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2577 */
{
tmp_101:
alt_status tmp_101_alt_flag_0 = ALT_MAYBE;
alt_status tmp_101_alt_flag_1 = ALT_MAYBE;
alt_status tmp_101_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_101_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2578);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2578 */
tmp_101_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_101_alt_flag_0 == ALT_REPEAT) goto tmp_101;
if (tmp_101_alt_flag_0 == ALT_BREAK) break;
if (tmp_101_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2579 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2580 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_101_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2582);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2582 */
tmp_101_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_101_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2583);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2583 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2584);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2584 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_101_default_flag == ALT_MAYBE) {
tmp_101_default_flag = TTCN_Default::try_altsteps();
if (tmp_101_default_flag == ALT_YES || tmp_101_default_flag == ALT_BREAK) break;
else if (tmp_101_default_flag == ALT_REPEAT) goto tmp_101;
}
current_location.update_lineno(2577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2577 */
if (tmp_101_alt_flag_0 == ALT_NO && tmp_101_alt_flag_1 == ALT_NO && tmp_101_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2577 and 2586.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2589 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2590 */
{
tmp_102:
alt_status tmp_102_alt_flag_0 = ALT_MAYBE;
alt_status tmp_102_alt_flag_1 = ALT_MAYBE;
alt_status tmp_102_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_102_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2591 */
tmp_102_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_102_alt_flag_0 == ALT_REPEAT) goto tmp_102;
if (tmp_102_alt_flag_0 == ALT_BREAK) break;
if (tmp_102_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2592 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2593 */
{
INTEGER tmp_103;
++v__nbLsReceived;
}
current_location.update_lineno(2594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2594 */
if ((v__nbLsReceived > v__maxNbrRetrans)) {
current_location.update_lineno(2596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2596 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_92).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2597 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(2600);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2600 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2601 */
goto tmp_102;
}
break;
}
}
if (tmp_102_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2604);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2604 */
tmp_102_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_102_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2605 */
if ((v__nbLsReceived == v__maxNbrRetrans)) {
current_location.update_lineno(2607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2607 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_93).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2608 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2611 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_94).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2612 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_102_default_flag == ALT_MAYBE) {
tmp_102_default_flag = TTCN_Default::try_altsteps();
if (tmp_102_default_flag == ALT_YES || tmp_102_default_flag == ALT_BREAK) break;
else if (tmp_102_default_flag == ALT_REPEAT) goto tmp_102;
}
current_location.update_lineno(2590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2590 */
if (tmp_102_alt_flag_0 == ALT_NO && tmp_102_alt_flag_1 == ALT_NO && tmp_102_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2590 and 2615.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2618 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2619);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2619 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2626, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_08");
current_location.update_lineno(2629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2629 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(2630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2630 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(2631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2631 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__iutGnAddress;
current_location.update_lineno(2632);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2632 */
INTEGER v__seqNbr(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber);
current_location.update_lineno(2633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2633 */
LibCommon__VerdictControl::FncRetCode v__ret(LibCommon__VerdictControl::FncRetCode::e__error);
current_location.update_lineno(2636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2636 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__DST))) {
current_location.update_lineno(2637);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2637 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_57).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2638);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2638 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2639 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2643);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2643 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(2644);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2644 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(2645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2645 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(2646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2646 */
v__iutGnAddress = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorIut).gnAddr();
current_location.update_lineno(2651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2651 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2652 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2655 */
v__ret = LibItsGeoNetworking__Functions::f__processLocationService(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), INTEGER_template(v__seqNbr), LibItsGeoNetworking__TypesAndValues::GN__Address_template(v__iutGnAddress), v__longPosVectorIut);
current_location.update_lineno(2656);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2656 */
if ((v__ret == LibCommon__VerdictControl::FncRetCode::e__success)) {
current_location.update_lineno(2657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2657 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_95).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2658 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(2661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2661 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_96).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2662);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2662 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(2666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2666 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(2667);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2667 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BO__09()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2676, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BO_09");
current_location.update_lineno(2679);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2679 */
COMPONENT v__nodeB;
current_location.update_lineno(2680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2680 */
COMPONENT v__nodeD;
current_location.update_lineno(2683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2683 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__DST))) {
current_location.update_lineno(2684);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2684 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_57).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2685 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2686 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2690);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2690 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(2695);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2695 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(2696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2696 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(2697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2697 */
start_f__GEONW__PON__LOS__BO__09__nodeB(v__nodeB);
current_location.update_lineno(2698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2698 */
start_f__GEONW__PON__LOS__BO__09__nodeD(v__nodeD);
current_location.update_lineno(2701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2701 */
{
LibCommon__Sync::SyncPointList tmp_110;
tmp_110.set_size(2);
tmp_110[0] = LibCommon__Sync::c__prDone;
tmp_110[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_110);
}
current_location.update_lineno(2704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2704 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__LOS__BO__09(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BO_09(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BO_09", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BO__09__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2711, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BO_09_nodeB");
current_location.update_lineno(2714);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2714 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(2715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2715 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(2716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2716 */
LibCommon__VerdictControl::FncRetCode v__ret(LibCommon__VerdictControl::FncRetCode::e__error);
current_location.update_lineno(2719);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2719 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2720);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2720 */
v__ret = LibItsGeoNetworking__Functions::f__processLocationService(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GN__Address_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorIut).gnAddr()), v__longPosVectorIut);
current_location.update_lineno(2725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2725 */
if ((v__ret == LibCommon__VerdictControl::FncRetCode::e__error)) {
current_location.update_lineno(2726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2726 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
else {
current_location.update_lineno(2729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2729 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(2733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2733 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(2734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2734 */
{
tmp_112:
alt_status tmp_112_alt_flag_0 = ALT_MAYBE;
alt_status tmp_112_alt_flag_1 = ALT_MAYBE;
alt_status tmp_112_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_112_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2735 */
tmp_112_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwLsReplyPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB)))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_112_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2745 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(2746);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2746 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_97).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2747 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_112_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2749 */
tmp_112_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_112_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2750 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_98).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2751 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_112_default_flag == ALT_MAYBE) {
tmp_112_default_flag = TTCN_Default::try_altsteps();
if (tmp_112_default_flag == ALT_YES || tmp_112_default_flag == ALT_BREAK) break;
else if (tmp_112_default_flag == ALT_REPEAT) goto tmp_112;
}
current_location.update_lineno(2734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2734 */
if (tmp_112_alt_flag_0 == ALT_NO && tmp_112_alt_flag_1 == ALT_NO && tmp_112_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2734 and 2753.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2756 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BO__09__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BO_09_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BO_09_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BO__09__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2763, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BO_09_nodeD");
current_location.update_lineno(2766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2766 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(2767);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2767 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(2768);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2768 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(2769);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2769 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__iutGnAddress(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorIut).gnAddr());
current_location.update_lineno(2772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2772 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2773);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2773 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2776);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2776 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsRequestPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GN__Address_template(v__iutGnAddress)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(2788);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2788 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(2789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2789 */
{
tmp_113:
alt_status tmp_113_alt_flag_0 = ALT_MAYBE;
alt_status tmp_113_alt_flag_1 = ALT_MAYBE;
alt_status tmp_113_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_113_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2790 */
tmp_113_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwLsReplyPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB)))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_113_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2800);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2800 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(2801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2801 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_97).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2802 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_113_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2804);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2804 */
tmp_113_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_113_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2805 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_98).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2806 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_113_default_flag == ALT_MAYBE) {
tmp_113_default_flag = TTCN_Default::try_altsteps();
if (tmp_113_default_flag == ALT_YES || tmp_113_default_flag == ALT_BREAK) break;
else if (tmp_113_default_flag == ALT_REPEAT) goto tmp_113;
}
current_location.update_lineno(2789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2789 */
if (tmp_113_alt_flag_0 == ALT_NO && tmp_113_alt_flag_1 == ALT_NO && tmp_113_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2789 and 2808.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2811 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BO__09__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BO_09_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BO_09_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2822, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_10");
current_location.update_lineno(2825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2825 */
COMPONENT v__nodeB;
current_location.update_lineno(2826);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2826 */
COMPONENT v__nodeC;
current_location.update_lineno(2829);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2829 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__FWD))) {
current_location.update_lineno(2830);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2830 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_99).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2831 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2832 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2836 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(2841);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2841 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(2842);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2842 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(2843);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2843 */
start_f__GEONW__PON__LOS__BV__10__nodeB(v__nodeB);
current_location.update_lineno(2844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2844 */
start_f__GEONW__PON__LOS__BV__10__nodeC(v__nodeC);
current_location.update_lineno(2847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2847 */
{
LibCommon__Sync::SyncPointList tmp_116;
tmp_116.set_size(2);
tmp_116[0] = LibCommon__Sync::c__prDone;
tmp_116[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_116);
}
current_location.update_lineno(2850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2850 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__LOS__BV__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__10__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2857, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_10_nodeB");
current_location.update_lineno(2860);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2860 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(2863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2863 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2864 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2867 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2868 */
{
tmp_117:
alt_status tmp_117_alt_flag_0 = ALT_MAYBE;
alt_status tmp_117_alt_flag_1 = ALT_MAYBE;
alt_status tmp_117_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_117_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2869 */
tmp_117_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwLsRequestPacket(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr().mid())), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_117_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2881);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2881 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(2882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2882 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_100).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2883 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_117_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2885 */
tmp_117_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_117_alt_flag_1 == ALT_YES) {
current_location.update_lineno(2886);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2886 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_101).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2887);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2887 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_117_default_flag == ALT_MAYBE) {
tmp_117_default_flag = TTCN_Default::try_altsteps();
if (tmp_117_default_flag == ALT_YES || tmp_117_default_flag == ALT_BREAK) break;
else if (tmp_117_default_flag == ALT_REPEAT) goto tmp_117;
}
current_location.update_lineno(2868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2868 */
if (tmp_117_alt_flag_0 == ALT_NO && tmp_117_alt_flag_1 == ALT_NO && tmp_117_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2868 and 2889.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(2892);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2892 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BV__10__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_10_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_10_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__10__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2899, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_10_nodeC");
current_location.update_lineno(2904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2904 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2905 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2906 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(2909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2909 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsRequestPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GN__Address_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorB).gnAddr())), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(2922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2922 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2925);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2925 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BV__10__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_10_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_10_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__11()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2936, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_11");
current_location.update_lineno(2939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2939 */
COMPONENT v__nodeB;
current_location.update_lineno(2940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2940 */
COMPONENT v__nodeC;
current_location.update_lineno(2943);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2943 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__FWD))) {
current_location.update_lineno(2944);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2944 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_99).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2945 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(2946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2946 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(2950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2950 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(2955);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2955 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(2956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2956 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(2957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2957 */
start_f__GEONW__PON__LOS__BV__11__nodeB(v__nodeB);
current_location.update_lineno(2958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2958 */
start_f__GEONW__PON__LOS__BV__11__nodeC(v__nodeC);
current_location.update_lineno(2961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2961 */
{
LibCommon__Sync::SyncPointList tmp_120;
tmp_120.set_size(2);
tmp_120[0] = LibCommon__Sync::c__prDone;
tmp_120[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_120);
}
current_location.update_lineno(2964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2964 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__LOS__BV__11(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_11(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_11", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__11__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 2971, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_11_nodeB");
current_location.update_lineno(2974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2974 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(2975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2975 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(2978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2978 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(2979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2979 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(2982);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2982 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(2983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2983 */
{
tmp_121:
alt_status tmp_121_alt_flag_0 = ALT_MAYBE;
alt_status tmp_121_alt_flag_1 = ALT_MAYBE;
alt_status tmp_121_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_121_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(2984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2984 */
tmp_121_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwLsReplyPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB)))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_121_alt_flag_0 == ALT_YES) {
current_location.update_lineno(2996);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2996 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_102).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(2997);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2997 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_121_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(2999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2999 */
tmp_121_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_121_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3000 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_103).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3001 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_121_default_flag == ALT_MAYBE) {
tmp_121_default_flag = TTCN_Default::try_altsteps();
if (tmp_121_default_flag == ALT_YES || tmp_121_default_flag == ALT_BREAK) break;
else if (tmp_121_default_flag == ALT_REPEAT) goto tmp_121;
}
current_location.update_lineno(2983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 2983 */
if (tmp_121_alt_flag_0 == ALT_NO && tmp_121_alt_flag_1 == ALT_NO && tmp_121_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 2983 and 3003.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3006 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BV__11__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_11_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_11_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__11__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3013, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_11_nodeC");
current_location.update_lineno(3018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3018 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3020 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3023 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB))), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(3036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3036 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3039 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__LOS__BV__11__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_11_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_11_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__12()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3048, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_12");
current_location.update_lineno(3051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3051 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3052);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3052 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3053);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3053 */
INTEGER v__seqNbr(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber);
current_location.update_lineno(3056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3056 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3057 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3058);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3058 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3059);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3059 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3063 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3064 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3069);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3069 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3070);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3070 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(3071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3071 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3072 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3074);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3074 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3075 */
{
tmp_123:
alt_status tmp_123_alt_flag_0 = ALT_MAYBE;
alt_status tmp_123_alt_flag_1 = ALT_MAYBE;
alt_status tmp_123_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_123_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3076 */
tmp_123_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_123_alt_flag_0 == ALT_REPEAT) goto tmp_123;
if (tmp_123_alt_flag_0 == ALT_BREAK) break;
if (tmp_123_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3077 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3078 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_123_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3080 */
tmp_123_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_123_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3081 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_104).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3082 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_123_default_flag == ALT_MAYBE) {
tmp_123_default_flag = TTCN_Default::try_altsteps();
if (tmp_123_default_flag == ALT_YES || tmp_123_default_flag == ALT_BREAK) break;
else if (tmp_123_default_flag == ALT_REPEAT) goto tmp_123;
}
current_location.update_lineno(3075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3075 */
if (tmp_123_alt_flag_0 == ALT_NO && tmp_123_alt_flag_1 == ALT_NO && tmp_123_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3075 and 3084.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3087 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3099 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3100 */
{
tmp_124:
alt_status tmp_124_alt_flag_0 = ALT_MAYBE;
alt_status tmp_124_alt_flag_1 = ALT_MAYBE;
alt_status tmp_124_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_124_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3101 */
tmp_124_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_124_alt_flag_0 == ALT_REPEAT) goto tmp_124;
if (tmp_124_alt_flag_0 == ALT_BREAK) break;
if (tmp_124_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3102 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3103 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_41).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3104 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_124_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3106);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3106 */
tmp_124_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_124_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3107 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3108 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_124_default_flag == ALT_MAYBE) {
tmp_124_default_flag = TTCN_Default::try_altsteps();
if (tmp_124_default_flag == ALT_YES || tmp_124_default_flag == ALT_BREAK) break;
else if (tmp_124_default_flag == ALT_REPEAT) goto tmp_124;
}
current_location.update_lineno(3100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3100 */
if (tmp_124_alt_flag_0 == ALT_NO && tmp_124_alt_flag_1 == ALT_NO && tmp_124_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3100 and 3110.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3113 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3114 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__12(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_12(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_12", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__13()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3121, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_13");
current_location.update_lineno(3124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3124 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3125 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3126 */
INTEGER v__lt1((LibItsGeoNetworking__Functions::f__getLsMaxRetrans() * float2int(LibItsGeoNetworking__Functions::f__getLsRetransmitTimer())));
current_location.update_lineno(3127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3127 */
INTEGER v__lt2(float2int((int2float(v__lt1) / 2.0)));
current_location.update_lineno(3128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3128 */
OCTETSTRING v__payload1(os_1);
current_location.update_lineno(3129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3129 */
OCTETSTRING v__payload2(os_2);
current_location.update_lineno(3130);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3130 */
BOOLEAN v__msg1Received(FALSE);
current_location.update_lineno(3133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3133 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3134 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3135 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3136);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3136 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3140 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3141 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3146);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3146 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3148 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithLifetimeWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), (v__lt2 * 1000), v__payload2))))) {
current_location.update_lineno(3149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3149 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3150);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3150 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3152 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithLifetimeWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), (v__lt1 * 1000), v__payload1))))) {
current_location.update_lineno(3153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3153 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3154);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3154 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3157 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3158 */
{
tmp_126:
alt_status tmp_126_alt_flag_0 = ALT_MAYBE;
alt_status tmp_126_alt_flag_1 = ALT_MAYBE;
alt_status tmp_126_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_126_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3159);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3159 */
tmp_126_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_126_alt_flag_0 == ALT_REPEAT) goto tmp_126;
if (tmp_126_alt_flag_0 == ALT_BREAK) break;
if (tmp_126_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3160 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3161 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_126_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3164 */
tmp_126_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_126_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3165 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_104).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3166 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_126_default_flag == ALT_MAYBE) {
tmp_126_default_flag = TTCN_Default::try_altsteps();
if (tmp_126_default_flag == ALT_YES || tmp_126_default_flag == ALT_BREAK) break;
else if (tmp_126_default_flag == ALT_REPEAT) goto tmp_126;
}
current_location.update_lineno(3158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3158 */
if (tmp_126_alt_flag_0 == ALT_NO && tmp_126_alt_flag_1 == ALT_NO && tmp_126_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3158 and 3168.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3169 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3173);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3173 */
LibCommon__Time::f__sleepIgnoreDef(int2float(v__lt2));
current_location.update_lineno(3175);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3175 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3187 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3188 */
{
tmp_127:
alt_status tmp_127_alt_flag_0 = ALT_MAYBE;
alt_status tmp_127_alt_flag_1 = ALT_MAYBE;
alt_status tmp_127_alt_flag_2 = ALT_MAYBE;
alt_status tmp_127_alt_flag_3 = ALT_MAYBE;
alt_status tmp_127_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_127_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3189 */
tmp_127_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_127_alt_flag_0 == ALT_REPEAT) goto tmp_127;
if (tmp_127_alt_flag_0 == ALT_BREAK) break;
if (tmp_127_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3190);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3190 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_106).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3191);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3191 */
goto tmp_127;
}
}
if (tmp_127_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3193 */
tmp_127_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__Templates::f__adaptPayload__mw(OCTETSTRING_template(v__payload1))), NULL, any_compref, NULL);
if (tmp_127_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3206 */
v__msg1Received = TRUE;
current_location.update_lineno(3207);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3207 */
goto tmp_127;
}
}
if (tmp_127_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(3209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3209 */
tmp_127_alt_flag_2 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__Templates::f__adaptPayload__mw(OCTETSTRING_template(v__payload2))), NULL, any_compref, NULL);
if (tmp_127_alt_flag_2 == ALT_YES) {
current_location.update_lineno(3222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3222 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3223);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3223 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_107).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3224);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3224 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_127_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(3226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3226 */
tmp_127_alt_flag_3 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_127_alt_flag_3 == ALT_YES) {
current_location.update_lineno(3227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3227 */
if ((v__msg1Received == TRUE)) {
current_location.update_lineno(3228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3228 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_108).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3229 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(3232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3232 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_109).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3233);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3233 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_127_default_flag == ALT_MAYBE) {
tmp_127_default_flag = TTCN_Default::try_altsteps();
if (tmp_127_default_flag == ALT_YES || tmp_127_default_flag == ALT_BREAK) break;
else if (tmp_127_default_flag == ALT_REPEAT) goto tmp_127;
}
current_location.update_lineno(3188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3188 */
if (tmp_127_alt_flag_0 == ALT_NO && tmp_127_alt_flag_1 == ALT_NO && tmp_127_alt_flag_2 == ALT_NO && tmp_127_alt_flag_3 == ALT_NO && tmp_127_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3188 and 3236.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3239 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3240 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__13(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_13(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_13", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__14()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3247, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_14");
current_location.update_lineno(3250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3250 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3251 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3252 */
INTEGER v__maxNbrRetrans(LibItsGeoNetworking__Functions::f__getLsMaxRetrans());
current_location.update_lineno(3253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3253 */
INTEGER v__nbLsReceived(0);
current_location.update_lineno(3254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3254 */
INTEGER v__LT1;
current_location.update_lineno(3257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3257 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3258 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3259 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3260);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3260 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3264 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3265 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3270 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3271 */
v__LT1 = float2int(((int2float((v__maxNbrRetrans + 2)) * LibItsGeoNetworking__Functions::f__getLsRetransmitTimer()) * 1.0e3));
current_location.update_lineno(3272);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3272 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithLifetime(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), v__LT1))))) {
current_location.update_lineno(3273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3273 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3274 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3277);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3277 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.start(int2float(v__LT1));
current_location.update_lineno(3278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3278 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3279 */
{
tmp_131:
alt_status tmp_131_alt_flag_0 = ALT_MAYBE;
alt_status tmp_131_alt_flag_1 = ALT_MAYBE;
alt_status tmp_131_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_131_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3280 */
tmp_131_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_131_alt_flag_0 == ALT_REPEAT) goto tmp_131;
if (tmp_131_alt_flag_0 == ALT_BREAK) break;
if (tmp_131_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3281 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3282 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_131_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3284 */
tmp_131_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_131_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3285 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_65).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3286 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_131_default_flag == ALT_MAYBE) {
tmp_131_default_flag = TTCN_Default::try_altsteps();
if (tmp_131_default_flag == ALT_YES || tmp_131_default_flag == ALT_BREAK) break;
else if (tmp_131_default_flag == ALT_REPEAT) goto tmp_131;
}
current_location.update_lineno(3279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3279 */
if (tmp_131_alt_flag_0 == ALT_NO && tmp_131_alt_flag_1 == ALT_NO && tmp_131_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3279 and 3288.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3290 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3291 */
{
tmp_132:
alt_status tmp_132_alt_flag_0 = ALT_MAYBE;
alt_status tmp_132_alt_flag_1 = ALT_MAYBE;
alt_status tmp_132_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_132_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3292 */
tmp_132_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_132_alt_flag_0 == ALT_REPEAT) goto tmp_132;
if (tmp_132_alt_flag_0 == ALT_BREAK) break;
if (tmp_132_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3293 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3294 */
{
INTEGER tmp_133;
++v__nbLsReceived;
}
current_location.update_lineno(3295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3295 */
if ((v__nbLsReceived > v__maxNbrRetrans)) {
current_location.update_lineno(3297);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3297 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_110).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3298 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(3301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3301 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3302 */
goto tmp_132;
}
break;
}
}
if (tmp_132_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3305 */
tmp_132_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_132_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3306);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3306 */
if ((v__nbLsReceived == v__maxNbrRetrans)) {
current_location.update_lineno(3308);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3308 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_111).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3309 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(3312);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3312 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_112).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3313 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_132_default_flag == ALT_MAYBE) {
tmp_132_default_flag = TTCN_Default::try_altsteps();
if (tmp_132_default_flag == ALT_YES || tmp_132_default_flag == ALT_BREAK) break;
else if (tmp_132_default_flag == ALT_REPEAT) goto tmp_132;
}
current_location.update_lineno(3291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3291 */
if (tmp_132_alt_flag_0 == ALT_NO && tmp_132_alt_flag_1 == ALT_NO && tmp_132_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3291 and 3316.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3319);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3319 */
if (LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.running()) {
current_location.update_lineno(3320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3320 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3331 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.stop();
current_location.update_lineno(3333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3333 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(3334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3334 */
{
tmp_134:
alt_status tmp_134_alt_flag_0 = ALT_MAYBE;
alt_status tmp_134_alt_flag_1 = ALT_MAYBE;
alt_status tmp_134_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_134_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3336 */
tmp_134_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(any_compref, NULL);
if (tmp_134_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3337 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(3338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3338 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_113).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3339 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_134_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3341 */
tmp_134_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_134_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3342 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_114).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3343 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_134_default_flag == ALT_MAYBE) {
tmp_134_default_flag = TTCN_Default::try_altsteps();
if (tmp_134_default_flag == ALT_YES || tmp_134_default_flag == ALT_BREAK) break;
else if (tmp_134_default_flag == ALT_REPEAT) goto tmp_134;
}
current_location.update_lineno(3334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3334 */
if (tmp_134_alt_flag_0 == ALT_NO && tmp_134_alt_flag_1 == ALT_NO && tmp_134_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3334 and 3345.");
TTCN_Snapshot::take_new(TRUE);
}
}
}
else {
current_location.update_lineno(3348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3348 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_115).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3349 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(3353);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3353 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3354 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__14(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_14(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_14", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__15()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3361, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_15");
current_location.update_lineno(3364);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3364 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3365);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3365 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(3366);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3366 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3367 */
INTEGER v__seqNbr(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber);
current_location.update_lineno(3370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3370 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3371);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3371 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3372);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3372 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3373 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3377 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3378 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3379 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3384);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3384 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3385 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(3386);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3386 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3387);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3387 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3389 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3390 */
{
tmp_137:
alt_status tmp_137_alt_flag_0 = ALT_MAYBE;
alt_status tmp_137_alt_flag_1 = ALT_MAYBE;
alt_status tmp_137_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_137_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3391 */
tmp_137_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_137_alt_flag_0 == ALT_REPEAT) goto tmp_137;
if (tmp_137_alt_flag_0 == ALT_BREAK) break;
if (tmp_137_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3392 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3393 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_137_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3395);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3395 */
tmp_137_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_137_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3396 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_104).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3397 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_137_default_flag == ALT_MAYBE) {
tmp_137_default_flag = TTCN_Default::try_altsteps();
if (tmp_137_default_flag == ALT_YES || tmp_137_default_flag == ALT_BREAK) break;
else if (tmp_137_default_flag == ALT_REPEAT) goto tmp_137;
}
current_location.update_lineno(3390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3390 */
if (tmp_137_alt_flag_0 == ALT_NO && tmp_137_alt_flag_1 == ALT_NO && tmp_137_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3390 and 3399.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3402);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3402 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3414 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3415 */
{
tmp_138:
alt_status tmp_138_alt_flag_0 = ALT_MAYBE;
alt_status tmp_138_alt_flag_1 = ALT_MAYBE;
alt_status tmp_138_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_138_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3416 */
tmp_138_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_138_alt_flag_0 == ALT_REPEAT) goto tmp_138;
if (tmp_138_alt_flag_0 == ALT_BREAK) break;
if (tmp_138_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3417 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3418 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_41).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3419);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3419 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_138_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3421 */
tmp_138_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_138_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3422 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3423 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_138_default_flag == ALT_MAYBE) {
tmp_138_default_flag = TTCN_Default::try_altsteps();
if (tmp_138_default_flag == ALT_YES || tmp_138_default_flag == ALT_BREAK) break;
else if (tmp_138_default_flag == ALT_REPEAT) goto tmp_138;
}
current_location.update_lineno(3415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3415 */
if (tmp_138_alt_flag_0 == ALT_NO && tmp_138_alt_flag_1 == ALT_NO && tmp_138_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3415 and 3425.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3428 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3429 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__15(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_15(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_15", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__16()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3436, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_16");
current_location.update_lineno(3439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3439 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3440);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3440 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(3441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3441 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3442);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3442 */
INTEGER v__seqNbr(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber);
current_location.update_lineno(3445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3445 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3446 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3447 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3448 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3452);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3452 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3453 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3454 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3459 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3460 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(3461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3461 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3462);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3462 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3464);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3464 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3465 */
{
tmp_141:
alt_status tmp_141_alt_flag_0 = ALT_MAYBE;
alt_status tmp_141_alt_flag_1 = ALT_MAYBE;
alt_status tmp_141_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_141_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3466);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3466 */
tmp_141_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_141_alt_flag_0 == ALT_REPEAT) goto tmp_141;
if (tmp_141_alt_flag_0 == ALT_BREAK) break;
if (tmp_141_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3467 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3468);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3468 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_141_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3470 */
tmp_141_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_141_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3471);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3471 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_104).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3472 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_141_default_flag == ALT_MAYBE) {
tmp_141_default_flag = TTCN_Default::try_altsteps();
if (tmp_141_default_flag == ALT_YES || tmp_141_default_flag == ALT_BREAK) break;
else if (tmp_141_default_flag == ALT_REPEAT) goto tmp_141;
}
current_location.update_lineno(3465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3465 */
if (tmp_141_alt_flag_0 == ALT_NO && tmp_141_alt_flag_1 == ALT_NO && tmp_141_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3465 and 3474.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3477 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3489);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3489 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(3490);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3490 */
{
tmp_142:
alt_status tmp_142_alt_flag_0 = ALT_MAYBE;
alt_status tmp_142_alt_flag_1 = ALT_MAYBE;
alt_status tmp_142_alt_flag_2 = ALT_MAYBE;
alt_status tmp_142_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_142_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3491 */
tmp_142_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_142_alt_flag_0 == ALT_REPEAT) goto tmp_142;
if (tmp_142_alt_flag_0 == ALT_BREAK) break;
if (tmp_142_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3492 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(3493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3493 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_116).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3494 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_142_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3496);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3496 */
tmp_142_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_142_alt_flag_1 == ALT_REPEAT) goto tmp_142;
if (tmp_142_alt_flag_1 == ALT_BREAK) break;
if (tmp_142_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3497 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_117).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3498 */
goto tmp_142;
}
}
if (tmp_142_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(3500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3500 */
tmp_142_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_142_alt_flag_2 == ALT_YES) {
current_location.update_lineno(3501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3501 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_118).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3502 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_142_default_flag == ALT_MAYBE) {
tmp_142_default_flag = TTCN_Default::try_altsteps();
if (tmp_142_default_flag == ALT_YES || tmp_142_default_flag == ALT_BREAK) break;
else if (tmp_142_default_flag == ALT_REPEAT) goto tmp_142;
}
current_location.update_lineno(3490);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3490 */
if (tmp_142_alt_flag_0 == ALT_NO && tmp_142_alt_flag_1 == ALT_NO && tmp_142_alt_flag_2 == ALT_NO && tmp_142_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3490 and 3504.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3507 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3508 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__16(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_16(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_16", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__LOS__BV__17()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3515, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_LOS_BV_17");
current_location.update_lineno(3518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3518 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(3519);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3519 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(3520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3520 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(3521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3521 */
INTEGER v__seqNbr(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber);
current_location.update_lineno(3524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3524 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(3525);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3525 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3526);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3526 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3527 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3531);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3531 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(3532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3532 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(3533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3533 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3538 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3539 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(3540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3540 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3541 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3543 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3544 */
{
tmp_145:
alt_status tmp_145_alt_flag_0 = ALT_MAYBE;
alt_status tmp_145_alt_flag_1 = ALT_MAYBE;
alt_status tmp_145_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_145_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3545 */
tmp_145_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_145_alt_flag_0 == ALT_REPEAT) goto tmp_145;
if (tmp_145_alt_flag_0 == ALT_BREAK) break;
if (tmp_145_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3546 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3547);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3547 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_145_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3549 */
tmp_145_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_145_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3550 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_104).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3551 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_145_default_flag == ALT_MAYBE) {
tmp_145_default_flag = TTCN_Default::try_altsteps();
if (tmp_145_default_flag == ALT_YES || tmp_145_default_flag == ALT_BREAK) break;
else if (tmp_145_default_flag == ALT_REPEAT) goto tmp_145;
}
current_location.update_lineno(3544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3544 */
if (tmp_145_alt_flag_0 == ALT_NO && tmp_145_alt_flag_1 == ALT_NO && tmp_145_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3544 and 3553.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3556 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3568 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(3569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3569 */
{
tmp_146:
alt_status tmp_146_alt_flag_0 = ALT_MAYBE;
alt_status tmp_146_alt_flag_1 = ALT_MAYBE;
alt_status tmp_146_alt_flag_2 = ALT_MAYBE;
alt_status tmp_146_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_146_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3570);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3570 */
tmp_146_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_146_alt_flag_0 == ALT_REPEAT) goto tmp_146;
if (tmp_146_alt_flag_0 == ALT_BREAK) break;
if (tmp_146_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3571);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3571 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(3572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3572 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_116).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3573);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3573 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_146_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3575 */
tmp_146_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicastWithDestination_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))));
if (tmp_146_alt_flag_1 == ALT_REPEAT) goto tmp_146;
if (tmp_146_alt_flag_1 == ALT_BREAK) break;
if (tmp_146_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3576 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_117).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3577 */
goto tmp_146;
}
}
if (tmp_146_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(3579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3579 */
tmp_146_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_146_alt_flag_2 == ALT_YES) {
current_location.update_lineno(3580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3580 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_118).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3581 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_146_default_flag == ALT_MAYBE) {
tmp_146_default_flag = TTCN_Default::try_altsteps();
if (tmp_146_default_flag == ALT_YES || tmp_146_default_flag == ALT_BREAK) break;
else if (tmp_146_default_flag == ALT_REPEAT) goto tmp_146;
}
current_location.update_lineno(3569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3569 */
if (tmp_146_alt_flag_0 == ALT_NO && tmp_146_alt_flag_1 == ALT_NO && tmp_146_alt_flag_2 == ALT_NO && tmp_146_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3569 and 3583.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3586 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(3587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3587 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__LOS__BV__17(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_LOS_BV_17(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_LOS_BV_17", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3601, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_01");
current_location.update_lineno(3604);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3604 */
COMPONENT v__nodeB;
current_location.update_lineno(3605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3605 */
COMPONENT v__nodeC;
current_location.update_lineno(3608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3608 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(3609);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3609 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3610);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3610 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3611 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3615);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3615 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(3620);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3620 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3621);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3621 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(3622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3622 */
start_f__GEONW__PON__FPB__BV__01__nodeB(v__nodeB);
current_location.update_lineno(3623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3623 */
start_f__GEONW__PON__FPB__BV__01__nodeC(v__nodeC);
current_location.update_lineno(3626);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3626 */
{
LibCommon__Sync::SyncPointList tmp_149;
tmp_149.set_size(2);
tmp_149[0] = LibCommon__Sync::c__prDone;
tmp_149[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_149);
}
current_location.update_lineno(3629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3629 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3636, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_01_nodeB");
current_location.update_lineno(3639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3639 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3640 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(3643);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3643 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(3644);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3644 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3647);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3647 */
LibCommon__Time::f__sleepIgnoreDef(1.0);
current_location.update_lineno(3648);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3648 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(3650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3650 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3651 */
{
tmp_150:
alt_status tmp_150_alt_flag_0 = ALT_MAYBE;
alt_status tmp_150_alt_flag_1 = ALT_MAYBE;
alt_status tmp_150_alt_flag_2 = ALT_MAYBE;
alt_status tmp_150_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_150_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3652 */
tmp_150_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveAnyLsRequest_instance();
if (tmp_150_alt_flag_0 == ALT_REPEAT) goto tmp_150;
if (tmp_150_alt_flag_0 == ALT_BREAK) break;
if (tmp_150_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3653 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3654);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3654 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_119).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3655 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_150_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3657 */
tmp_150_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_150_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3660);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3660 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3661 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3662);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3662 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_150_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(3664);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3664 */
tmp_150_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_150_alt_flag_2 == ALT_YES) {
current_location.update_lineno(3665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3665 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3666 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_150_default_flag == ALT_MAYBE) {
tmp_150_default_flag = TTCN_Default::try_altsteps();
if (tmp_150_default_flag == ALT_YES || tmp_150_default_flag == ALT_BREAK) break;
else if (tmp_150_default_flag == ALT_REPEAT) goto tmp_150;
}
current_location.update_lineno(3651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3651 */
if (tmp_150_alt_flag_0 == ALT_NO && tmp_150_alt_flag_1 == ALT_NO && tmp_150_alt_flag_2 == ALT_NO && tmp_150_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3651 and 3668.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3671 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__01__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3678, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_01_nodeC");
current_location.update_lineno(3681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3681 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3682 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(3685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3685 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3688);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3688 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3696 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3700 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(3701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3701 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3702 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(3704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3704 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(3705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3705 */
{
tmp_151:
alt_status tmp_151_alt_flag_0 = ALT_MAYBE;
alt_status tmp_151_alt_flag_1 = ALT_MAYBE;
alt_status tmp_151_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_151_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3706 */
tmp_151_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_151_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3707);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3707 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(3708);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3708 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_121).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3709 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_151_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3711 */
tmp_151_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_151_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3712 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3713);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3713 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_151_default_flag == ALT_MAYBE) {
tmp_151_default_flag = TTCN_Default::try_altsteps();
if (tmp_151_default_flag == ALT_YES || tmp_151_default_flag == ALT_BREAK) break;
else if (tmp_151_default_flag == ALT_REPEAT) goto tmp_151;
}
current_location.update_lineno(3705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3705 */
if (tmp_151_alt_flag_0 == ALT_NO && tmp_151_alt_flag_1 == ALT_NO && tmp_151_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3705 and 3715.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3718);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3718 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__01__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_01_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_01_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3729, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_02");
current_location.update_lineno(3732);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3732 */
COMPONENT v__nodeB;
current_location.update_lineno(3733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3733 */
COMPONENT v__nodeC;
current_location.update_lineno(3734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3734 */
INTEGER c__sequenceNumberC(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(3737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3737 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(3738);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3738 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3739);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3739 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3740 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3744 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(3749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3749 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3750 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(3751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3751 */
start_f__GEONW__PON__FPB__BV__02__nodeB(v__nodeB, c__sequenceNumberC);
current_location.update_lineno(3752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3752 */
start_f__GEONW__PON__FPB__BV__02__nodeC(v__nodeC, c__sequenceNumberC);
current_location.update_lineno(3755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3755 */
{
LibCommon__Sync::SyncPointList tmp_154;
tmp_154.set_size(2);
tmp_154[0] = LibCommon__Sync::c__prDone;
tmp_154[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_154);
}
current_location.update_lineno(3758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3758 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__02__nodeB(const INTEGER& p__sequenceNumberC)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3765, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_02_nodeB");
current_location.update_lineno(3768);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3768 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3769);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3769 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(3772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3772 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(3773);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3773 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber = p__sequenceNumberC;
current_location.update_lineno(3774);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3774 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3777);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3777 */
LibCommon__Time::f__sleep(1.0);
current_location.update_lineno(3778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3778 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(3780);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3780 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3781);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3781 */
{
tmp_156:
alt_status tmp_156_alt_flag_0 = ALT_MAYBE;
alt_status tmp_156_alt_flag_1 = ALT_MAYBE;
alt_status tmp_156_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_156_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3782 */
tmp_156_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_156_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3794);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3794 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3795);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3795 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_123).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3796 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_156_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3798);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3798 */
tmp_156_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_156_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3799);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3799 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3800);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3800 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_156_default_flag == ALT_MAYBE) {
tmp_156_default_flag = TTCN_Default::try_altsteps();
if (tmp_156_default_flag == ALT_YES || tmp_156_default_flag == ALT_BREAK) break;
else if (tmp_156_default_flag == ALT_REPEAT) goto tmp_156;
}
current_location.update_lineno(3781);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3781 */
if (tmp_156_alt_flag_0 == ALT_NO && tmp_156_alt_flag_1 == ALT_NO && tmp_156_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3781 and 3802.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3805 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__02__nodeB(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_02_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_02_nodeB", text_buf);
p__sequenceNumberC.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__02__nodeC(const INTEGER& p__sequenceNumberC)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3812, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_02_nodeC");
current_location.update_lineno(3815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3815 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3816);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3816 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(3819);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3819 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3820);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3820 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber = p__sequenceNumberC;
current_location.update_lineno(3822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3822 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(3836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3836 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3839);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3839 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3842);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3842 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__02__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_02_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_02_nodeC", text_buf);
p__sequenceNumberC.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3853, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_03");
current_location.update_lineno(3856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3856 */
COMPONENT v__nodeB;
current_location.update_lineno(3857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3857 */
COMPONENT v__nodeC;
current_location.update_lineno(3858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3858 */
INTEGER c__sequenceNumberC(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(3859);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3859 */
INTEGER c__messageCount(2);
current_location.update_lineno(3862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3862 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(3863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3863 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3864 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(3865);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3865 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(3869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3869 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(3874);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3874 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(3875);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3875 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(3876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3876 */
start_f__GEONW__PON__FPB__BV__03__nodeB(v__nodeB, c__sequenceNumberC, 2);
current_location.update_lineno(3877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3877 */
start_f__GEONW__PON__FPB__BV__03__nodeC(v__nodeC, c__sequenceNumberC, 2);
current_location.update_lineno(3880);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3880 */
{
LibCommon__Sync::SyncPointList tmp_160;
tmp_160.set_size(2);
tmp_160[0] = LibCommon__Sync::c__prDone;
tmp_160[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_160);
}
current_location.update_lineno(3883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3883 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__03__nodeB(const INTEGER& p__sequenceNumberC, const INTEGER& p__messageCount)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3890, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_03_nodeB");
current_location.update_lineno(3893);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3893 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3894 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(3895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3895 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(3896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3896 */
INTEGER v__expectedSequenceNumber(p__sequenceNumberC);
current_location.update_lineno(3897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3897 */
INTEGER v__nbReceivedPackets(0);
current_location.update_lineno(3900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3900 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(3901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3901 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount = p__messageCount;
current_location.update_lineno(3902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3902 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3905 */
LibCommon__Time::f__sleep(1.0);
current_location.update_lineno(3906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3906 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(3908);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3908 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3909 */
{
tmp_162:
alt_status tmp_162_alt_flag_0 = ALT_MAYBE;
alt_status tmp_162_alt_flag_1 = ALT_MAYBE;
alt_status tmp_162_alt_flag_2 = ALT_MAYBE;
alt_status tmp_162_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_162_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(3910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3910 */
tmp_162_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoUnicast_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(v__expectedSequenceNumber));
if (tmp_162_alt_flag_0 == ALT_REPEAT) goto tmp_162;
if (tmp_162_alt_flag_0 == ALT_BREAK) break;
if (tmp_162_alt_flag_0 == ALT_YES) {
current_location.update_lineno(3913);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3913 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3914);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3914 */
{
INTEGER tmp_163;
++v__nbReceivedPackets;
}
current_location.update_lineno(3915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3915 */
if ((v__nbReceivedPackets >= LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) {
current_location.update_lineno(3916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3916 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_124).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3917 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(3920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3920 */
{
INTEGER tmp_164;
++v__expectedSequenceNumber;
}
current_location.update_lineno(3921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3921 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(3922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3922 */
goto tmp_162;
}
break;
}
}
if (tmp_162_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(3925);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3925 */
tmp_162_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoUnicast_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE));
if (tmp_162_alt_flag_1 == ALT_REPEAT) goto tmp_162;
if (tmp_162_alt_flag_1 == ALT_BREAK) break;
if (tmp_162_alt_flag_1 == ALT_YES) {
current_location.update_lineno(3928);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3928 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(3929);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3929 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_125).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3930);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3930 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_162_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(3932);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3932 */
tmp_162_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_162_alt_flag_2 == ALT_YES) {
current_location.update_lineno(3933);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3933 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_4).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3934);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3934 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_162_default_flag == ALT_MAYBE) {
tmp_162_default_flag = TTCN_Default::try_altsteps();
if (tmp_162_default_flag == ALT_YES || tmp_162_default_flag == ALT_BREAK) break;
else if (tmp_162_default_flag == ALT_REPEAT) goto tmp_162;
}
current_location.update_lineno(3909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3909 */
if (tmp_162_alt_flag_0 == ALT_NO && tmp_162_alt_flag_1 == ALT_NO && tmp_162_alt_flag_2 == ALT_NO && tmp_162_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 3909 and 3936.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(3939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3939 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__03__nodeB(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__messageCount)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_03_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__messageCount.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_03_nodeB", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__messageCount.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__03__nodeC(const INTEGER& p__sequenceNumberC, const INTEGER& p__messageCount)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3946, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_03_nodeC");
current_location.update_lineno(3949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3949 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(3950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3950 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(3951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3951 */
INTEGER i(0);
current_location.update_lineno(3954);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3954 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(3955);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3955 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber = p__sequenceNumberC;
current_location.update_lineno(3956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3956 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount = p__messageCount;
current_location.update_lineno(3958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3958 */
i = 0;
current_location.update_lineno(3958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3958 */
for ( ; ; ) {
current_location.update_lineno(3958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3958 */
if (!(i < LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) break;
current_location.update_lineno(3959);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3959 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(3958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3958 */
{
INTEGER tmp_168;
++i;
}
}
current_location.update_lineno(3972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3972 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3975 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(3978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3978 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__03__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__messageCount)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_03_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__messageCount.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_03_nodeC", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__messageCount.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 3989, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_04");
current_location.update_lineno(3992);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3992 */
COMPONENT v__nodeB;
current_location.update_lineno(3993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3993 */
COMPONENT v__nodeC;
current_location.update_lineno(3994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3994 */
INTEGER c__packetLifetime(10);
current_location.update_lineno(3997);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3997 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(3998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3998 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(3999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 3999 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(4000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4000 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(4004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4004 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(4009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4009 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4010 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4011);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4011 */
start_f__GEONW__PON__FPB__BV__04__nodeB(v__nodeB, 10);
current_location.update_lineno(4012);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4012 */
start_f__GEONW__PON__FPB__BV__04__nodeC(v__nodeC, 10);
current_location.update_lineno(4015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4015 */
{
LibCommon__Sync::SyncPointList tmp_171;
tmp_171.set_size(2);
tmp_171[0] = LibCommon__Sync::c__prDone;
tmp_171[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_171);
}
current_location.update_lineno(4018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4018 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__04__nodeB(const INTEGER& p__packetLifetime)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4025, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_04_nodeB");
current_location.update_lineno(4028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4028 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4029 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4030 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4031 */
INTEGER v__nbReceivedPackets(0);
current_location.update_lineno(4034);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4034 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4035);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4035 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4038 */
LibCommon__Time::f__sleep(int2float((p__packetLifetime + 1)));
current_location.update_lineno(4039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4039 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4041 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(4042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4042 */
{
tmp_172:
alt_status tmp_172_alt_flag_0 = ALT_MAYBE;
alt_status tmp_172_alt_flag_1 = ALT_MAYBE;
alt_status tmp_172_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_172_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4043 */
tmp_172_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoUnicast_instance(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE));
if (tmp_172_alt_flag_0 == ALT_REPEAT) goto tmp_172;
if (tmp_172_alt_flag_0 == ALT_BREAK) break;
if (tmp_172_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4046 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(4047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4047 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_121).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4048 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_172_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4050 */
tmp_172_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_172_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4051 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4052);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4052 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_172_default_flag == ALT_MAYBE) {
tmp_172_default_flag = TTCN_Default::try_altsteps();
if (tmp_172_default_flag == ALT_YES || tmp_172_default_flag == ALT_BREAK) break;
else if (tmp_172_default_flag == ALT_REPEAT) goto tmp_172;
}
current_location.update_lineno(4042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4042 */
if (tmp_172_alt_flag_0 == ALT_NO && tmp_172_alt_flag_1 == ALT_NO && tmp_172_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4042 and 4054.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4057 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__04__nodeB(const COMPONENT& component_reference, const INTEGER& p__packetLifetime)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_04_nodeB(");
p__packetLifetime.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_04_nodeB", text_buf);
p__packetLifetime.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__04__nodeC(const INTEGER& p__packetLifetime)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4064, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_04_nodeC");
current_location.update_lineno(4067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4067 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4068 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(4071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4071 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(4073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4073 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__lifetimeBase1s(INTEGER_template(p__packetLifetime)), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(4087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4087 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4090 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4093 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__04__nodeC(const COMPONENT& component_reference, const INTEGER& p__packetLifetime)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_04_nodeC(");
p__packetLifetime.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_04_nodeC", text_buf);
p__packetLifetime.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4104, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_06");
current_location.update_lineno(4107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4107 */
COMPONENT v__nodeB;
current_location.update_lineno(4108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4108 */
COMPONENT v__nodeD;
current_location.update_lineno(4113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4113 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(4118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4118 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4119);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4119 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(4120);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4120 */
start_f__GEONW__PON__FPB__BV__06__nodeB(v__nodeB);
current_location.update_lineno(4121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4121 */
start_f__GEONW__PON__FPB__BV__06__nodeD(v__nodeD);
current_location.update_lineno(4124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4124 */
{
LibCommon__Sync::SyncPointList tmp_175;
tmp_175.set_size(2);
tmp_175[0] = LibCommon__Sync::c__prDone;
tmp_175[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_175);
}
current_location.update_lineno(4127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4127 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__FPB__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__06__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4134, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_06_nodeB");
current_location.update_lineno(4137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4137 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4138 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4141 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4142 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(4143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4143 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4146);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4146 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4149 */
LibCommon__Time::f__sleep(1.0);
current_location.update_lineno(4150);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4150 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4151 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4152 */
{
tmp_176:
alt_status tmp_176_alt_flag_0 = ALT_MAYBE;
alt_status tmp_176_alt_flag_1 = ALT_MAYBE;
alt_status tmp_176_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_176_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4153 */
tmp_176_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_176_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4156);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4156 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4157 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_68).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4158 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_176_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4160 */
tmp_176_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_176_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4161 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4162 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_176_default_flag == ALT_MAYBE) {
tmp_176_default_flag = TTCN_Default::try_altsteps();
if (tmp_176_default_flag == ALT_YES || tmp_176_default_flag == ALT_BREAK) break;
else if (tmp_176_default_flag == ALT_REPEAT) goto tmp_176;
}
current_location.update_lineno(4152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4152 */
if (tmp_176_alt_flag_0 == ALT_NO && tmp_176_alt_flag_1 == ALT_NO && tmp_176_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4152 and 4164.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4167 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__06__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_06_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_06_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__06__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4174, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_06_nodeD");
current_location.update_lineno(4177);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4177 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4178 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4181 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4182 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4185 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4186 */
{
tmp_177:
alt_status tmp_177_alt_flag_0 = ALT_MAYBE;
alt_status tmp_177_alt_flag_1 = ALT_MAYBE;
alt_status tmp_177_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_177_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4187 */
tmp_177_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_177_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4190);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4190 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4191);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4191 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_68).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4192 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_177_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4194 */
tmp_177_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_177_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4195 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4196);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4196 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_177_default_flag == ALT_MAYBE) {
tmp_177_default_flag = TTCN_Default::try_altsteps();
if (tmp_177_default_flag == ALT_YES || tmp_177_default_flag == ALT_BREAK) break;
else if (tmp_177_default_flag == ALT_REPEAT) goto tmp_177;
}
current_location.update_lineno(4186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4186 */
if (tmp_177_alt_flag_0 == ALT_NO && tmp_177_alt_flag_1 == ALT_NO && tmp_177_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4186 and 4198.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4201);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4201 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__06__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_06_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_06_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4212, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_07");
current_location.update_lineno(4215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4215 */
COMPONENT v__nodeB;
current_location.update_lineno(4216);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4216 */
COMPONENT v__nodeD;
current_location.update_lineno(4217);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4217 */
INTEGER v__messageCount(2);
current_location.update_lineno(4222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4222 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(4227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4227 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4228 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(4229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4229 */
start_f__GEONW__PON__FPB__BV__07__nodeB(v__nodeB, 2);
current_location.update_lineno(4230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4230 */
start_f__GEONW__PON__FPB__BV__07__nodeD(v__nodeD, 2);
current_location.update_lineno(4233);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4233 */
{
LibCommon__Sync::SyncPointList tmp_180;
tmp_180.set_size(2);
tmp_180[0] = LibCommon__Sync::c__prDone;
tmp_180[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_180);
}
current_location.update_lineno(4236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4236 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__FPB__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__07__nodeB(const INTEGER& p__messageCount)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4243, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_07_nodeB");
current_location.update_lineno(4246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4246 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4247);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4247 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4248);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4248 */
INTEGER_template v__expectedSequenceNumber(ANY_VALUE);
current_location.update_lineno(4249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4249 */
INTEGER v__nbReceivedPackets(0);
current_location.update_lineno(4250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4250 */
INTEGER i(0);
current_location.update_lineno(4253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4253 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4254 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount = p__messageCount;
current_location.update_lineno(4255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4255 */
i = 0;
current_location.update_lineno(4255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4255 */
for ( ; ; ) {
current_location.update_lineno(4255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4255 */
if (!(i < LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) break;
current_location.update_lineno(4256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4256 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(4257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4257 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4258 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4255 */
{
INTEGER tmp_183;
++i;
}
}
current_location.update_lineno(4262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4262 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start(1.0);
current_location.update_lineno(4263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4263 */
{
tmp_184:
alt_status tmp_184_alt_flag_0 = ALT_MAYBE;
alt_status tmp_184_alt_flag_1 = ALT_MAYBE;
alt_status tmp_184_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_184_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4264 */
tmp_184_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_184_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4267 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4268 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_126).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4269 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_184_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4271 */
tmp_184_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_184_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4272);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4272 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_127).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4273 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_184_default_flag == ALT_MAYBE) {
tmp_184_default_flag = TTCN_Default::try_altsteps();
if (tmp_184_default_flag == ALT_YES || tmp_184_default_flag == ALT_BREAK) break;
else if (tmp_184_default_flag == ALT_REPEAT) goto tmp_184;
}
current_location.update_lineno(4263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4263 */
if (tmp_184_alt_flag_0 == ALT_NO && tmp_184_alt_flag_1 == ALT_NO && tmp_184_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4263 and 4275.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4278 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4279 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4280 */
{
tmp_185:
alt_status tmp_185_alt_flag_0 = ALT_MAYBE;
alt_status tmp_185_alt_flag_1 = ALT_MAYBE;
alt_status tmp_185_alt_flag_2 = ALT_MAYBE;
alt_status tmp_185_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_185_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4281 */
tmp_185_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), v__expectedSequenceNumber), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_185_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4284 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4285 */
{
INTEGER tmp_186;
++v__nbReceivedPackets;
}
current_location.update_lineno(4286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4286 */
if ((v__nbReceivedPackets >= LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) {
current_location.update_lineno(4287);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4287 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_128).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4288 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(4291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4291 */
v__expectedSequenceNumber = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().gnPacket().packet().extendedHeader()().geoBroadcastHeader().seqNumber() + 1);
current_location.update_lineno(4292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4292 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4293 */
goto tmp_185;
}
break;
}
}
if (tmp_185_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4296 */
tmp_185_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_185_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4299 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4300 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_129).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4301 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_185_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(4303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4303 */
tmp_185_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_185_alt_flag_2 == ALT_YES) {
current_location.update_lineno(4304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4304 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4305 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_185_default_flag == ALT_MAYBE) {
tmp_185_default_flag = TTCN_Default::try_altsteps();
if (tmp_185_default_flag == ALT_YES || tmp_185_default_flag == ALT_BREAK) break;
else if (tmp_185_default_flag == ALT_REPEAT) goto tmp_185;
}
current_location.update_lineno(4280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4280 */
if (tmp_185_alt_flag_0 == ALT_NO && tmp_185_alt_flag_1 == ALT_NO && tmp_185_alt_flag_2 == ALT_NO && tmp_185_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4280 and 4307.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4310 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__07__nodeB(const COMPONENT& component_reference, const INTEGER& p__messageCount)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_07_nodeB(");
p__messageCount.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_07_nodeB", text_buf);
p__messageCount.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__07__nodeD(const INTEGER& p__messageCount)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4317, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_07_nodeD");
current_location.update_lineno(4320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4320 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4321);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4321 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4322);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4322 */
INTEGER_template v__expectedSequenceNumber(ANY_VALUE);
current_location.update_lineno(4323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4323 */
INTEGER v__nbReceivedPackets(0);
current_location.update_lineno(4324);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4324 */
INTEGER i(0);
current_location.update_lineno(4327);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4327 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4328);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4328 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount = p__messageCount;
current_location.update_lineno(4329);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4329 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4332 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4333 */
{
tmp_189:
alt_status tmp_189_alt_flag_0 = ALT_MAYBE;
alt_status tmp_189_alt_flag_1 = ALT_MAYBE;
alt_status tmp_189_alt_flag_2 = ALT_MAYBE;
alt_status tmp_189_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_189_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4334 */
tmp_189_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), v__expectedSequenceNumber), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_189_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4337 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4338 */
{
INTEGER tmp_190;
++v__nbReceivedPackets;
}
current_location.update_lineno(4339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4339 */
if ((v__nbReceivedPackets >= LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__multipleMessagesCount)) {
current_location.update_lineno(4340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4340 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_128).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4341 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(4344);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4344 */
v__expectedSequenceNumber = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().gnPacket().packet().extendedHeader()().geoBroadcastHeader().seqNumber() + 1);
current_location.update_lineno(4345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4345 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4346 */
goto tmp_189;
}
break;
}
}
if (tmp_189_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4349 */
tmp_189_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_189_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4352 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4353);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4353 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_129).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4354 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_189_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(4356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4356 */
tmp_189_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_189_alt_flag_2 == ALT_YES) {
current_location.update_lineno(4357);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4357 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4358);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4358 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_189_default_flag == ALT_MAYBE) {
tmp_189_default_flag = TTCN_Default::try_altsteps();
if (tmp_189_default_flag == ALT_YES || tmp_189_default_flag == ALT_BREAK) break;
else if (tmp_189_default_flag == ALT_REPEAT) goto tmp_189;
}
current_location.update_lineno(4333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4333 */
if (tmp_189_alt_flag_0 == ALT_NO && tmp_189_alt_flag_1 == ALT_NO && tmp_189_alt_flag_2 == ALT_NO && tmp_189_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4333 and 4360.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4363 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__07__nodeD(const COMPONENT& component_reference, const INTEGER& p__messageCount)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_07_nodeD(");
p__messageCount.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_07_nodeD", text_buf);
p__messageCount.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4374, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_08");
current_location.update_lineno(4377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4377 */
COMPONENT v__nodeB;
current_location.update_lineno(4378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4378 */
COMPONENT v__nodeD;
current_location.update_lineno(4383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4383 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(4388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4388 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4389 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(4390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4390 */
start_f__GEONW__PON__FPB__BV__08__nodeB(v__nodeB);
current_location.update_lineno(4391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4391 */
start_f__GEONW__PON__FPB__BV__08__nodeD(v__nodeD);
current_location.update_lineno(4394);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4394 */
{
LibCommon__Sync::SyncPointList tmp_194;
tmp_194.set_size(2);
tmp_194[0] = LibCommon__Sync::c__prDone;
tmp_194[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_194);
}
current_location.update_lineno(4397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4397 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__FPB__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__08__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4404, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_08_nodeB");
current_location.update_lineno(4407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4407 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4408 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4411 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4412 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessageWithLifetime(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1), LibItsGeoNetworking__TypesAndValues::c__lifetime))))) {
current_location.update_lineno(4413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4413 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4414 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4416 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessageWithLifetime(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1), LibItsGeoNetworking__TypesAndValues::c__lifetime))))) {
current_location.update_lineno(4417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4417 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4418 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4420);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4420 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4423 */
LibCommon__Time::f__sleep(1.1e1);
current_location.update_lineno(4424);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4424 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4426 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(4427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4427 */
{
tmp_195:
alt_status tmp_195_alt_flag_0 = ALT_MAYBE;
alt_status tmp_195_alt_flag_1 = ALT_MAYBE;
alt_status tmp_195_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_195_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4429 */
tmp_195_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_195_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4432 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(4433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4433 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_130).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4434 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_195_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4436);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4436 */
tmp_195_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_195_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4437);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4437 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4438 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_195_default_flag == ALT_MAYBE) {
tmp_195_default_flag = TTCN_Default::try_altsteps();
if (tmp_195_default_flag == ALT_YES || tmp_195_default_flag == ALT_BREAK) break;
else if (tmp_195_default_flag == ALT_REPEAT) goto tmp_195;
}
current_location.update_lineno(4427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4427 */
if (tmp_195_alt_flag_0 == ALT_NO && tmp_195_alt_flag_1 == ALT_NO && tmp_195_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4427 and 4440.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4443);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4443 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__08__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_08_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_08_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__08__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4450, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_08_nodeD");
current_location.update_lineno(4453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4453 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4454 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4457);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4457 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4458 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4461 */
LibCommon__Time::f__sleep(1.1e1);
current_location.update_lineno(4462);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4462 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4464);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4464 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(4465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4465 */
{
tmp_196:
alt_status tmp_196_alt_flag_0 = ALT_MAYBE;
alt_status tmp_196_alt_flag_1 = ALT_MAYBE;
alt_status tmp_196_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_196_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4467 */
tmp_196_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_196_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4470 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(4471);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4471 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_130).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4472 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_196_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4474 */
tmp_196_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_196_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4475 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4476);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4476 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_196_default_flag == ALT_MAYBE) {
tmp_196_default_flag = TTCN_Default::try_altsteps();
if (tmp_196_default_flag == ALT_YES || tmp_196_default_flag == ALT_BREAK) break;
else if (tmp_196_default_flag == ALT_REPEAT) goto tmp_196;
}
current_location.update_lineno(4465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4465 */
if (tmp_196_alt_flag_0 == ALT_NO && tmp_196_alt_flag_1 == ALT_NO && tmp_196_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4465 and 4478.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4481 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__08__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_08_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_08_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__09()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4492, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_09");
current_location.update_lineno(4495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4495 */
COMPONENT v__nodeB;
current_location.update_lineno(4496);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4496 */
COMPONENT v__nodeC;
current_location.update_lineno(4499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4499 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(4500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4500 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4501 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(4502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4502 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(4506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4506 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(4511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4511 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4512 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4513 */
start_f__GEONW__PON__FPB__BV__09__nodeB(v__nodeB);
current_location.update_lineno(4514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4514 */
start_f__GEONW__PON__FPB__BV__09__nodeC(v__nodeC);
current_location.update_lineno(4517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4517 */
{
LibCommon__Sync::SyncPointList tmp_199;
tmp_199.set_size(2);
tmp_199[0] = LibCommon__Sync::c__prDone;
tmp_199[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_199);
}
current_location.update_lineno(4520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4520 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__09(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_09(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_09", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__09__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4527, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_09_nodeB");
current_location.update_lineno(4530);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4530 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4531);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4531 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4532 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4535 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(4536);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4536 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4539 */
LibCommon__Time::f__sleep(1.0);
current_location.update_lineno(4540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4540 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4541 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4542 */
{
tmp_200:
alt_status tmp_200_alt_flag_0 = ALT_MAYBE;
alt_status tmp_200_alt_flag_1 = ALT_MAYBE;
alt_status tmp_200_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_200_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4543 */
tmp_200_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_200_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4546 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4550 */
if ((LibItsGeoNetworking__Functions::f__getLifetimeValue(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().basicHeader().lifeTime()) < LibItsGeoNetworking__Functions::f__getMaxPacketLifeTime())) {
current_location.update_lineno(4551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4551 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_131).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4552);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4552 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(4555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4555 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_132).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4556 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_200_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4559 */
tmp_200_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_200_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4560 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4561 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_200_default_flag == ALT_MAYBE) {
tmp_200_default_flag = TTCN_Default::try_altsteps();
if (tmp_200_default_flag == ALT_YES || tmp_200_default_flag == ALT_BREAK) break;
else if (tmp_200_default_flag == ALT_REPEAT) goto tmp_200;
}
current_location.update_lineno(4542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4542 */
if (tmp_200_alt_flag_0 == ALT_NO && tmp_200_alt_flag_1 == ALT_NO && tmp_200_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4542 and 4563.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4566);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4566 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__09__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_09_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_09_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__09__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4573, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_09_nodeC");
current_location.update_lineno(4576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4576 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4577 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4578);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4578 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4581 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(4584);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4584 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(4592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4592 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(4593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4593 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4594 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4596 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4599);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4599 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4602 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__09__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_09_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_09_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4613, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_10");
current_location.update_lineno(4616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4616 */
COMPONENT v__nodeB;
current_location.update_lineno(4617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4617 */
COMPONENT v__nodeD;
current_location.update_lineno(4622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4622 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(4627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4627 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4628 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(4629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4629 */
start_f__GEONW__PON__FPB__BV__10__nodeB(v__nodeB);
current_location.update_lineno(4630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4630 */
start_f__GEONW__PON__FPB__BV__10__nodeD(v__nodeD);
current_location.update_lineno(4633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4633 */
{
LibCommon__Sync::SyncPointList tmp_203;
tmp_203.set_size(2);
tmp_203[0] = LibCommon__Sync::c__prDone;
tmp_203[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_203);
}
current_location.update_lineno(4636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4636 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__FPB__BV__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__10__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4643, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_10_nodeB");
current_location.update_lineno(4646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4646 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4647);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4647 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(4650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4650 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4651 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(4652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4652 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4653 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4655 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4658 */
LibCommon__Time::f__sleep(1.0);
current_location.update_lineno(4659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4659 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(4660);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4660 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4661 */
{
tmp_204:
alt_status tmp_204_alt_flag_0 = ALT_MAYBE;
alt_status tmp_204_alt_flag_1 = ALT_MAYBE;
alt_status tmp_204_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_204_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4662);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4662 */
tmp_204_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_204_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4665 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4669 */
if ((LibItsGeoNetworking__Functions::f__getLifetimeValue(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().basicHeader().lifeTime()) < LibItsGeoNetworking__Functions::f__getMaxPacketLifeTime())) {
current_location.update_lineno(4670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4670 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_131).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4671 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(4674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4674 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_132).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4675 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_204_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4678);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4678 */
tmp_204_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_204_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4679);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4679 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4680 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_204_default_flag == ALT_MAYBE) {
tmp_204_default_flag = TTCN_Default::try_altsteps();
if (tmp_204_default_flag == ALT_YES || tmp_204_default_flag == ALT_BREAK) break;
else if (tmp_204_default_flag == ALT_REPEAT) goto tmp_204;
}
current_location.update_lineno(4661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4661 */
if (tmp_204_alt_flag_0 == ALT_NO && tmp_204_alt_flag_1 == ALT_NO && tmp_204_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4661 and 4682.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4685 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__FPB__BV__10__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_10_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_10_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__10__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4692, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_10_nodeD");
current_location.update_lineno(4695);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4695 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4698 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(4699);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4699 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4702 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4703);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4703 */
{
tmp_205:
alt_status tmp_205_alt_flag_0 = ALT_MAYBE;
alt_status tmp_205_alt_flag_1 = ALT_MAYBE;
alt_status tmp_205_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_205_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4704 */
tmp_205_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_205_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4707);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4707 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4708);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4708 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_68).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4709 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_205_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4712 */
tmp_205_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_205_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4713);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4713 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4714);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4714 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_205_default_flag == ALT_MAYBE) {
tmp_205_default_flag = TTCN_Default::try_altsteps();
if (tmp_205_default_flag == ALT_YES || tmp_205_default_flag == ALT_BREAK) break;
else if (tmp_205_default_flag == ALT_REPEAT) goto tmp_205;
}
current_location.update_lineno(4703);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4703 */
if (tmp_205_alt_flag_0 == ALT_NO && tmp_205_alt_flag_1 == ALT_NO && tmp_205_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4703 and 4716.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4719);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4719 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__10__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_10_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_10_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4730, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_01");
current_location.update_lineno(4733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4733 */
COMPONENT v__nodeB;
current_location.update_lineno(4734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4734 */
COMPONENT v__nodeC;
current_location.update_lineno(4737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4737 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(4738);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4738 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4739);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4739 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(4740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4740 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(4744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4744 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4749 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4750 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4751 */
start_f__GEONW__PON__FPB__BV__11__01__nodeB(v__nodeB);
current_location.update_lineno(4752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4752 */
start_f__GEONW__PON__FPB__BV__11__01__nodeC(v__nodeC);
current_location.update_lineno(4755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4755 */
{
LibCommon__Sync::SyncPointList tmp_208;
tmp_208.set_size(2);
tmp_208[0] = LibCommon__Sync::c__prDone;
tmp_208[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_208);
}
current_location.update_lineno(4758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4758 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__11__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4765, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_01_nodeB");
current_location.update_lineno(4768);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4768 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4771);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4771 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(4772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4772 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4775);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4775 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4776);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4776 */
{
tmp_209:
alt_status tmp_209_alt_flag_0 = ALT_MAYBE;
alt_status tmp_209_alt_flag_1 = ALT_MAYBE;
alt_status tmp_209_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_209_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4777);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4777 */
tmp_209_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_209_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4787 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4788);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4788 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4789 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_209_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4791 */
tmp_209_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_209_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4792);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4792 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4793);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4793 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_209_default_flag == ALT_MAYBE) {
tmp_209_default_flag = TTCN_Default::try_altsteps();
if (tmp_209_default_flag == ALT_YES || tmp_209_default_flag == ALT_BREAK) break;
else if (tmp_209_default_flag == ALT_REPEAT) goto tmp_209;
}
current_location.update_lineno(4776);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4776 */
if (tmp_209_alt_flag_0 == ALT_NO && tmp_209_alt_flag_1 == ALT_NO && tmp_209_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4776 and 4795.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4798);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4798 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__01__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4805, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_01_nodeC");
current_location.update_lineno(4808);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4808 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(4809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4809 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4812);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4812 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(4814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4814 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(4821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4821 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4824 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithTrafficClass(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval).valueof()))))) {
current_location.update_lineno(4827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4827 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4828 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4830);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4830 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4831 */
{
tmp_210:
alt_status tmp_210_alt_flag_0 = ALT_MAYBE;
alt_status tmp_210_alt_flag_1 = ALT_MAYBE;
alt_status tmp_210_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_210_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4832 */
tmp_210_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_210_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4842);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4842 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4843);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4843 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4844 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_210_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4846);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4846 */
tmp_210_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_210_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4847 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4848);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4848 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_210_default_flag == ALT_MAYBE) {
tmp_210_default_flag = TTCN_Default::try_altsteps();
if (tmp_210_default_flag == ALT_YES || tmp_210_default_flag == ALT_BREAK) break;
else if (tmp_210_default_flag == ALT_REPEAT) goto tmp_210;
}
current_location.update_lineno(4831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4831 */
if (tmp_210_alt_flag_0 == ALT_NO && tmp_210_alt_flag_1 == ALT_NO && tmp_210_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4831 and 4850.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4853 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__01__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_01_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_01_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4860, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_02");
current_location.update_lineno(4863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4863 */
COMPONENT v__nodeB;
current_location.update_lineno(4864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4864 */
COMPONENT v__nodeC;
current_location.update_lineno(4867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4867 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(4868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4868 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4869 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(4870);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4870 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(4874);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4874 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4879);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4879 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(4880);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4880 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(4881);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4881 */
start_f__GEONW__PON__FPB__BV__11__02__nodeB(v__nodeB);
current_location.update_lineno(4882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4882 */
start_f__GEONW__PON__FPB__BV__11__02__nodeC(v__nodeC);
current_location.update_lineno(4885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4885 */
{
LibCommon__Sync::SyncPointList tmp_213;
tmp_213.set_size(2);
tmp_213[0] = LibCommon__Sync::c__prDone;
tmp_213[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_213);
}
current_location.update_lineno(4888);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4888 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__11__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4895, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_02_nodeB");
current_location.update_lineno(4898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4898 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4901 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(4902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4902 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4905 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4906 */
{
tmp_214:
alt_status tmp_214_alt_flag_0 = ALT_MAYBE;
alt_status tmp_214_alt_flag_1 = ALT_MAYBE;
alt_status tmp_214_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_214_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4907);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4907 */
tmp_214_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_214_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4917 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4918 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4919 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_214_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4921 */
tmp_214_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_214_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4922 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4923);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4923 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_214_default_flag == ALT_MAYBE) {
tmp_214_default_flag = TTCN_Default::try_altsteps();
if (tmp_214_default_flag == ALT_YES || tmp_214_default_flag == ALT_BREAK) break;
else if (tmp_214_default_flag == ALT_REPEAT) goto tmp_214;
}
current_location.update_lineno(4906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4906 */
if (tmp_214_alt_flag_0 == ALT_NO && tmp_214_alt_flag_1 == ALT_NO && tmp_214_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4906 and 4925.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4928);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4928 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__02__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4935, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_02_nodeC");
current_location.update_lineno(4938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4938 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(4941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4941 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(4942);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4942 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(4945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4945 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoAnycastMessageWithTrafficClass(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area2), LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval).valueof()))))) {
current_location.update_lineno(4948);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4948 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4949 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(4951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4951 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(4952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4952 */
{
tmp_215:
alt_status tmp_215_alt_flag_0 = ALT_MAYBE;
alt_status tmp_215_alt_flag_1 = ALT_MAYBE;
alt_status tmp_215_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_215_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(4953);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4953 */
tmp_215_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_215_alt_flag_0 == ALT_YES) {
current_location.update_lineno(4963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4963 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(4964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4964 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4965 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_215_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(4967);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4967 */
tmp_215_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_215_alt_flag_1 == ALT_YES) {
current_location.update_lineno(4968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4968 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4969);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4969 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_215_default_flag == ALT_MAYBE) {
tmp_215_default_flag = TTCN_Default::try_altsteps();
if (tmp_215_default_flag == ALT_YES || tmp_215_default_flag == ALT_BREAK) break;
else if (tmp_215_default_flag == ALT_REPEAT) goto tmp_215;
}
current_location.update_lineno(4952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4952 */
if (tmp_215_alt_flag_0 == ALT_NO && tmp_215_alt_flag_1 == ALT_NO && tmp_215_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 4952 and 4971.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(4974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4974 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__02__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_02_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_02_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 4981, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_03");
current_location.update_lineno(4984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4984 */
COMPONENT v__nodeB;
current_location.update_lineno(4985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4985 */
COMPONENT v__nodeC;
current_location.update_lineno(4988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4988 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(4989);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4989 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(4990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4990 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(4991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4991 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(4995);
/* ItsGeoNetworking_TpFunctions.ttcn, line 4995 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5000 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5001 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5002);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5002 */
start_f__GEONW__PON__FPB__BV__11__03__nodeB(v__nodeB);
current_location.update_lineno(5003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5003 */
start_f__GEONW__PON__FPB__BV__11__03__nodeC(v__nodeC);
current_location.update_lineno(5006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5006 */
{
LibCommon__Sync::SyncPointList tmp_218;
tmp_218.set_size(2);
tmp_218[0] = LibCommon__Sync::c__prDone;
tmp_218[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_218);
}
current_location.update_lineno(5009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5009 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__11__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5016, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_03_nodeB");
current_location.update_lineno(5019);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5019 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5022 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5023 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5026);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5026 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5027 */
{
tmp_219:
alt_status tmp_219_alt_flag_0 = ALT_MAYBE;
alt_status tmp_219_alt_flag_1 = ALT_MAYBE;
alt_status tmp_219_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_219_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5028 */
tmp_219_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_219_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5038 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5039 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5040);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5040 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_219_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5042 */
tmp_219_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_219_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5043 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5044 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_219_default_flag == ALT_MAYBE) {
tmp_219_default_flag = TTCN_Default::try_altsteps();
if (tmp_219_default_flag == ALT_YES || tmp_219_default_flag == ALT_BREAK) break;
else if (tmp_219_default_flag == ALT_REPEAT) goto tmp_219;
}
current_location.update_lineno(5027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5027 */
if (tmp_219_alt_flag_0 == ALT_NO && tmp_219_alt_flag_1 == ALT_NO && tmp_219_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5027 and 5046.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5049 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__03__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5056, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_03_nodeC");
current_location.update_lineno(5059);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5059 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5062 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5063 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5066 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessageWithTrafficClass(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area2), LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval).valueof()))))) {
current_location.update_lineno(5069);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5069 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5070);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5070 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(5072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5072 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5073 */
{
tmp_220:
alt_status tmp_220_alt_flag_0 = ALT_MAYBE;
alt_status tmp_220_alt_flag_1 = ALT_MAYBE;
alt_status tmp_220_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_220_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5074);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5074 */
tmp_220_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_220_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5084);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5084 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5085 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5086 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_220_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5088);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5088 */
tmp_220_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_220_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5089 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5090 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_220_default_flag == ALT_MAYBE) {
tmp_220_default_flag = TTCN_Default::try_altsteps();
if (tmp_220_default_flag == ALT_YES || tmp_220_default_flag == ALT_BREAK) break;
else if (tmp_220_default_flag == ALT_REPEAT) goto tmp_220;
}
current_location.update_lineno(5073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5073 */
if (tmp_220_alt_flag_0 == ALT_NO && tmp_220_alt_flag_1 == ALT_NO && tmp_220_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5073 and 5092.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5095);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5095 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__03__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_03_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_03_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5102, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_04");
current_location.update_lineno(5105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5105 */
COMPONENT v__nodeB;
current_location.update_lineno(5106);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5106 */
COMPONENT v__nodeC;
current_location.update_lineno(5109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5109 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__SRC))) {
current_location.update_lineno(5110);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5110 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_37).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5111 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5112 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5116);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5116 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5121 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5122 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5123);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5123 */
start_f__GEONW__PON__FPB__BV__11__04__nodeB(v__nodeB);
current_location.update_lineno(5124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5124 */
start_f__GEONW__PON__FPB__BV__11__04__nodeC(v__nodeC);
current_location.update_lineno(5127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5127 */
{
LibCommon__Sync::SyncPointList tmp_223;
tmp_223.set_size(2);
tmp_223[0] = LibCommon__Sync::c__prDone;
tmp_223[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_223);
}
current_location.update_lineno(5130);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5130 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__11__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5137, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_04_nodeB");
current_location.update_lineno(5140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5140 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5143 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5147);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5147 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5148 */
{
tmp_224:
alt_status tmp_224_alt_flag_0 = ALT_MAYBE;
alt_status tmp_224_alt_flag_1 = ALT_MAYBE;
alt_status tmp_224_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_224_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5149 */
tmp_224_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_224_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5159);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5159 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5160 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5161 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_224_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5163 */
tmp_224_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_224_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5164 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5165 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_224_default_flag == ALT_MAYBE) {
tmp_224_default_flag = TTCN_Default::try_altsteps();
if (tmp_224_default_flag == ALT_YES || tmp_224_default_flag == ALT_BREAK) break;
else if (tmp_224_default_flag == ALT_REPEAT) goto tmp_224;
}
current_location.update_lineno(5148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5148 */
if (tmp_224_alt_flag_0 == ALT_NO && tmp_224_alt_flag_1 == ALT_NO && tmp_224_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5148 and 5167.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5170 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__04__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5177, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_04_nodeC");
current_location.update_lineno(5180);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5180 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5183 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5184 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5187 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template(LibItsGeoNetworking__Templates::m__generateTsbMessageWithTrafficClass(LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval).valueof()).valueof()))))) {
current_location.update_lineno(5188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5188 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5189 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(5191);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5191 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5192 */
{
tmp_225:
alt_status tmp_225_alt_flag_0 = ALT_MAYBE;
alt_status tmp_225_alt_flag_1 = ALT_MAYBE;
alt_status tmp_225_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_225_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5193 */
tmp_225_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_225_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5203);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5203 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5204);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5204 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5205 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_225_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5207);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5207 */
tmp_225_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_225_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5208);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5208 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5209 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_225_default_flag == ALT_MAYBE) {
tmp_225_default_flag = TTCN_Default::try_altsteps();
if (tmp_225_default_flag == ALT_YES || tmp_225_default_flag == ALT_BREAK) break;
else if (tmp_225_default_flag == ALT_REPEAT) goto tmp_225;
}
current_location.update_lineno(5192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5192 */
if (tmp_225_alt_flag_0 == ALT_NO && tmp_225_alt_flag_1 == ALT_NO && tmp_225_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5192 and 5211.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5214 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__04__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_04_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_04_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5221, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_05");
current_location.update_lineno(5224);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5224 */
COMPONENT v__nodeB;
current_location.update_lineno(5225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5225 */
COMPONENT v__nodeC;
current_location.update_lineno(5228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5228 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__SRC))) {
current_location.update_lineno(5229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5229 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_37).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5230 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5231 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5235 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5240 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5241 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5242);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5242 */
start_f__GEONW__PON__FPB__BV__11__05__nodeB(v__nodeB);
current_location.update_lineno(5243);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5243 */
start_f__GEONW__PON__FPB__BV__11__05__nodeC(v__nodeC);
current_location.update_lineno(5246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5246 */
{
LibCommon__Sync::SyncPointList tmp_228;
tmp_228.set_size(2);
tmp_228[0] = LibCommon__Sync::c__prDone;
tmp_228[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_228);
}
current_location.update_lineno(5249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5249 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__11__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5256, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_05_nodeB");
current_location.update_lineno(5259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5259 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5262 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5263 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5266 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5267 */
{
tmp_229:
alt_status tmp_229_alt_flag_0 = ALT_MAYBE;
alt_status tmp_229_alt_flag_1 = ALT_MAYBE;
alt_status tmp_229_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_229_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5268 */
tmp_229_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_229_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5277);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5277 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5278 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5279 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_229_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5281 */
tmp_229_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_229_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5282 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5283);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5283 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_229_default_flag == ALT_MAYBE) {
tmp_229_default_flag = TTCN_Default::try_altsteps();
if (tmp_229_default_flag == ALT_YES || tmp_229_default_flag == ALT_BREAK) break;
else if (tmp_229_default_flag == ALT_REPEAT) goto tmp_229;
}
current_location.update_lineno(5267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5267 */
if (tmp_229_alt_flag_0 == ALT_NO && tmp_229_alt_flag_1 == ALT_NO && tmp_229_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5267 and 5285.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5288 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__11__05__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5295, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_11_05_nodeC");
current_location.update_lineno(5298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5298 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5301 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5302 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5305 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template(LibItsGeoNetworking__Templates::m__generateShbMessageWithTrafficClass(LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval).valueof()).valueof()))))) {
current_location.update_lineno(5306);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5306 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5307);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5307 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(5309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5309 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5310 */
{
tmp_230:
alt_status tmp_230_alt_flag_0 = ALT_MAYBE;
alt_status tmp_230_alt_flag_1 = ALT_MAYBE;
alt_status tmp_230_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_230_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5311);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5311 */
tmp_230_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_230_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5320 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5321);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5321 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5322);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5322 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_230_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5324);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5324 */
tmp_230_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_230_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5325 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5326 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_230_default_flag == ALT_MAYBE) {
tmp_230_default_flag = TTCN_Default::try_altsteps();
if (tmp_230_default_flag == ALT_YES || tmp_230_default_flag == ALT_BREAK) break;
else if (tmp_230_default_flag == ALT_REPEAT) goto tmp_230;
}
current_location.update_lineno(5310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5310 */
if (tmp_230_alt_flag_0 == ALT_NO && tmp_230_alt_flag_1 == ALT_NO && tmp_230_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5310 and 5328.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5331 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__11__05__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_11_05_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_11_05_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5342, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_01");
current_location.update_lineno(5345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5345 */
COMPONENT v__nodeB;
current_location.update_lineno(5346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5346 */
COMPONENT v__nodeC;
current_location.update_lineno(5349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5349 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(5350);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5350 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5351);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5351 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5352 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5356 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5361);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5361 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5362);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5362 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5363 */
start_f__GEONW__PON__FPB__BV__12__01__nodeB(v__nodeB);
current_location.update_lineno(5364);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5364 */
start_f__GEONW__PON__FPB__BV__12__01__nodeC(v__nodeC);
current_location.update_lineno(5367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5367 */
{
LibCommon__Sync::SyncPointList tmp_233;
tmp_233.set_size(2);
tmp_233[0] = LibCommon__Sync::c__prDone;
tmp_233[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_233);
}
current_location.update_lineno(5370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5370 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__12__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5377, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_01_nodeB");
current_location.update_lineno(5380);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5380 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(5383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5383 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5384);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5384 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5387);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5387 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5388 */
{
tmp_234:
alt_status tmp_234_alt_flag_0 = ALT_MAYBE;
alt_status tmp_234_alt_flag_1 = ALT_MAYBE;
alt_status tmp_234_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_234_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5389 */
tmp_234_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_234_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5399 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5400);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5400 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5401);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5401 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_234_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5403 */
tmp_234_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_234_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5404);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5404 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5405);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5405 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_234_default_flag == ALT_MAYBE) {
tmp_234_default_flag = TTCN_Default::try_altsteps();
if (tmp_234_default_flag == ALT_YES || tmp_234_default_flag == ALT_BREAK) break;
else if (tmp_234_default_flag == ALT_REPEAT) goto tmp_234;
}
current_location.update_lineno(5388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5388 */
if (tmp_234_alt_flag_0 == ALT_NO && tmp_234_alt_flag_1 == ALT_NO && tmp_234_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5388 and 5407.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5410 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__01__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5417, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_01_nodeC");
current_location.update_lineno(5420);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5420 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(5421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5421 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(5424);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5424 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5425);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5425 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5428 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA))), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(5445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5445 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5446 */
{
tmp_235:
alt_status tmp_235_alt_flag_0 = ALT_MAYBE;
alt_status tmp_235_alt_flag_1 = ALT_MAYBE;
alt_status tmp_235_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_235_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5447 */
tmp_235_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_235_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5457);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5457 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5458 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5459 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_235_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5461 */
tmp_235_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_235_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5462);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5462 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5463);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5463 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_235_default_flag == ALT_MAYBE) {
tmp_235_default_flag = TTCN_Default::try_altsteps();
if (tmp_235_default_flag == ALT_YES || tmp_235_default_flag == ALT_BREAK) break;
else if (tmp_235_default_flag == ALT_REPEAT) goto tmp_235;
}
current_location.update_lineno(5446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5446 */
if (tmp_235_alt_flag_0 == ALT_NO && tmp_235_alt_flag_1 == ALT_NO && tmp_235_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5446 and 5465.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5468);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5468 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__01__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_01_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_01_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5475, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_02");
current_location.update_lineno(5478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5478 */
COMPONENT v__nodeB;
current_location.update_lineno(5479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5479 */
COMPONENT v__nodeC;
current_location.update_lineno(5482);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5482 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(5483);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5483 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5484);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5484 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5485 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5489);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5489 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5494 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5495 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5496);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5496 */
start_f__GEONW__PON__FPB__BV__12__02__nodeB(v__nodeB);
current_location.update_lineno(5497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5497 */
start_f__GEONW__PON__FPB__BV__12__02__nodeC(v__nodeC);
current_location.update_lineno(5500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5500 */
{
LibCommon__Sync::SyncPointList tmp_238;
tmp_238.set_size(2);
tmp_238[0] = LibCommon__Sync::c__prDone;
tmp_238[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_238);
}
current_location.update_lineno(5503);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5503 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__12__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5510, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_02_nodeB");
current_location.update_lineno(5513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5513 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5516 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5517 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5520 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5521 */
{
tmp_239:
alt_status tmp_239_alt_flag_0 = ALT_MAYBE;
alt_status tmp_239_alt_flag_1 = ALT_MAYBE;
alt_status tmp_239_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_239_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5522 */
tmp_239_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_239_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5532 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5533 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5534 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_239_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5536);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5536 */
tmp_239_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_239_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5537);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5537 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5538 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_239_default_flag == ALT_MAYBE) {
tmp_239_default_flag = TTCN_Default::try_altsteps();
if (tmp_239_default_flag == ALT_YES || tmp_239_default_flag == ALT_BREAK) break;
else if (tmp_239_default_flag == ALT_REPEAT) goto tmp_239;
}
current_location.update_lineno(5521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5521 */
if (tmp_239_alt_flag_0 == ALT_NO && tmp_239_alt_flag_1 == ALT_NO && tmp_239_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5521 and 5540.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5543 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__02__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5550, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_02_nodeC");
current_location.update_lineno(5553);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5553 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5556 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5557 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5560 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(5574);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5574 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5575 */
{
tmp_240:
alt_status tmp_240_alt_flag_0 = ALT_MAYBE;
alt_status tmp_240_alt_flag_1 = ALT_MAYBE;
alt_status tmp_240_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_240_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5576 */
tmp_240_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_240_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5586 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5587 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5588 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_240_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5590 */
tmp_240_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_240_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5591 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5592 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_240_default_flag == ALT_MAYBE) {
tmp_240_default_flag = TTCN_Default::try_altsteps();
if (tmp_240_default_flag == ALT_YES || tmp_240_default_flag == ALT_BREAK) break;
else if (tmp_240_default_flag == ALT_REPEAT) goto tmp_240;
}
current_location.update_lineno(5575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5575 */
if (tmp_240_alt_flag_0 == ALT_NO && tmp_240_alt_flag_1 == ALT_NO && tmp_240_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5575 and 5594.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5597 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__02__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_02_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_02_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5604, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_03");
current_location.update_lineno(5607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5607 */
COMPONENT v__nodeB;
current_location.update_lineno(5608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5608 */
COMPONENT v__nodeC;
current_location.update_lineno(5611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5611 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(5612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5612 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5613);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5613 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5614);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5614 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5618 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5623 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5624 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5625 */
start_f__GEONW__PON__FPB__BV__12__03__nodeB(v__nodeB);
current_location.update_lineno(5626);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5626 */
start_f__GEONW__PON__FPB__BV__12__03__nodeC(v__nodeC);
current_location.update_lineno(5629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5629 */
{
LibCommon__Sync::SyncPointList tmp_243;
tmp_243.set_size(2);
tmp_243[0] = LibCommon__Sync::c__prDone;
tmp_243[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_243);
}
current_location.update_lineno(5632);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5632 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__12__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5639, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_03_nodeB");
current_location.update_lineno(5642);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5642 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5645 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5646 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5649 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5650 */
{
tmp_244:
alt_status tmp_244_alt_flag_0 = ALT_MAYBE;
alt_status tmp_244_alt_flag_1 = ALT_MAYBE;
alt_status tmp_244_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_244_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5651 */
tmp_244_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_244_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5661 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5662);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5662 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5663 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_244_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5665 */
tmp_244_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_244_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5666 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5667);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5667 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_244_default_flag == ALT_MAYBE) {
tmp_244_default_flag = TTCN_Default::try_altsteps();
if (tmp_244_default_flag == ALT_YES || tmp_244_default_flag == ALT_BREAK) break;
else if (tmp_244_default_flag == ALT_REPEAT) goto tmp_244;
}
current_location.update_lineno(5650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5650 */
if (tmp_244_alt_flag_0 == ALT_NO && tmp_244_alt_flag_1 == ALT_NO && tmp_244_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5650 and 5669.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5672);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5672 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__03__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5679, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_03_nodeC");
current_location.update_lineno(5682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5682 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5685 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5686 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5689);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5689 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(5703);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5703 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5704 */
{
tmp_245:
alt_status tmp_245_alt_flag_0 = ALT_MAYBE;
alt_status tmp_245_alt_flag_1 = ALT_MAYBE;
alt_status tmp_245_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_245_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5705 */
tmp_245_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_245_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5715 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5716 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5717);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5717 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_245_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5719);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5719 */
tmp_245_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_245_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5720);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5720 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5721);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5721 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_245_default_flag == ALT_MAYBE) {
tmp_245_default_flag = TTCN_Default::try_altsteps();
if (tmp_245_default_flag == ALT_YES || tmp_245_default_flag == ALT_BREAK) break;
else if (tmp_245_default_flag == ALT_REPEAT) goto tmp_245;
}
current_location.update_lineno(5704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5704 */
if (tmp_245_alt_flag_0 == ALT_NO && tmp_245_alt_flag_1 == ALT_NO && tmp_245_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5704 and 5723.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5726 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__03__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_03_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_03_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5733, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_04");
current_location.update_lineno(5736);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5736 */
COMPONENT v__nodeB;
current_location.update_lineno(5737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5737 */
COMPONENT v__nodeC;
current_location.update_lineno(5740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5740 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__SRC))) {
current_location.update_lineno(5741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5741 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_37).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5742 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5743 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5747 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5752 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5753 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(5754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5754 */
start_f__GEONW__PON__FPB__BV__12__04__nodeB(v__nodeB);
current_location.update_lineno(5755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5755 */
start_f__GEONW__PON__FPB__BV__12__04__nodeC(v__nodeC);
current_location.update_lineno(5758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5758 */
{
LibCommon__Sync::SyncPointList tmp_248;
tmp_248.set_size(2);
tmp_248[0] = LibCommon__Sync::c__prDone;
tmp_248[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_248);
}
current_location.update_lineno(5761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5761 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__FPB__BV__12__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5768, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_04_nodeB");
current_location.update_lineno(5771);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5771 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5774);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5774 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5775);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5775 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5778 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5779 */
{
tmp_249:
alt_status tmp_249_alt_flag_0 = ALT_MAYBE;
alt_status tmp_249_alt_flag_1 = ALT_MAYBE;
alt_status tmp_249_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_249_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5780);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5780 */
tmp_249_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_249_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5790 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5791 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5792);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5792 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_249_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5794);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5794 */
tmp_249_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_249_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5795);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5795 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5796 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_249_default_flag == ALT_MAYBE) {
tmp_249_default_flag = TTCN_Default::try_altsteps();
if (tmp_249_default_flag == ALT_YES || tmp_249_default_flag == ALT_BREAK) break;
else if (tmp_249_default_flag == ALT_REPEAT) goto tmp_249;
}
current_location.update_lineno(5779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5779 */
if (tmp_249_alt_flag_0 == ALT_NO && tmp_249_alt_flag_1 == ALT_NO && tmp_249_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5779 and 5798.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5801 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__FPB__BV__12__04__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5808, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_FPB_BV_12_04_nodeC");
current_location.update_lineno(5811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5811 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(5814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5814 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(5815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5815 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5818);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5818 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit), LibItsGeoNetworking__Templates::m__trafficClass(LibItsGeoNetworking__TypesAndValues::SCF::e__scfDisabled, LibItsGeoNetworking__Templates::m__trafficClass_p__ChOff_defval)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(5833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5833 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5834 */
{
tmp_250:
alt_status tmp_250_alt_flag_0 = ALT_MAYBE;
alt_status tmp_250_alt_flag_1 = ALT_MAYBE;
alt_status tmp_250_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_250_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5835);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5835 */
tmp_250_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_250_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5845 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5846);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5846 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_133).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5847 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_250_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5849 */
tmp_250_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_250_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5850 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_134).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5851 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_250_default_flag == ALT_MAYBE) {
tmp_250_default_flag = TTCN_Default::try_altsteps();
if (tmp_250_default_flag == ALT_YES || tmp_250_default_flag == ALT_BREAK) break;
else if (tmp_250_default_flag == ALT_REPEAT) goto tmp_250;
}
current_location.update_lineno(5834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5834 */
if (tmp_250_alt_flag_0 == ALT_NO && tmp_250_alt_flag_1 == ALT_NO && tmp_250_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5834 and 5853.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5856 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__FPB__BV__12__04__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_12_04_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_FPB_BV_12_04_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GNA__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5870, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GNA_BV_01");
current_location.update_lineno(5873);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5873 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(5876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5876 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__ADDR__AUTO))) {
current_location.update_lineno(5877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5877 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_135).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5878);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5878 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5879);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5879 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5882 */
if ((LibItsGeoNetworking__Functions::f__getIutGnLocalAddressConfigurationMethod() != LibItsGeoNetworking__TypesAndValues::GnAddressConfigurationMethod::e__auto)) {
current_location.update_lineno(5883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5883 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_136).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5884);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5884 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5885 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5889);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5889 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(5890);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5890 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(5895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5895 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(5896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5896 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(5897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5897 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(5898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5898 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5901 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5902 */
{
tmp_252:
alt_status tmp_252_alt_flag_0 = ALT_MAYBE;
alt_status tmp_252_alt_flag_1 = ALT_MAYBE;
alt_status tmp_252_alt_flag_2 = ALT_MAYBE;
alt_status tmp_252_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_252_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5903 */
tmp_252_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__longPosVectorAny(LibItsGeoNetworking__TypesAndValues::GN__Address_template(LibItsGeoNetworking__Functions::f__getIutGnLocalAddress())), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_252_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5907);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5907 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5908);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5908 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_137).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5909 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_252_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5911 */
tmp_252_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_252_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5915 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(5916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5916 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_138).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5917 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_252_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(5919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5919 */
tmp_252_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_252_alt_flag_2 == ALT_YES) {
current_location.update_lineno(5920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5920 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_77).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5921 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_252_default_flag == ALT_MAYBE) {
tmp_252_default_flag = TTCN_Default::try_altsteps();
if (tmp_252_default_flag == ALT_YES || tmp_252_default_flag == ALT_BREAK) break;
else if (tmp_252_default_flag == ALT_REPEAT) goto tmp_252;
}
current_location.update_lineno(5902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5902 */
if (tmp_252_alt_flag_0 == ALT_NO && tmp_252_alt_flag_1 == ALT_NO && tmp_252_alt_flag_2 == ALT_NO && tmp_252_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5902 and 5923.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5926);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5926 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(5927);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5927 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GNA__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GNA_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GNA_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GNA__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 5934, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GNA_BV_02");
current_location.update_lineno(5937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5937 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(5938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5938 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(5939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5939 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__geoNetInd;
current_location.update_lineno(5940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5940 */
LibItsGeoNetworking__TypesAndValues::GN__Address v__iutGnAddress(LibItsGeoNetworking__Templates::m__dummyGnAddr.valueof());
current_location.update_lineno(5943);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5943 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__DAD))) {
current_location.update_lineno(5944);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5944 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_139).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5945 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(5946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5946 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(5950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5950 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(5951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5951 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(5952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5952 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(5957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5957 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(5958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5958 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(5959);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5959 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessage)))) {
current_location.update_lineno(5960);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5960 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5961 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(5964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5964 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5965 */
{
tmp_255:
alt_status tmp_255_alt_flag_0 = ALT_MAYBE;
alt_status tmp_255_alt_flag_1 = ALT_MAYBE;
alt_status tmp_255_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_255_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5966);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5966 */
tmp_255_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__geoNetInd), any_compref, NULL);
if (tmp_255_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5970 */
v__iutGnAddress = const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__geoNetInd).msgIn().gnPacket().packet().extendedHeader()().shbHeader().srcPosVector().gnAddr();
break;
}
}
if (tmp_255_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5972 */
tmp_255_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_255_alt_flag_1 == ALT_YES) {
current_location.update_lineno(5973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5973 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_77).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5974 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_255_default_flag == ALT_MAYBE) {
tmp_255_default_flag = TTCN_Default::try_altsteps();
if (tmp_255_default_flag == ALT_YES || tmp_255_default_flag == ALT_BREAK) break;
else if (tmp_255_default_flag == ALT_REPEAT) goto tmp_255;
}
current_location.update_lineno(5965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5965 */
if (tmp_255_alt_flag_0 == ALT_NO && tmp_255_alt_flag_1 == ALT_NO && tmp_255_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5965 and 5976.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(5977);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5977 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(5980);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5980 */
v__longPosVectorNodeB.gnAddr() = v__iutGnAddress;
current_location.update_lineno(5981);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5981 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
current_location.update_lineno(5983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5983 */
LibCommon__Time::f__sleep(5.0e-1);
current_location.update_lineno(5985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5985 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessage)))) {
current_location.update_lineno(5986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5986 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5987 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(5989);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5989 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(5990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5990 */
{
tmp_258:
alt_status tmp_258_alt_flag_0 = ALT_MAYBE;
alt_status tmp_258_alt_flag_1 = ALT_MAYBE;
alt_status tmp_258_alt_flag_2 = ALT_MAYBE;
alt_status tmp_258_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_258_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(5991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5991 */
tmp_258_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorAny(LibItsGeoNetworking__TypesAndValues::GN__Address_template(v__iutGnAddress)), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_258_alt_flag_0 == ALT_YES) {
current_location.update_lineno(5995);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5995 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_140).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(5996);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5996 */
goto tmp_258;
}
}
if (tmp_258_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(5998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5998 */
tmp_258_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_258_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6002);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6002 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6003 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_141).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6004 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_258_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6006 */
tmp_258_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_258_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6007 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_77).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6008);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6008 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_258_default_flag == ALT_MAYBE) {
tmp_258_default_flag = TTCN_Default::try_altsteps();
if (tmp_258_default_flag == ALT_YES || tmp_258_default_flag == ALT_BREAK) break;
else if (tmp_258_default_flag == ALT_REPEAT) goto tmp_258;
}
current_location.update_lineno(5990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 5990 */
if (tmp_258_alt_flag_0 == ALT_NO && tmp_258_alt_flag_1 == ALT_NO && tmp_258_alt_flag_2 == ALT_NO && tmp_258_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 5990 and 6010.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6013);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6013 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(6014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6014 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GNA__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GNA_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GNA_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BEA__TI__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6026, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BEA_TI_01");
current_location.update_lineno(6029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6029 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(6030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6030 */
BOOLEAN v__beaconReceived(FALSE);
current_location.update_lineno(6031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6031 */
TIMER t__minRetransTimer("t_minRetransTimer", LibItsGeoNetworking__Functions::f__getBsRetransmitTimer());
current_location.update_lineno(6032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6032 */
TIMER t__maxRetransTimer("t_maxRetransTimer", (LibItsGeoNetworking__Functions::f__getBsRetransmitTimer() + LibItsGeoNetworking__Functions::f__getBsMaxJitter()));
current_location.update_lineno(6035);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6035 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(6036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6036 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6037);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6037 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6038 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6042 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(6043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6043 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(6048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6048 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(6049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6049 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6052);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6052 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(6053);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6053 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(6055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6055 */
t__maxRetransTimer.start();
current_location.update_lineno(6056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6056 */
{
tmp_260:
alt_status tmp_260_alt_flag_0 = ALT_MAYBE;
alt_status tmp_260_alt_flag_1 = ALT_MAYBE;
alt_status tmp_260_alt_flag_2 = ALT_MAYBE;
alt_status tmp_260_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_260_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6057 */
tmp_260_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_260_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6058);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6058 */
if ((v__beaconReceived == FALSE)) {
current_location.update_lineno(6059);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6059 */
v__beaconReceived = TRUE;
current_location.update_lineno(6060);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6060 */
t__minRetransTimer.start();
current_location.update_lineno(6061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6061 */
t__maxRetransTimer.start();
current_location.update_lineno(6063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6063 */
goto tmp_260;
}
current_location.update_lineno(6065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6065 */
if (t__minRetransTimer.running()) {
current_location.update_lineno(6066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6066 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_142).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6067 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(6070);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6070 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_143).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6071 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_260_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6074);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6074 */
tmp_260_alt_flag_1 = t__minRetransTimer.timeout();
if (tmp_260_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6075 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_88).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6076 */
goto tmp_260;
}
}
if (tmp_260_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6078 */
tmp_260_alt_flag_2 = t__maxRetransTimer.timeout();
if (tmp_260_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6079 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_144).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6080 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_260_default_flag == ALT_MAYBE) {
tmp_260_default_flag = TTCN_Default::try_altsteps();
if (tmp_260_default_flag == ALT_YES || tmp_260_default_flag == ALT_BREAK) break;
else if (tmp_260_default_flag == ALT_REPEAT) goto tmp_260;
}
current_location.update_lineno(6056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6056 */
if (tmp_260_alt_flag_0 == ALT_NO && tmp_260_alt_flag_1 == ALT_NO && tmp_260_alt_flag_2 == ALT_NO && tmp_260_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6056 and 6082.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6083);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6083 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__stopPassBeaconing);
current_location.update_lineno(6086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6086 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(6087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6087 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__BEA__TI__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BEA_TI_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BEA_TI_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BEA__TI__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6094, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BEA_TI_02");
current_location.update_lineno(6097);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6097 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(6098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6098 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(6099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6099 */
BOOLEAN v__geoUnicastReceived(FALSE);
current_location.update_lineno(6100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6100 */
BOOLEAN v__readyForRetransmission(FALSE);
current_location.update_lineno(6101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6101 */
TIMER t__minRetransTimer("t_minRetransTimer", (LibItsGeoNetworking__Functions::f__getBsRetransmitTimer() - LibItsGeoNetworking__Functions::f__getDeltaTimer()));
current_location.update_lineno(6102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6102 */
TIMER t__maxRetransTimer("t_maxRetransTimer", ((LibItsGeoNetworking__Functions::f__getBsRetransmitTimer() + LibItsGeoNetworking__Functions::f__getBsMaxJitter()) + LibItsGeoNetworking__Functions::f__getDeltaTimer()));
current_location.update_lineno(6105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6105 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__BEACON__SRC))) {
current_location.update_lineno(6106);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6106 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_21).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6107 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6108 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6112 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(6113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6113 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6114 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(6115);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6115 */
LibItsGeoNetworking__TypesAndValues::ExtendedHeader v__m__beaconHeader(LibItsGeoNetworking__Templates::m__beaconHeader(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)).valueof());
current_location.update_lineno(6118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6118 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__startPassBeaconing(LibItsGeoNetworking__TypesAndValues::BeaconHeader_template(const_cast< const LibItsGeoNetworking__TypesAndValues::ExtendedHeader&>(v__m__beaconHeader).beaconHeader())));
current_location.update_lineno(6121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6121 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6122 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6125 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessage)))) {
current_location.update_lineno(6126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6126 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6127 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(6129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6129 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6130);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6130 */
{
tmp_264:
alt_status tmp_264_alt_flag_0 = ALT_MAYBE;
alt_status tmp_264_alt_flag_1 = ALT_MAYBE;
alt_status tmp_264_alt_flag_2 = ALT_MAYBE;
alt_status tmp_264_alt_flag_3 = ALT_MAYBE;
alt_status tmp_264_alt_flag_4 = ALT_MAYBE;
alt_status tmp_264_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_264_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6131);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6131 */
tmp_264_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__sourceLongPosVec_defval, LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_264_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6132 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6133 */
t__minRetransTimer.start();
current_location.update_lineno(6134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6134 */
t__maxRetransTimer.start();
current_location.update_lineno(6135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6135 */
v__geoUnicastReceived = TRUE;
current_location.update_lineno(6136);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6136 */
goto tmp_264;
}
}
if (tmp_264_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6138 */
tmp_264_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket(LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__sourceLongPosVec_defval, LibItsGeoNetworking__Templates::mw__geoNwBeaconPacket_p__nextHeader_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_264_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6139 */
if ((!(v__geoUnicastReceived))) {
current_location.update_lineno(6140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6140 */
goto tmp_264;
}
current_location.update_lineno(6142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6142 */
if ((!(v__readyForRetransmission))) {
current_location.update_lineno(6143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6143 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_142).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(6147);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6147 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_143).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6148 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_264_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6151 */
tmp_264_alt_flag_2 = t__minRetransTimer.timeout();
if (tmp_264_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6152 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_88).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6153 */
v__readyForRetransmission = TRUE;
current_location.update_lineno(6154);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6154 */
goto tmp_264;
}
}
if (tmp_264_alt_flag_3 == ALT_MAYBE) {
current_location.update_lineno(6156);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6156 */
tmp_264_alt_flag_3 = t__maxRetransTimer.timeout();
if (tmp_264_alt_flag_3 == ALT_YES) {
current_location.update_lineno(6157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6157 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_144).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6158 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_264_alt_flag_4 == ALT_MAYBE) {
current_location.update_lineno(6160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6160 */
tmp_264_alt_flag_4 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_264_alt_flag_4 == ALT_YES) {
current_location.update_lineno(6161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6161 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_145).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6162 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_264_default_flag == ALT_MAYBE) {
tmp_264_default_flag = TTCN_Default::try_altsteps();
if (tmp_264_default_flag == ALT_YES || tmp_264_default_flag == ALT_BREAK) break;
else if (tmp_264_default_flag == ALT_REPEAT) goto tmp_264;
}
current_location.update_lineno(6130);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6130 */
if (tmp_264_alt_flag_0 == ALT_NO && tmp_264_alt_flag_1 == ALT_NO && tmp_264_alt_flag_2 == ALT_NO && tmp_264_alt_flag_3 == ALT_NO && tmp_264_alt_flag_4 == ALT_NO && tmp_264_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6130 and 6164.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6165 */
LibItsGeoNetworking__Functions::f__acTriggerEvent(LibItsGeoNetworking__Templates::m__stopPassBeaconing);
current_location.update_lineno(6168);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6168 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(6169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6169 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__BEA__TI__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BEA_TI_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BEA_TI_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6181, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_01");
current_location.update_lineno(6184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6184 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(6187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6187 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(6188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6188 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6189 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6190);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6190 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6192 */
{
boolean tmp_267;
tmp_267 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__greedy);
if (tmp_267) tmp_267 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__unspecified);
if (tmp_267) {
current_location.update_lineno(6193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6193 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_146).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6194 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6195 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(6199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6199 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(6200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6200 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6205 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6206 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6209 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr()))))) {
current_location.update_lineno(6210);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6210 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6211);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6211 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(6213);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6213 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6214 */
{
tmp_269:
alt_status tmp_269_alt_flag_0 = ALT_MAYBE;
alt_status tmp_269_alt_flag_1 = ALT_MAYBE;
alt_status tmp_269_alt_flag_2 = ALT_MAYBE;
alt_status tmp_269_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_269_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6215 */
tmp_269_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_269_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6225 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6226 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_147).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6227 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_269_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6229 */
tmp_269_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(ANY_VALUE), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_269_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6239 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6240 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_148).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6241 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_269_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6243);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6243 */
tmp_269_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_269_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6244);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6244 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_77).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6245);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6245 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_269_default_flag == ALT_MAYBE) {
tmp_269_default_flag = TTCN_Default::try_altsteps();
if (tmp_269_default_flag == ALT_YES || tmp_269_default_flag == ALT_BREAK) break;
else if (tmp_269_default_flag == ALT_REPEAT) goto tmp_269;
}
current_location.update_lineno(6214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6214 */
if (tmp_269_alt_flag_0 == ALT_NO && tmp_269_alt_flag_1 == ALT_NO && tmp_269_alt_flag_2 == ALT_NO && tmp_269_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6214 and 6247.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6250 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(6251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6251 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GUC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6260, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_02");
current_location.update_lineno(6263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6263 */
COMPONENT v__nodeB;
current_location.update_lineno(6264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6264 */
COMPONENT v__nodeC;
current_location.update_lineno(6265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6265 */
COMPONENT v__nodeD;
current_location.update_lineno(6268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6268 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(6269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6269 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6270 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6271 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6273 */
{
boolean tmp_270;
tmp_270 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__greedy);
if (tmp_270) tmp_270 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__unspecified);
if (tmp_270) {
current_location.update_lineno(6274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6274 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_146).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6275 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6276);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6276 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(6280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6280 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(6285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6285 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6286 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(6287);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6287 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(6288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6288 */
start_f__GEONW__PON__GUC__BV__02__nodeB(v__nodeB);
current_location.update_lineno(6289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6289 */
start_f__GEONW__PON__GUC__BV__02__nodeC(v__nodeC);
current_location.update_lineno(6290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6290 */
start_f__GEONW__PON__GUC__BV__02__nodeD(v__nodeD);
current_location.update_lineno(6293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6293 */
{
LibCommon__Sync::SyncPointList tmp_274;
tmp_274.set_size(2);
tmp_274[0] = LibCommon__Sync::c__prDone;
tmp_274[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_274);
}
current_location.update_lineno(6296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6296 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GUC__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6303, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_02_nodeB");
current_location.update_lineno(6306);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6306 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(6309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6309 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6310 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6313 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6314 */
{
tmp_275:
alt_status tmp_275_alt_flag_0 = ALT_MAYBE;
alt_status tmp_275_alt_flag_1 = ALT_MAYBE;
alt_status tmp_275_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_275_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6315);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6315 */
tmp_275_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_275_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6325 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6326 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_150).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6327);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6327 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_275_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6329);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6329 */
tmp_275_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_275_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6330);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6330 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6331 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_275_default_flag == ALT_MAYBE) {
tmp_275_default_flag = TTCN_Default::try_altsteps();
if (tmp_275_default_flag == ALT_YES || tmp_275_default_flag == ALT_BREAK) break;
else if (tmp_275_default_flag == ALT_REPEAT) goto tmp_275;
}
current_location.update_lineno(6314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6314 */
if (tmp_275_alt_flag_0 == ALT_NO && tmp_275_alt_flag_1 == ALT_NO && tmp_275_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6314 and 6333.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6336 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__02__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6343, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_02_nodeC");
current_location.update_lineno(6348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6348 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6349 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6352 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA))), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6367 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6370 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__02__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_02_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_02_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__02__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6377, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_02_nodeD");
current_location.update_lineno(6382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6382 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6383 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6386);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6386 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6389 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__02__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_02_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_02_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6400, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_03");
current_location.update_lineno(6403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6403 */
COMPONENT v__nodeB;
current_location.update_lineno(6404);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6404 */
COMPONENT v__nodeC;
current_location.update_lineno(6407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6407 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(6408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6408 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6409 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6410 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6414 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(6419);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6419 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6420);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6420 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(6421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6421 */
start_f__GEONW__PON__GUC__BV__03__nodeB(v__nodeB);
current_location.update_lineno(6422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6422 */
start_f__GEONW__PON__GUC__BV__03__nodeC(v__nodeC);
current_location.update_lineno(6425);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6425 */
{
LibCommon__Sync::SyncPointList tmp_278;
tmp_278.set_size(2);
tmp_278[0] = LibCommon__Sync::c__prDone;
tmp_278[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_278);
}
current_location.update_lineno(6428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6428 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6435, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_03_nodeB");
current_location.update_lineno(6438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6438 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(6441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6441 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6443);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6443 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut))), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6455 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6458 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6459 */
{
tmp_279:
alt_status tmp_279_alt_flag_0 = ALT_MAYBE;
alt_status tmp_279_alt_flag_1 = ALT_MAYBE;
alt_status tmp_279_alt_flag_2 = ALT_MAYBE;
alt_status tmp_279_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_279_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6460 */
tmp_279_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacketWithHl(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_279_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6473 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6474 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_150).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6475 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_279_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6477 */
tmp_279_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(ANY_VALUE), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_279_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6487);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6487 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6488);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6488 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_152).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6489);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6489 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_279_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6491 */
tmp_279_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_279_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6492 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6493 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_279_default_flag == ALT_MAYBE) {
tmp_279_default_flag = TTCN_Default::try_altsteps();
if (tmp_279_default_flag == ALT_YES || tmp_279_default_flag == ALT_BREAK) break;
else if (tmp_279_default_flag == ALT_REPEAT) goto tmp_279;
}
current_location.update_lineno(6459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6459 */
if (tmp_279_alt_flag_0 == ALT_NO && tmp_279_alt_flag_1 == ALT_NO && tmp_279_alt_flag_2 == ALT_NO && tmp_279_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6459 and 6495.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6498 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__03__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6505, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_03_nodeC");
current_location.update_lineno(6508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6508 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__obsoleteLongPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(6511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6511 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6512 */
{
INTEGER tmp_280;
tmp_280 = (const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__obsoleteLongPosVectorNodeA).timestamp() - 1000);
v__obsoleteLongPosVectorNodeA.timestamp() = tmp_280;
}
current_location.update_lineno(6513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6513 */
{
INTEGER tmp_281;
tmp_281 = (const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__obsoleteLongPosVectorNodeA).latitude() - 1);
v__obsoleteLongPosVectorNodeA.latitude() = tmp_281;
}
current_location.update_lineno(6514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6514 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6517 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__obsoleteLongPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6533 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6536);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6536 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__03__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_03_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_03_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6547, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_04");
current_location.update_lineno(6550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6550 */
COMPONENT v__nodeB;
current_location.update_lineno(6551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6551 */
COMPONENT v__nodeC;
current_location.update_lineno(6554);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6554 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(6555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6555 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6556 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6557 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6561 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(6566);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6566 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6567);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6567 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(6568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6568 */
start_f__GEONW__PON__GUC__BO__04__nodeB(v__nodeB);
current_location.update_lineno(6569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6569 */
start_f__GEONW__PON__GUC__BO__04__nodeC(v__nodeC);
current_location.update_lineno(6572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6572 */
{
LibCommon__Sync::SyncPointList tmp_284;
tmp_284.set_size(2);
tmp_284[0] = LibCommon__Sync::c__prDone;
tmp_284[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_284);
}
current_location.update_lineno(6575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6575 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BO__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6582, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_04_nodeB");
current_location.update_lineno(6585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6585 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(6588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6588 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6589 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6592 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(6593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6593 */
{
tmp_285:
alt_status tmp_285_alt_flag_0 = ALT_MAYBE;
alt_status tmp_285_alt_flag_1 = ALT_MAYBE;
alt_status tmp_285_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_285_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6594 */
tmp_285_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(ANY_VALUE))), NULL, any_compref, NULL);
if (tmp_285_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6606 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(6607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6607 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_153).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6608 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_285_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6610);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6610 */
tmp_285_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_285_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6611 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_154).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6612 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_285_default_flag == ALT_MAYBE) {
tmp_285_default_flag = TTCN_Default::try_altsteps();
if (tmp_285_default_flag == ALT_YES || tmp_285_default_flag == ALT_BREAK) break;
else if (tmp_285_default_flag == ALT_REPEAT) goto tmp_285;
}
current_location.update_lineno(6593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6593 */
if (tmp_285_alt_flag_0 == ALT_NO && tmp_285_alt_flag_1 == ALT_NO && tmp_285_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6593 and 6614.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6617 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__04__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6624, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_04_nodeC");
current_location.update_lineno(6627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6627 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(6630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6630 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6631 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6634 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(1)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6649 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6652 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__04__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_04_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_04_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6661, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_05");
current_location.update_lineno(6664);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6664 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(6665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6665 */
INTEGER i;
current_location.update_lineno(6666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6666 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(6669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6669 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__DST))) {
current_location.update_lineno(6670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6670 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_52).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6671 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6672);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6672 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6676 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(6681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6681 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(6682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6682 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6685 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__getIutShortPosVector()), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(6692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6692 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(v__gnPacket, OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6694);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6694 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(6696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6696 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_288;
tmp_288 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_288.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_288);
}
current_location.update_lineno(6697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6697 */
i = 0;
current_location.update_lineno(6697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6697 */
for ( ; ; ) {
current_location.update_lineno(6697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6697 */
{
boolean tmp_290;
tmp_290 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_290) tmp_290 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_290) break;
}
current_location.update_lineno(6697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6697 */
{
INTEGER tmp_291;
++i;
}
}
current_location.update_lineno(6700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6700 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(6701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6701 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6702 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(6705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6705 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_155).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6706 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(6710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6710 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(6711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6711 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GUC__BV__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6720, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_06");
current_location.update_lineno(6723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6723 */
COMPONENT v__nodeB;
current_location.update_lineno(6724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6724 */
COMPONENT v__nodeC;
current_location.update_lineno(6725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6725 */
INTEGER v__distance((LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange() - 10));
current_location.update_lineno(6726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6726 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(6726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6726 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(6729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6729 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(6730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6730 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6731);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6731 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6732);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6732 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6734 */
if ((LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(6735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6735 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_156).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6736);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6736 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6737 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6741 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(6743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6743 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getIutLongPosVector();
current_location.update_lineno(6744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6744 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__computePositionUsingDistance(v__longPosVectorIut, v__distance, 0);
current_location.update_lineno(6745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6745 */
v__longPosVectorNodeA.gnAddr() = LibItsGeoNetworking__Functions::f__getTsGnLocalAddress(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(6750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6750 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6751 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(6752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6752 */
start_f__GEONW__PON__GUC__BV__06__nodeB(v__nodeB, v__distance, v__longPosVectorNodeA);
current_location.update_lineno(6753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6753 */
start_f__GEONW__PON__GUC__BV__06__nodeC(v__nodeC, v__longPosVectorNodeA);
current_location.update_lineno(6756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6756 */
{
LibCommon__Sync::SyncPointList tmp_297;
tmp_297.set_size(3);
tmp_297[0] = LibCommon__Sync::c__prDone;
tmp_297[1] = LibItsGeoNetworking__TypesAndValues::c__msgSent;
tmp_297[2] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_297);
}
current_location.update_lineno(6759);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6759 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__06__nodeB(const INTEGER& p__distanceToNodeA, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6768, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_06_nodeB");
current_location.update_lineno(6771);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6771 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * int2float(p__distanceToNodeA))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(6778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6778 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6779 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6782 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_157).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6783);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6783 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibItsGeoNetworking__TypesAndValues::c__msgSent, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6785 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6786 */
t__toCbf.start();
current_location.update_lineno(6787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6787 */
{
tmp_298:
alt_status tmp_298_alt_flag_0 = ALT_MAYBE;
alt_status tmp_298_alt_flag_1 = ALT_MAYBE;
alt_status tmp_298_alt_flag_2 = ALT_MAYBE;
alt_status tmp_298_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_298_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6788);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6788 */
tmp_298_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_298_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6798);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6798 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6799);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6799 */
if (t__toCbf.running()) {
current_location.update_lineno(6800);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6800 */
t__toCbf.stop();
current_location.update_lineno(6801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6801 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_158).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6802 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(6805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6805 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_150).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6806 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_298_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6809 */
tmp_298_alt_flag_1 = t__toCbf.timeout();
if (tmp_298_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6810);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6810 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_159).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6811 */
goto tmp_298;
}
}
if (tmp_298_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6813 */
tmp_298_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_298_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6814 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6815 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_298_default_flag == ALT_MAYBE) {
tmp_298_default_flag = TTCN_Default::try_altsteps();
if (tmp_298_default_flag == ALT_YES || tmp_298_default_flag == ALT_BREAK) break;
else if (tmp_298_default_flag == ALT_REPEAT) goto tmp_298;
}
current_location.update_lineno(6787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6787 */
if (tmp_298_alt_flag_0 == ALT_NO && tmp_298_alt_flag_1 == ALT_NO && tmp_298_alt_flag_2 == ALT_NO && tmp_298_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6787 and 6817.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6820);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6820 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__06__nodeB(const COMPONENT& component_reference, const INTEGER& p__distanceToNodeA, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_06_nodeB(");
p__distanceToNodeA.log();
TTCN_Logger::log_event_str(", ");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_06_nodeB", text_buf);
p__distanceToNodeA.encode_text(text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__06__nodeC(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6828, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_06_nodeC");
current_location.update_lineno(6833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6833 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6834 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6837);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6837 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(6851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6851 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_157).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6852);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6852 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibItsGeoNetworking__TypesAndValues::c__msgSent, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6854);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6854 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6855 */
{
tmp_299:
alt_status tmp_299_alt_flag_0 = ALT_MAYBE;
alt_status tmp_299_alt_flag_1 = ALT_MAYBE;
alt_status tmp_299_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_299_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6856 */
tmp_299_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_299_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6866);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6866 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6867 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_160).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6868 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_299_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6870);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6870 */
tmp_299_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_299_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6871);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6871 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_161).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6872);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6872 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_299_default_flag == ALT_MAYBE) {
tmp_299_default_flag = TTCN_Default::try_altsteps();
if (tmp_299_default_flag == ALT_YES || tmp_299_default_flag == ALT_BREAK) break;
else if (tmp_299_default_flag == ALT_REPEAT) goto tmp_299;
}
current_location.update_lineno(6855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6855 */
if (tmp_299_alt_flag_0 == ALT_NO && tmp_299_alt_flag_1 == ALT_NO && tmp_299_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6855 and 6874.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6877 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__06__nodeC(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_06_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_06_nodeC", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6888, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_07");
current_location.update_lineno(6891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6891 */
COMPONENT v__nodeB;
current_location.update_lineno(6892);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6892 */
COMPONENT v__nodeC;
current_location.update_lineno(6893);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6893 */
INTEGER v__distance((LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange() * 2));
current_location.update_lineno(6894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6894 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(6894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6894 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(6897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6897 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(6898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6898 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6899 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6900 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6902 */
if ((LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(6903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6903 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_156).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6904 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(6905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6905 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(6909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6909 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(6911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6911 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getIutLongPosVector();
current_location.update_lineno(6912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6912 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__computePositionUsingDistance(v__longPosVectorIut, v__distance, 0);
current_location.update_lineno(6913);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6913 */
v__longPosVectorNodeA.gnAddr() = LibItsGeoNetworking__Functions::f__getTsGnLocalAddress(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(6918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6918 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(6919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6919 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(6920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6920 */
start_f__GEONW__PON__GUC__BV__07__nodeB(v__nodeB, v__longPosVectorNodeA);
current_location.update_lineno(6921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6921 */
start_f__GEONW__PON__GUC__BV__07__nodeC(v__nodeC, v__longPosVectorNodeA);
current_location.update_lineno(6924);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6924 */
{
LibCommon__Sync::SyncPointList tmp_305;
tmp_305.set_size(3);
tmp_305[0] = LibCommon__Sync::c__prDone;
tmp_305[1] = LibItsGeoNetworking__TypesAndValues::c__msgSent;
tmp_305[2] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_305);
}
current_location.update_lineno(6927);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6927 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__07__nodeB(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6935, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_07_nodeB");
current_location.update_lineno(6938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6938 */
TIMER t__toCbf("t_toCbf", (int2float(LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMinTime()) / 1.0e3));
current_location.update_lineno(6941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6941 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6942);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6942 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6945 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_157).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6946 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibItsGeoNetworking__TypesAndValues::c__msgSent, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(6948);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6948 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(6949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6949 */
t__toCbf.start();
current_location.update_lineno(6950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6950 */
{
tmp_306:
alt_status tmp_306_alt_flag_0 = ALT_MAYBE;
alt_status tmp_306_alt_flag_1 = ALT_MAYBE;
alt_status tmp_306_alt_flag_2 = ALT_MAYBE;
alt_status tmp_306_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_306_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(6951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6951 */
tmp_306_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_306_alt_flag_0 == ALT_YES) {
current_location.update_lineno(6961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6961 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(6962);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6962 */
if (t__toCbf.running()) {
current_location.update_lineno(6963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6963 */
t__toCbf.stop();
current_location.update_lineno(6964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6964 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_158).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6965 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(6968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6968 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_150).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6969);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6969 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_306_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(6972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6972 */
tmp_306_alt_flag_1 = t__toCbf.timeout();
if (tmp_306_alt_flag_1 == ALT_YES) {
current_location.update_lineno(6973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6973 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_159).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6974 */
goto tmp_306;
}
}
if (tmp_306_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(6977);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6977 */
tmp_306_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_306_alt_flag_2 == ALT_YES) {
current_location.update_lineno(6978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6978 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(6979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6979 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_306_default_flag == ALT_MAYBE) {
tmp_306_default_flag = TTCN_Default::try_altsteps();
if (tmp_306_default_flag == ALT_YES || tmp_306_default_flag == ALT_BREAK) break;
else if (tmp_306_default_flag == ALT_REPEAT) goto tmp_306;
}
current_location.update_lineno(6950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6950 */
if (tmp_306_alt_flag_0 == ALT_NO && tmp_306_alt_flag_1 == ALT_NO && tmp_306_alt_flag_2 == ALT_NO && tmp_306_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 6950 and 6981.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(6984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6984 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__07__nodeB(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_07_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_07_nodeB", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__07__nodeC(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 6992, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_07_nodeC");
current_location.update_lineno(6997);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6997 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(6998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 6998 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7001 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7015 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_157).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7016 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibItsGeoNetworking__TypesAndValues::c__msgSent, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7018 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7019);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7019 */
{
tmp_307:
alt_status tmp_307_alt_flag_0 = ALT_MAYBE;
alt_status tmp_307_alt_flag_1 = ALT_MAYBE;
alt_status tmp_307_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_307_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7020 */
tmp_307_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_307_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7030 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7031 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_150).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7032 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_307_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7034);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7034 */
tmp_307_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_307_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7035);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7035 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7036 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_307_default_flag == ALT_MAYBE) {
tmp_307_default_flag = TTCN_Default::try_altsteps();
if (tmp_307_default_flag == ALT_YES || tmp_307_default_flag == ALT_BREAK) break;
else if (tmp_307_default_flag == ALT_REPEAT) goto tmp_307;
}
current_location.update_lineno(7019);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7019 */
if (tmp_307_alt_flag_0 == ALT_NO && tmp_307_alt_flag_1 == ALT_NO && tmp_307_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7019 and 7038.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7041 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__07__nodeC(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_07_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_07_nodeC", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7052, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_08");
current_location.update_lineno(7055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7055 */
COMPONENT v__nodeB;
current_location.update_lineno(7056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7056 */
COMPONENT v__nodeC;
current_location.update_lineno(7057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7057 */
INTEGER v__distance((LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange() - 10));
current_location.update_lineno(7058);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7058 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(7058);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7058 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(7061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7061 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(7062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7062 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7063 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7064 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7066 */
if ((LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(7067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7067 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_156).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7068 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7069);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7069 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7073 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(7075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7075 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getIutLongPosVector();
current_location.update_lineno(7076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7076 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__computePositionUsingDistance(v__longPosVectorIut, v__distance, 0);
current_location.update_lineno(7077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7077 */
v__longPosVectorNodeA.gnAddr() = LibItsGeoNetworking__Functions::f__getTsGnLocalAddress(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(7082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7082 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7083);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7083 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(7084);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7084 */
start_f__GEONW__PON__GUC__BV__08__nodeB(v__nodeB, v__longPosVectorNodeA);
current_location.update_lineno(7085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7085 */
start_f__GEONW__PON__GUC__BV__08__nodeC(v__nodeC, v__longPosVectorNodeA);
current_location.update_lineno(7088);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7088 */
{
LibCommon__Sync::SyncPointList tmp_313;
tmp_313.set_size(2);
tmp_313[0] = LibCommon__Sync::c__prDone;
tmp_313[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_313);
}
current_location.update_lineno(7091);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7091 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__08__nodeB(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7099, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_08_nodeB");
current_location.update_lineno(7104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7104 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7105 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7108 */
LibCommon__Time::f__sleepIgnoreDef((int2float(LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMaxTime()) / 2.0e3));
current_location.update_lineno(7110);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7110 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(9)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7125 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(7126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7126 */
{
tmp_314:
alt_status tmp_314_alt_flag_0 = ALT_MAYBE;
alt_status tmp_314_alt_flag_1 = ALT_MAYBE;
alt_status tmp_314_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_314_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7127 */
tmp_314_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_314_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7137 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(7138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7138 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_153).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7139 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_314_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7142 */
tmp_314_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_314_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7143 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_154).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_314_default_flag == ALT_MAYBE) {
tmp_314_default_flag = TTCN_Default::try_altsteps();
if (tmp_314_default_flag == ALT_YES || tmp_314_default_flag == ALT_BREAK) break;
else if (tmp_314_default_flag == ALT_REPEAT) goto tmp_314;
}
current_location.update_lineno(7126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7126 */
if (tmp_314_alt_flag_0 == ALT_NO && tmp_314_alt_flag_1 == ALT_NO && tmp_314_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7126 and 7146.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7149 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__08__nodeB(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_08_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_08_nodeB", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__08__nodeC(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7157, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_08_nodeC");
current_location.update_lineno(7162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7162 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7163 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7167 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7182 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(7183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7183 */
{
tmp_315:
alt_status tmp_315_alt_flag_0 = ALT_MAYBE;
alt_status tmp_315_alt_flag_1 = ALT_MAYBE;
alt_status tmp_315_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_315_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7184 */
tmp_315_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_315_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7194 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7195 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_153).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7196);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7196 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_315_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7198 */
tmp_315_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_315_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7199 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_154).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7200 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_315_default_flag == ALT_MAYBE) {
tmp_315_default_flag = TTCN_Default::try_altsteps();
if (tmp_315_default_flag == ALT_YES || tmp_315_default_flag == ALT_BREAK) break;
else if (tmp_315_default_flag == ALT_REPEAT) goto tmp_315;
}
current_location.update_lineno(7183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7183 */
if (tmp_315_alt_flag_0 == ALT_NO && tmp_315_alt_flag_1 == ALT_NO && tmp_315_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7183 and 7202.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7205 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__08__nodeC(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_08_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_08_nodeC", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7216, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_10");
current_location.update_lineno(7219);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7219 */
COMPONENT v__nodeB;
current_location.update_lineno(7220);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7220 */
COMPONENT v__nodeC;
current_location.update_lineno(7221);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7221 */
INTEGER v__distance((LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange() - 10));
current_location.update_lineno(7222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7222 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(7222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7222 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(7225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7225 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(7226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7226 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7227 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7228 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7230 */
if ((LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(7231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7231 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_156).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7232 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7233);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7233 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7237 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(7239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7239 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getIutLongPosVector();
current_location.update_lineno(7240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7240 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__computePositionUsingDistance(v__longPosVectorIut, v__distance, 0);
current_location.update_lineno(7241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7241 */
v__longPosVectorNodeA.gnAddr() = LibItsGeoNetworking__Functions::f__getTsGnLocalAddress(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(7246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7246 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7247);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7247 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(7248);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7248 */
start_f__GEONW__PON__GUC__BV__10__nodeB(v__nodeB, v__longPosVectorNodeA);
current_location.update_lineno(7249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7249 */
start_f__GEONW__PON__GUC__BV__10__nodeC(v__nodeC, v__longPosVectorNodeA);
current_location.update_lineno(7252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7252 */
{
LibCommon__Sync::SyncPointList tmp_321;
tmp_321.set_size(2);
tmp_321[0] = LibCommon__Sync::c__prDone;
tmp_321[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_321);
}
current_location.update_lineno(7255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7255 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__10__nodeB(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7263, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_10_nodeB");
current_location.update_lineno(7268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7268 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7269 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7272);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7272 */
LibCommon__Time::f__sleepIgnoreDef((int2float(LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMaxTime()) / 2.0e3));
current_location.update_lineno(7274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7274 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7275 */
{
tmp_322:
alt_status tmp_322_alt_flag_0 = ALT_MAYBE;
alt_status tmp_322_alt_flag_1 = ALT_MAYBE;
alt_status tmp_322_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_322_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7276);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7276 */
tmp_322_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_322_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7286 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7287);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7287 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_160).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7288 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_322_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7291 */
tmp_322_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_322_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7292 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7293 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_322_default_flag == ALT_MAYBE) {
tmp_322_default_flag = TTCN_Default::try_altsteps();
if (tmp_322_default_flag == ALT_YES || tmp_322_default_flag == ALT_BREAK) break;
else if (tmp_322_default_flag == ALT_REPEAT) goto tmp_322;
}
current_location.update_lineno(7275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7275 */
if (tmp_322_alt_flag_0 == ALT_NO && tmp_322_alt_flag_1 == ALT_NO && tmp_322_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7275 and 7295.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7298 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__10__nodeB(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_10_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_10_nodeB", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__10__nodeC(const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7306, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_10_nodeC");
current_location.update_lineno(7311);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7311 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(7312);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7312 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7315);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7315 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7330);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7330 */
LibCommon__Time::f__sleepIgnoreDef((int2float(LibItsGeoNetworking__Functions::f__getGeoUnicastCbfMaxTime()) / 2.0e3));
current_location.update_lineno(7332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7332 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7333 */
{
tmp_323:
alt_status tmp_323_alt_flag_0 = ALT_MAYBE;
alt_status tmp_323_alt_flag_1 = ALT_MAYBE;
alt_status tmp_323_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_323_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7334 */
tmp_323_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(p__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_323_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7344);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7344 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7345 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_160).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7346 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_323_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7348 */
tmp_323_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_323_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7349 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_151).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7350);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7350 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_323_default_flag == ALT_MAYBE) {
tmp_323_default_flag = TTCN_Default::try_altsteps();
if (tmp_323_default_flag == ALT_YES || tmp_323_default_flag == ALT_BREAK) break;
else if (tmp_323_default_flag == ALT_REPEAT) goto tmp_323;
}
current_location.update_lineno(7333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7333 */
if (tmp_323_alt_flag_0 == ALT_NO && tmp_323_alt_flag_1 == ALT_NO && tmp_323_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7333 and 7352.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7355 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__10__nodeC(const COMPONENT& component_reference, const LibItsGeoNetworking__TypesAndValues::LongPosVector& p__longPosVectorNodeA)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_10_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_10_nodeC", text_buf);
p__longPosVectorNodeA.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__11()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7366, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_11");
current_location.update_lineno(7369);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7369 */
COMPONENT v__nodeB;
current_location.update_lineno(7370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7370 */
COMPONENT v__nodeC;
current_location.update_lineno(7373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7373 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__SRC))) {
current_location.update_lineno(7374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7374 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_25).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7375);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7375 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7376 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7378 */
if ((LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(7379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7379 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_156).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7380);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7380 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7381 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7385 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(7390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7390 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7391 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(7392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7392 */
start_f__GEONW__PON__GUC__BV__11__nodeB(v__nodeB);
current_location.update_lineno(7393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7393 */
start_f__GEONW__PON__GUC__BV__11__nodeC(v__nodeC);
current_location.update_lineno(7396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7396 */
{
LibCommon__Sync::SyncPointList tmp_326;
tmp_326.set_size(2);
tmp_326[0] = LibCommon__Sync::c__prDone;
tmp_326[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_326);
}
current_location.update_lineno(7399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7399 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BV__11(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_11(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_11", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__11__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7406, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_11_nodeB");
current_location.update_lineno(7409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7409 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(7412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7412 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7413 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7416 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr()))))) {
current_location.update_lineno(7417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7417 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7418 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(7420);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7420 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7421 */
{
tmp_327:
alt_status tmp_327_alt_flag_0 = ALT_MAYBE;
alt_status tmp_327_alt_flag_1 = ALT_MAYBE;
alt_status tmp_327_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_327_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7422 */
tmp_327_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_327_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7432 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7433 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_162).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7434 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_327_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7436);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7436 */
tmp_327_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_327_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7437);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7437 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_163).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7438 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_327_default_flag == ALT_MAYBE) {
tmp_327_default_flag = TTCN_Default::try_altsteps();
if (tmp_327_default_flag == ALT_YES || tmp_327_default_flag == ALT_BREAK) break;
else if (tmp_327_default_flag == ALT_REPEAT) goto tmp_327;
}
current_location.update_lineno(7421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7421 */
if (tmp_327_alt_flag_0 == ALT_NO && tmp_327_alt_flag_1 == ALT_NO && tmp_327_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7421 and 7440.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7443);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7443 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__11__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_11_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_11_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BV__11__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7450, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BV_11_nodeC");
current_location.update_lineno(7453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7453 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(7456);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7456 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7457);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7457 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7460 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7461 */
{
tmp_328:
alt_status tmp_328_alt_flag_0 = ALT_MAYBE;
alt_status tmp_328_alt_flag_1 = ALT_MAYBE;
alt_status tmp_328_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_328_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7462);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7462 */
tmp_328_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_328_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7472 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7473 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_164).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7474 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_328_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7476);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7476 */
tmp_328_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_328_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7477 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_165).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7478 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_328_default_flag == ALT_MAYBE) {
tmp_328_default_flag = TTCN_Default::try_altsteps();
if (tmp_328_default_flag == ALT_YES || tmp_328_default_flag == ALT_BREAK) break;
else if (tmp_328_default_flag == ALT_REPEAT) goto tmp_328;
}
current_location.update_lineno(7461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7461 */
if (tmp_328_alt_flag_0 == ALT_NO && tmp_328_alt_flag_1 == ALT_NO && tmp_328_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7461 and 7480.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7483);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7483 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BV__11__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_11_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BV_11_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__12()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7494, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_12");
current_location.update_lineno(7497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7497 */
COMPONENT v__nodeB;
current_location.update_lineno(7498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7498 */
COMPONENT v__nodeC;
current_location.update_lineno(7501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7501 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(7502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7502 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7503);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7503 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7504 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7506 */
{
boolean tmp_329;
tmp_329 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__greedy);
if (tmp_329) tmp_329 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__unspecified);
if (tmp_329) {
current_location.update_lineno(7507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7507 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_146).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7508 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7509);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7509 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(7513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7513 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(7518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7518 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7519);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7519 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(7520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7520 */
start_f__GEONW__PON__GUC__BO__12__nodeB(v__nodeB);
current_location.update_lineno(7521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7521 */
start_f__GEONW__PON__GUC__BO__12__nodeC(v__nodeC);
current_location.update_lineno(7524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7524 */
{
LibCommon__Sync::SyncPointList tmp_332;
tmp_332.set_size(2);
tmp_332[0] = LibCommon__Sync::c__prDone;
tmp_332[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_332);
}
current_location.update_lineno(7527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7527 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BO__12(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_12(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_12", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__12__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7534, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_12_nodeB");
current_location.update_lineno(7537);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7537 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(7540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7540 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7541 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7542 */
{
tmp_333:
alt_status tmp_333_alt_flag_0 = ALT_MAYBE;
alt_status tmp_333_alt_flag_1 = ALT_MAYBE;
alt_status tmp_333_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_333_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7543 */
tmp_333_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_333_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7553);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7553 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7554);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7554 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_166).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7555 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_333_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7557 */
tmp_333_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_333_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7558);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7558 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_167).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7559 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_333_default_flag == ALT_MAYBE) {
tmp_333_default_flag = TTCN_Default::try_altsteps();
if (tmp_333_default_flag == ALT_YES || tmp_333_default_flag == ALT_BREAK) break;
else if (tmp_333_default_flag == ALT_REPEAT) goto tmp_333;
}
current_location.update_lineno(7542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7542 */
if (tmp_333_alt_flag_0 == ALT_NO && tmp_333_alt_flag_1 == ALT_NO && tmp_333_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7542 and 7561.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7564);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7564 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(9)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7579 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(7580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7580 */
{
tmp_334:
alt_status tmp_334_alt_flag_0 = ALT_MAYBE;
alt_status tmp_334_alt_flag_1 = ALT_MAYBE;
alt_status tmp_334_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_334_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7581 */
tmp_334_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_334_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7591 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(7592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7592 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_168).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7593 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_334_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7595);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7595 */
tmp_334_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_334_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7596 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_169).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7597 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_334_default_flag == ALT_MAYBE) {
tmp_334_default_flag = TTCN_Default::try_altsteps();
if (tmp_334_default_flag == ALT_YES || tmp_334_default_flag == ALT_BREAK) break;
else if (tmp_334_default_flag == ALT_REPEAT) goto tmp_334;
}
current_location.update_lineno(7580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7580 */
if (tmp_334_alt_flag_0 == ALT_NO && tmp_334_alt_flag_1 == ALT_NO && tmp_334_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7580 and 7599.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7602 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__12__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_12_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_12_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__12__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7609, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_12_nodeC");
current_location.update_lineno(7612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7612 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(7615);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7615 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7616 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7630 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7633 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(7634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7634 */
{
tmp_335:
alt_status tmp_335_alt_flag_0 = ALT_MAYBE;
alt_status tmp_335_alt_flag_1 = ALT_MAYBE;
alt_status tmp_335_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_335_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7635 */
tmp_335_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_335_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7645 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(7646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7646 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_168).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7647);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7647 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_335_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7649 */
tmp_335_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_335_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7650 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_169).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7651 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_335_default_flag == ALT_MAYBE) {
tmp_335_default_flag = TTCN_Default::try_altsteps();
if (tmp_335_default_flag == ALT_YES || tmp_335_default_flag == ALT_BREAK) break;
else if (tmp_335_default_flag == ALT_REPEAT) goto tmp_335;
}
current_location.update_lineno(7634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7634 */
if (tmp_335_alt_flag_0 == ALT_NO && tmp_335_alt_flag_1 == ALT_NO && tmp_335_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7634 and 7653.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7656);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7656 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__12__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_12_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_12_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__13()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7667, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_13");
current_location.update_lineno(7670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7670 */
COMPONENT v__nodeB;
current_location.update_lineno(7671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7671 */
COMPONENT v__nodeC;
current_location.update_lineno(7674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7674 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__DST))) {
current_location.update_lineno(7675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7675 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_52).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7676 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7677 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7679);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7679 */
{
boolean tmp_336;
tmp_336 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__greedy);
if (tmp_336) tmp_336 = (LibItsGeoNetworking__Functions::f__getGeoUnicastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__unspecified);
if (tmp_336) {
current_location.update_lineno(7680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7680 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_146).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7681 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7682 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(7686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7686 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7691);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7691 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7692 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(7693);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7693 */
start_f__GEONW__PON__GUC__BO__13__nodeB(v__nodeB);
current_location.update_lineno(7694);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7694 */
start_f__GEONW__PON__GUC__BO__13__nodeC(v__nodeC);
current_location.update_lineno(7697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7697 */
{
LibCommon__Sync::SyncPointList tmp_339;
tmp_339.set_size(2);
tmp_339[0] = LibCommon__Sync::c__prDone;
tmp_339[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_339);
}
current_location.update_lineno(7700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7700 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GUC__BO__13(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_13(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_13", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__13__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7707, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_13_nodeB");
current_location.update_lineno(7710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7710 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(7711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7711 */
INTEGER i;
current_location.update_lineno(7712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7712 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(9)));
current_location.update_lineno(7721);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7721 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(7724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7724 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7725 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(7726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7726 */
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(LibItsGeoNetworking__TypesAndValues::Payload_template(v__gnPacket.gnPacket().packet().payload().valueof()));
current_location.update_lineno(7727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7727 */
i = 0;
current_location.update_lineno(7727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7727 */
for ( ; ; ) {
current_location.update_lineno(7727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7727 */
{
boolean tmp_342;
tmp_342 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_342) tmp_342 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_342) break;
}
current_location.update_lineno(7727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7727 */
{
INTEGER tmp_343;
++i;
}
}
current_location.update_lineno(7730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7730 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(7731);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7731 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7733 */
LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds = NULL_VALUE;
current_location.update_lineno(7734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7734 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(7737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7737 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_6).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7738);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7738 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(7742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7742 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(v__gnPacket.valueof()), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7744 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(7746);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7746 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(7747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7747 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7748);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7748 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(7751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7751 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_170).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7752 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(7756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7756 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__13__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_13_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_13_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GUC__BO__13__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7763, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GUC_BO_13_nodeC");
current_location.update_lineno(7766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7766 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(7769);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7769 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7770);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7770 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC)), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(7784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7784 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7787 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7790 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GUC__BO__13__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BO_13_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GUC_BO_13_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7806, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_01");
current_location.update_lineno(7809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7809 */
COMPONENT v__nodeB;
current_location.update_lineno(7810);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7810 */
COMPONENT v__nodeD;
current_location.update_lineno(7813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7813 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(7814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7814 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7815 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7816);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7816 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7820);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7820 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(7825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7825 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7826);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7826 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(7827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7827 */
start_f__GEONW__PON__GBC__BV__01__nodeB(v__nodeB);
current_location.update_lineno(7828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7828 */
start_f__GEONW__PON__GBC__BV__01__nodeD(v__nodeD);
current_location.update_lineno(7831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7831 */
{
LibCommon__Sync::SyncPointList tmp_347;
tmp_347.set_size(2);
tmp_347[0] = LibCommon__Sync::c__prDone;
tmp_347[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_347);
}
current_location.update_lineno(7834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7834 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7841, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_01_nodeB");
current_location.update_lineno(7844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7844 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(7847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7847 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7848);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7848 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7851 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(7852);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7852 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7853 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(7856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7856 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7857 */
{
tmp_348:
alt_status tmp_348_alt_flag_0 = ALT_MAYBE;
alt_status tmp_348_alt_flag_1 = ALT_MAYBE;
alt_status tmp_348_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_348_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7858 */
tmp_348_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_348_alt_flag_0 == ALT_REPEAT) goto tmp_348;
if (tmp_348_alt_flag_0 == ALT_BREAK) break;
if (tmp_348_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7862 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7863 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7864 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_348_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7866);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7866 */
tmp_348_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_348_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7867 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7868 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_348_default_flag == ALT_MAYBE) {
tmp_348_default_flag = TTCN_Default::try_altsteps();
if (tmp_348_default_flag == ALT_YES || tmp_348_default_flag == ALT_BREAK) break;
else if (tmp_348_default_flag == ALT_REPEAT) goto tmp_348;
}
current_location.update_lineno(7857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7857 */
if (tmp_348_alt_flag_0 == ALT_NO && tmp_348_alt_flag_1 == ALT_NO && tmp_348_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7857 and 7870.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7873);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7873 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__01__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7880, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_01_nodeD");
current_location.update_lineno(7883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7883 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(7886);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7886 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7887);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7887 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7890);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7890 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7891 */
{
tmp_349:
alt_status tmp_349_alt_flag_0 = ALT_MAYBE;
alt_status tmp_349_alt_flag_1 = ALT_MAYBE;
alt_status tmp_349_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_349_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7892);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7892 */
tmp_349_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_349_alt_flag_0 == ALT_REPEAT) goto tmp_349;
if (tmp_349_alt_flag_0 == ALT_BREAK) break;
if (tmp_349_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7896 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7897 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7898 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_349_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7900 */
tmp_349_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_349_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7901 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7902 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_349_default_flag == ALT_MAYBE) {
tmp_349_default_flag = TTCN_Default::try_altsteps();
if (tmp_349_default_flag == ALT_YES || tmp_349_default_flag == ALT_BREAK) break;
else if (tmp_349_default_flag == ALT_REPEAT) goto tmp_349;
}
current_location.update_lineno(7891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7891 */
if (tmp_349_alt_flag_0 == ALT_NO && tmp_349_alt_flag_1 == ALT_NO && tmp_349_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7891 and 7904.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7907);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7907 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__01__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_01_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_01_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7918, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_02");
current_location.update_lineno(7921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7921 */
COMPONENT v__nodeB;
current_location.update_lineno(7922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7922 */
COMPONENT v__nodeD;
current_location.update_lineno(7925);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7925 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(7926);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7926 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7927);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7927 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7928);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7928 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(7930);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7930 */
{
boolean tmp_350;
{
boolean tmp_351;
tmp_351 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_351) tmp_351 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
tmp_350 = tmp_351;
}
if (tmp_350) tmp_350 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced);
if (tmp_350) {
current_location.update_lineno(7931);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7931 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7932);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7932 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(7933);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7933 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(7937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7937 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(7942);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7942 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(7943);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7943 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(7944);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7944 */
start_f__GEONW__PON__GBC__BV__02__nodeB(v__nodeB);
current_location.update_lineno(7945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7945 */
start_f__GEONW__PON__GBC__BV__02__nodeD(v__nodeD);
current_location.update_lineno(7948);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7948 */
{
LibCommon__Sync::SyncPointList tmp_354;
tmp_354.set_size(2);
tmp_354[0] = LibCommon__Sync::c__prDone;
tmp_354[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_354);
}
current_location.update_lineno(7951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7951 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7958, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_02_nodeB");
current_location.update_lineno(7961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7961 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(7964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7964 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(7965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7965 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(7968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7968 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area2)))))) {
current_location.update_lineno(7969);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7969 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7970 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(7973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7973 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(7974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7974 */
{
tmp_355:
alt_status tmp_355_alt_flag_0 = ALT_MAYBE;
alt_status tmp_355_alt_flag_1 = ALT_MAYBE;
alt_status tmp_355_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_355_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(7975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7975 */
tmp_355_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_355_alt_flag_0 == ALT_REPEAT) goto tmp_355;
if (tmp_355_alt_flag_0 == ALT_BREAK) break;
if (tmp_355_alt_flag_0 == ALT_YES) {
current_location.update_lineno(7979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7979 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(7980);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7980 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7981);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7981 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_355_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(7983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7983 */
tmp_355_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_355_alt_flag_1 == ALT_YES) {
current_location.update_lineno(7984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7984 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(7985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7985 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_355_default_flag == ALT_MAYBE) {
tmp_355_default_flag = TTCN_Default::try_altsteps();
if (tmp_355_default_flag == ALT_YES || tmp_355_default_flag == ALT_BREAK) break;
else if (tmp_355_default_flag == ALT_REPEAT) goto tmp_355;
}
current_location.update_lineno(7974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7974 */
if (tmp_355_alt_flag_0 == ALT_NO && tmp_355_alt_flag_1 == ALT_NO && tmp_355_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 7974 and 7987.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(7990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 7990 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__02__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 7997, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_02_nodeD");
current_location.update_lineno(8000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8000 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(8003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8003 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8004 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8007 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8008);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8008 */
{
tmp_356:
alt_status tmp_356_alt_flag_0 = ALT_MAYBE;
alt_status tmp_356_alt_flag_1 = ALT_MAYBE;
alt_status tmp_356_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_356_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8009 */
tmp_356_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_356_alt_flag_0 == ALT_REPEAT) goto tmp_356;
if (tmp_356_alt_flag_0 == ALT_BREAK) break;
if (tmp_356_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8013);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8013 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8014 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_173).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8015 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_356_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8017);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8017 */
tmp_356_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_356_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8018 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_174).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8019);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8019 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_356_default_flag == ALT_MAYBE) {
tmp_356_default_flag = TTCN_Default::try_altsteps();
if (tmp_356_default_flag == ALT_YES || tmp_356_default_flag == ALT_BREAK) break;
else if (tmp_356_default_flag == ALT_REPEAT) goto tmp_356;
}
current_location.update_lineno(8008);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8008 */
if (tmp_356_alt_flag_0 == ALT_NO && tmp_356_alt_flag_1 == ALT_NO && tmp_356_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8008 and 8021.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8024);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8024 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__02__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_02_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_02_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8035, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_03");
current_location.update_lineno(8038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8038 */
COMPONENT v__nodeB;
current_location.update_lineno(8039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8039 */
COMPONENT v__nodeD;
current_location.update_lineno(8042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8042 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(8043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8043 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8044 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8045 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8047 */
{
boolean tmp_357;
tmp_357 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_357) tmp_357 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
if (tmp_357) {
current_location.update_lineno(8048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8048 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8049 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8050 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(8054);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8054 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(8059);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8059 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8060);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8060 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8061 */
start_f__GEONW__PON__GBC__BV__03__nodeB(v__nodeB);
current_location.update_lineno(8062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8062 */
start_f__GEONW__PON__GBC__BV__03__nodeD(v__nodeD);
current_location.update_lineno(8065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8065 */
{
LibCommon__Sync::SyncPointList tmp_360;
tmp_360.set_size(2);
tmp_360[0] = LibCommon__Sync::c__prDone;
tmp_360[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_360);
}
current_location.update_lineno(8068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8068 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8075, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_03_nodeB");
current_location.update_lineno(8078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8078 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8081 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8082 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8085 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(8097);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8097 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8098 */
{
tmp_361:
alt_status tmp_361_alt_flag_0 = ALT_MAYBE;
alt_status tmp_361_alt_flag_1 = ALT_MAYBE;
alt_status tmp_361_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_361_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8099 */
tmp_361_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_361_alt_flag_0 == ALT_REPEAT) goto tmp_361;
if (tmp_361_alt_flag_0 == ALT_BREAK) break;
if (tmp_361_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8103 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8104 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8105 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_361_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8107 */
tmp_361_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_361_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8108 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8109 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_361_default_flag == ALT_MAYBE) {
tmp_361_default_flag = TTCN_Default::try_altsteps();
if (tmp_361_default_flag == ALT_YES || tmp_361_default_flag == ALT_BREAK) break;
else if (tmp_361_default_flag == ALT_REPEAT) goto tmp_361;
}
current_location.update_lineno(8098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8098 */
if (tmp_361_alt_flag_0 == ALT_NO && tmp_361_alt_flag_1 == ALT_NO && tmp_361_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8098 and 8111.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8114 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__03__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8121, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_03_nodeD");
current_location.update_lineno(8124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8124 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8127 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8128 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8131);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8131 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8132 */
{
tmp_362:
alt_status tmp_362_alt_flag_0 = ALT_MAYBE;
alt_status tmp_362_alt_flag_1 = ALT_MAYBE;
alt_status tmp_362_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_362_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8133 */
tmp_362_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_362_alt_flag_0 == ALT_REPEAT) goto tmp_362;
if (tmp_362_alt_flag_0 == ALT_BREAK) break;
if (tmp_362_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8137 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8138 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8139 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_362_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8141 */
tmp_362_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_362_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8142 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8143 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_362_default_flag == ALT_MAYBE) {
tmp_362_default_flag = TTCN_Default::try_altsteps();
if (tmp_362_default_flag == ALT_YES || tmp_362_default_flag == ALT_BREAK) break;
else if (tmp_362_default_flag == ALT_REPEAT) goto tmp_362;
}
current_location.update_lineno(8132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8132 */
if (tmp_362_alt_flag_0 == ALT_NO && tmp_362_alt_flag_1 == ALT_NO && tmp_362_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8132 and 8145.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8148 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__03__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_03_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_03_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8159, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_04");
current_location.update_lineno(8162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8162 */
COMPONENT v__nodeB;
current_location.update_lineno(8163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8163 */
COMPONENT v__nodeD;
current_location.update_lineno(8166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8166 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(8167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8167 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8168);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8168 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8169 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8171);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8171 */
{
boolean tmp_363;
tmp_363 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_363) tmp_363 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
if (tmp_363) {
current_location.update_lineno(8172);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8172 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8173);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8173 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8174 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(8178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8178 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(8183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8183 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8184 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8185 */
start_f__GEONW__PON__GBC__BO__04__nodeB(v__nodeB);
current_location.update_lineno(8186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8186 */
start_f__GEONW__PON__GBC__BO__04__nodeD(v__nodeD);
current_location.update_lineno(8189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8189 */
{
LibCommon__Sync::SyncPointList tmp_366;
tmp_366.set_size(2);
tmp_366[0] = LibCommon__Sync::c__prDone;
tmp_366[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_366);
}
current_location.update_lineno(8192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8192 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BO__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8199, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_04_nodeB");
current_location.update_lineno(8202);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8202 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8203);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8203 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(8206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8206 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8207);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8207 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(8216);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8216 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(v__gnPacket.valueof())));
current_location.update_lineno(8218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8218 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8219);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8219 */
{
tmp_368:
alt_status tmp_368_alt_flag_0 = ALT_MAYBE;
alt_status tmp_368_alt_flag_1 = ALT_MAYBE;
alt_status tmp_368_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_368_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8220);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8220 */
tmp_368_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_368_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8225 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8226);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8226 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_176).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8227 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_368_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8229 */
tmp_368_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_368_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8230 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_177).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8231 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_368_default_flag == ALT_MAYBE) {
tmp_368_default_flag = TTCN_Default::try_altsteps();
if (tmp_368_default_flag == ALT_YES || tmp_368_default_flag == ALT_BREAK) break;
else if (tmp_368_default_flag == ALT_REPEAT) goto tmp_368;
}
current_location.update_lineno(8219);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8219 */
if (tmp_368_alt_flag_0 == ALT_NO && tmp_368_alt_flag_1 == ALT_NO && tmp_368_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8219 and 8233.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8236 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8237 */
{
tmp_369:
alt_status tmp_369_alt_flag_0 = ALT_MAYBE;
alt_status tmp_369_alt_flag_1 = ALT_MAYBE;
alt_status tmp_369_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_369_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8238);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8238 */
tmp_369_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), INTEGER_template(ANY_VALUE));
if (tmp_369_alt_flag_0 == ALT_REPEAT) goto tmp_369;
if (tmp_369_alt_flag_0 == ALT_BREAK) break;
if (tmp_369_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8241 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8242);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8242 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8243);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8243 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_369_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8245);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8245 */
tmp_369_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_369_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8246 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8247);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8247 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_369_default_flag == ALT_MAYBE) {
tmp_369_default_flag = TTCN_Default::try_altsteps();
if (tmp_369_default_flag == ALT_YES || tmp_369_default_flag == ALT_BREAK) break;
else if (tmp_369_default_flag == ALT_REPEAT) goto tmp_369;
}
current_location.update_lineno(8237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8237 */
if (tmp_369_alt_flag_0 == ALT_NO && tmp_369_alt_flag_1 == ALT_NO && tmp_369_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8237 and 8249.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8252 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__04__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8259, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_04_nodeD");
current_location.update_lineno(8262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8262 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8263 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(8264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8264 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(8267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8267 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8268 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8269 */
{
tmp_370:
alt_status tmp_370_alt_flag_0 = ALT_MAYBE;
alt_status tmp_370_alt_flag_1 = ALT_MAYBE;
alt_status tmp_370_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_370_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8270 */
tmp_370_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_370_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8275 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8276);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8276 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_176).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8277);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8277 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_370_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8279 */
tmp_370_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_370_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8280 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_180).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8281 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_370_default_flag == ALT_MAYBE) {
tmp_370_default_flag = TTCN_Default::try_altsteps();
if (tmp_370_default_flag == ALT_YES || tmp_370_default_flag == ALT_BREAK) break;
else if (tmp_370_default_flag == ALT_REPEAT) goto tmp_370;
}
current_location.update_lineno(8269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8269 */
if (tmp_370_alt_flag_0 == ALT_NO && tmp_370_alt_flag_1 == ALT_NO && tmp_370_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8269 and 8283.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8287);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8287 */
p__msgInd.msgIn().basicHeader().routerHopLimit() = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn().basicHeader().routerHopLimit() - 1);
current_location.update_lineno(8288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8288 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(p__msgInd.msgIn().valueof())));
current_location.update_lineno(8290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8290 */
p__msgInd.msgIn().basicHeader().routerHopLimit() = ANY_VALUE;
current_location.update_lineno(8291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8291 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8292 */
{
tmp_373:
alt_status tmp_373_alt_flag_0 = ALT_MAYBE;
alt_status tmp_373_alt_flag_1 = ALT_MAYBE;
alt_status tmp_373_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_373_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8293 */
tmp_373_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(ANY_VALUE), INTEGER_template(ANY_VALUE));
if (tmp_373_alt_flag_0 == ALT_REPEAT) goto tmp_373;
if (tmp_373_alt_flag_0 == ALT_BREAK) break;
if (tmp_373_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8296 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8297);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8297 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8298 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_373_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8300 */
tmp_373_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_373_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8301 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8302 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_373_default_flag == ALT_MAYBE) {
tmp_373_default_flag = TTCN_Default::try_altsteps();
if (tmp_373_default_flag == ALT_YES || tmp_373_default_flag == ALT_BREAK) break;
else if (tmp_373_default_flag == ALT_REPEAT) goto tmp_373;
}
current_location.update_lineno(8292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8292 */
if (tmp_373_alt_flag_0 == ALT_NO && tmp_373_alt_flag_1 == ALT_NO && tmp_373_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8292 and 8304.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8307);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8307 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__04__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_04_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_04_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8318, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_05");
current_location.update_lineno(8321);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8321 */
COMPONENT v__nodeB;
current_location.update_lineno(8322);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8322 */
COMPONENT v__nodeC;
current_location.update_lineno(8323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8323 */
COMPONENT v__nodeD;
current_location.update_lineno(8326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8326 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(8327);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8327 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8328);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8328 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8329);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8329 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8333 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(8338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8338 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8339 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(8340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8340 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8341 */
start_f__GEONW__PON__GBC__BV__05__nodeB(v__nodeB);
current_location.update_lineno(8342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8342 */
start_f__GEONW__PON__GBC__BV__05__nodeC(v__nodeC);
current_location.update_lineno(8343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8343 */
start_f__GEONW__PON__GBC__BV__05__nodeD(v__nodeD);
current_location.update_lineno(8346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8346 */
{
LibCommon__Sync::SyncPointList tmp_377;
tmp_377.set_size(2);
tmp_377[0] = LibCommon__Sync::c__prDone;
tmp_377[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_377);
}
current_location.update_lineno(8349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8349 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GBC__BV__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8356, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_05_nodeB");
current_location.update_lineno(8359);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8359 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8362);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8362 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8363 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8366);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8366 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8367 */
{
tmp_378:
alt_status tmp_378_alt_flag_0 = ALT_MAYBE;
alt_status tmp_378_alt_flag_1 = ALT_MAYBE;
alt_status tmp_378_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_378_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8368);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8368 */
tmp_378_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_378_alt_flag_0 == ALT_REPEAT) goto tmp_378;
if (tmp_378_alt_flag_0 == ALT_BREAK) break;
if (tmp_378_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8372);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8372 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8373 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_181).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8374 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_378_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8376 */
tmp_378_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_378_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8377 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8378 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_378_default_flag == ALT_MAYBE) {
tmp_378_default_flag = TTCN_Default::try_altsteps();
if (tmp_378_default_flag == ALT_YES || tmp_378_default_flag == ALT_BREAK) break;
else if (tmp_378_default_flag == ALT_REPEAT) goto tmp_378;
}
current_location.update_lineno(8367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8367 */
if (tmp_378_alt_flag_0 == ALT_NO && tmp_378_alt_flag_1 == ALT_NO && tmp_378_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8367 and 8380.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8383 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__05__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8390, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_05_nodeC");
current_location.update_lineno(8393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8393 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8394);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8394 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd;
current_location.update_lineno(8397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8397 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8398);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8398 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8401);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8401 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(8412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8412 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8415 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__05__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_05_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_05_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__05__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8422, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_05_nodeD");
current_location.update_lineno(8425);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8425 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8428 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8429 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8432 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8433 */
{
tmp_379:
alt_status tmp_379_alt_flag_0 = ALT_MAYBE;
alt_status tmp_379_alt_flag_1 = ALT_MAYBE;
alt_status tmp_379_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_379_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8434 */
tmp_379_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_379_alt_flag_0 == ALT_REPEAT) goto tmp_379;
if (tmp_379_alt_flag_0 == ALT_BREAK) break;
if (tmp_379_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8438 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8439 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_182).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8440);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8440 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_379_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8443);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8443 */
tmp_379_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_379_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8444);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8444 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_174).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8445 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_379_default_flag == ALT_MAYBE) {
tmp_379_default_flag = TTCN_Default::try_altsteps();
if (tmp_379_default_flag == ALT_YES || tmp_379_default_flag == ALT_BREAK) break;
else if (tmp_379_default_flag == ALT_REPEAT) goto tmp_379;
}
current_location.update_lineno(8433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8433 */
if (tmp_379_alt_flag_0 == ALT_NO && tmp_379_alt_flag_1 == ALT_NO && tmp_379_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8433 and 8447.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8450 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__05__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_05_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_05_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8461, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_06");
current_location.update_lineno(8464);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8464 */
COMPONENT v__nodeB;
current_location.update_lineno(8465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8465 */
COMPONENT v__nodeC;
current_location.update_lineno(8466);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8466 */
COMPONENT v__nodeD;
current_location.update_lineno(8467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8467 */
INTEGER v__sequenceNumber(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(8470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8470 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(8471);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8471 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8472 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8473 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8475 */
{
boolean tmp_380;
tmp_380 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_380) tmp_380 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
if (tmp_380) {
current_location.update_lineno(8476);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8476 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8477 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8478 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(8482);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8482 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(8487);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8487 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8488);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8488 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(8489);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8489 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8490);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8490 */
start_f__GEONW__PON__GBC__BO__06__nodeB(v__nodeB);
current_location.update_lineno(8491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8491 */
start_f__GEONW__PON__GBC__BO__06__nodeC(v__nodeC, v__sequenceNumber);
current_location.update_lineno(8492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8492 */
start_f__GEONW__PON__GBC__BO__06__nodeD(v__nodeD, v__sequenceNumber);
current_location.update_lineno(8495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8495 */
{
LibCommon__Sync::SyncPointList tmp_384;
tmp_384.set_size(2);
tmp_384[0] = LibCommon__Sync::c__prDone;
tmp_384[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_384);
}
current_location.update_lineno(8498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8498 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GBC__BO__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__06__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8505, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_06_nodeB");
current_location.update_lineno(8508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8508 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8509);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8509 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(8510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8510 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(8513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8513 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8514 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8515 */
{
tmp_385:
alt_status tmp_385_alt_flag_0 = ALT_MAYBE;
alt_status tmp_385_alt_flag_1 = ALT_MAYBE;
alt_status tmp_385_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_385_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8516 */
tmp_385_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_385_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8521 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8522 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_183).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8523);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8523 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_385_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8525);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8525 */
tmp_385_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_385_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8526);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8526 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_177).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8527 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_385_default_flag == ALT_MAYBE) {
tmp_385_default_flag = TTCN_Default::try_altsteps();
if (tmp_385_default_flag == ALT_YES || tmp_385_default_flag == ALT_BREAK) break;
else if (tmp_385_default_flag == ALT_REPEAT) goto tmp_385;
}
current_location.update_lineno(8515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8515 */
if (tmp_385_alt_flag_0 == ALT_NO && tmp_385_alt_flag_1 == ALT_NO && tmp_385_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8515 and 8529.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8532);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8532 */
p__msgInd.msgIn().basicHeader().routerHopLimit() = ANY_VALUE;
current_location.update_lineno(8533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8533 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8534 */
{
tmp_387:
alt_status tmp_387_alt_flag_0 = ALT_MAYBE;
alt_status tmp_387_alt_flag_1 = ALT_MAYBE;
alt_status tmp_387_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_387_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8535 */
tmp_387_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template(p__msgInd.valueof()), NULL, any_compref, NULL);
if (tmp_387_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8536);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8536 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8537);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8537 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_184).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8538 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_387_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8540 */
tmp_387_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_387_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8541 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_185).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8542 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_387_default_flag == ALT_MAYBE) {
tmp_387_default_flag = TTCN_Default::try_altsteps();
if (tmp_387_default_flag == ALT_YES || tmp_387_default_flag == ALT_BREAK) break;
else if (tmp_387_default_flag == ALT_REPEAT) goto tmp_387;
}
current_location.update_lineno(8534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8534 */
if (tmp_387_alt_flag_0 == ALT_NO && tmp_387_alt_flag_1 == ALT_NO && tmp_387_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8534 and 8544.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8547);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8547 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__06__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_06_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__06__nodeC(const INTEGER& p__sequenceNumber)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8554, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_06_nodeC");
current_location.update_lineno(8557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8557 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8560 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8561 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(8574);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8574 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8577 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8580 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__06__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumber)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06_nodeC(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_06_nodeC", text_buf);
p__sequenceNumber.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__06__nodeD(const INTEGER& p__sequenceNumber)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8587, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_06_nodeD");
current_location.update_lineno(8590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8590 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(8593);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8593 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8594);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8594 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8595);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8595 */
{
tmp_388:
alt_status tmp_388_alt_flag_0 = ALT_MAYBE;
alt_status tmp_388_alt_flag_1 = ALT_MAYBE;
alt_status tmp_388_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_388_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8596 */
tmp_388_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_388_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8601 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8602 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_186).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8603);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8603 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_388_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8605 */
tmp_388_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_388_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8606 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_187).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8607 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_388_default_flag == ALT_MAYBE) {
tmp_388_default_flag = TTCN_Default::try_altsteps();
if (tmp_388_default_flag == ALT_YES || tmp_388_default_flag == ALT_BREAK) break;
else if (tmp_388_default_flag == ALT_REPEAT) goto tmp_388;
}
current_location.update_lineno(8595);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8595 */
if (tmp_388_alt_flag_0 == ALT_NO && tmp_388_alt_flag_1 == ALT_NO && tmp_388_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8595 and 8609.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8613);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8613 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))));
current_location.update_lineno(8627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8627 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8628 */
{
tmp_389:
alt_status tmp_389_alt_flag_0 = ALT_MAYBE;
alt_status tmp_389_alt_flag_1 = ALT_MAYBE;
alt_status tmp_389_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_389_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8629 */
tmp_389_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_389_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8634 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8635 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_188).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8636 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_389_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8638);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8638 */
tmp_389_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_389_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8639 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_174).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8640 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_389_default_flag == ALT_MAYBE) {
tmp_389_default_flag = TTCN_Default::try_altsteps();
if (tmp_389_default_flag == ALT_YES || tmp_389_default_flag == ALT_BREAK) break;
else if (tmp_389_default_flag == ALT_REPEAT) goto tmp_389;
}
current_location.update_lineno(8628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8628 */
if (tmp_389_alt_flag_0 == ALT_NO && tmp_389_alt_flag_1 == ALT_NO && tmp_389_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8628 and 8642.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8645 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__06__nodeD(const COMPONENT& component_reference, const INTEGER& p__sequenceNumber)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06_nodeD(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_06_nodeD", text_buf);
p__sequenceNumber.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8656, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_07");
current_location.update_lineno(8659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8659 */
COMPONENT v__nodeB;
current_location.update_lineno(8660);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8660 */
COMPONENT v__nodeD;
current_location.update_lineno(8663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8663 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(8664);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8664 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8665 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8666 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8670 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(8675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8675 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8676 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8677 */
start_f__GEONW__PON__GBC__BV__07__nodeB(v__nodeB);
current_location.update_lineno(8678);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8678 */
start_f__GEONW__PON__GBC__BV__07__nodeD(v__nodeD);
current_location.update_lineno(8681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8681 */
{
LibCommon__Sync::SyncPointList tmp_392;
tmp_392.set_size(2);
tmp_392[0] = LibCommon__Sync::c__prDone;
tmp_392[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_392);
}
current_location.update_lineno(8684);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8684 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__07__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8691, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_07_nodeB");
current_location.update_lineno(8694);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8694 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8697 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8698 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8701 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(8716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8716 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8717);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8717 */
{
tmp_393:
alt_status tmp_393_alt_flag_0 = ALT_MAYBE;
alt_status tmp_393_alt_flag_1 = ALT_MAYBE;
alt_status tmp_393_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_393_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8718);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8718 */
tmp_393_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithAreaWithHopLimit_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), INTEGER_template(9), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
if (tmp_393_alt_flag_0 == ALT_REPEAT) goto tmp_393;
if (tmp_393_alt_flag_0 == ALT_BREAK) break;
if (tmp_393_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8724 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8725 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_189).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8726 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_393_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8728);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8728 */
tmp_393_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_393_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8729 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8730 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_393_default_flag == ALT_MAYBE) {
tmp_393_default_flag = TTCN_Default::try_altsteps();
if (tmp_393_default_flag == ALT_YES || tmp_393_default_flag == ALT_BREAK) break;
else if (tmp_393_default_flag == ALT_REPEAT) goto tmp_393;
}
current_location.update_lineno(8717);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8717 */
if (tmp_393_alt_flag_0 == ALT_NO && tmp_393_alt_flag_1 == ALT_NO && tmp_393_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8717 and 8732.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8735 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__07__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_07_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_07_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__07__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8742, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_07_nodeD");
current_location.update_lineno(8745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8745 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8746);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8746 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd;
current_location.update_lineno(8749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8749 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8750);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8750 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8753 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(8754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8754 */
{
tmp_394:
alt_status tmp_394_alt_flag_0 = ALT_MAYBE;
alt_status tmp_394_alt_flag_1 = ALT_MAYBE;
alt_status tmp_394_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_394_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8755 */
tmp_394_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithAreaWithHopLimit_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), INTEGER_template(9), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
if (tmp_394_alt_flag_0 == ALT_REPEAT) goto tmp_394;
if (tmp_394_alt_flag_0 == ALT_BREAK) break;
if (tmp_394_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8761 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(8762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8762 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_189).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8763);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8763 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_394_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8765);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8765 */
tmp_394_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_394_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8766 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8767);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8767 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_394_default_flag == ALT_MAYBE) {
tmp_394_default_flag = TTCN_Default::try_altsteps();
if (tmp_394_default_flag == ALT_YES || tmp_394_default_flag == ALT_BREAK) break;
else if (tmp_394_default_flag == ALT_REPEAT) goto tmp_394;
}
current_location.update_lineno(8754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8754 */
if (tmp_394_alt_flag_0 == ALT_NO && tmp_394_alt_flag_1 == ALT_NO && tmp_394_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8754 and 8769.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8772 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__07__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_07_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_07_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8783, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_08");
current_location.update_lineno(8786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8786 */
COMPONENT v__nodeB;
current_location.update_lineno(8787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8787 */
COMPONENT v__nodeD;
current_location.update_lineno(8790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8790 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(8791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8791 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8792);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8792 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8793);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8793 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8797);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8797 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(8802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8802 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8803 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8804);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8804 */
start_f__GEONW__PON__GBC__BV__08__nodeB(v__nodeB);
current_location.update_lineno(8805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8805 */
start_f__GEONW__PON__GBC__BV__08__nodeD(v__nodeD);
current_location.update_lineno(8808);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8808 */
{
LibCommon__Sync::SyncPointList tmp_397;
tmp_397.set_size(2);
tmp_397[0] = LibCommon__Sync::c__prDone;
tmp_397[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_397);
}
current_location.update_lineno(8811);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8811 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__08__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8818, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_08_nodeB");
current_location.update_lineno(8821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8821 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8824 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8825 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8828 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
current_location.update_lineno(8842);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8842 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8843);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8843 */
{
tmp_398:
alt_status tmp_398_alt_flag_0 = ALT_MAYBE;
alt_status tmp_398_alt_flag_1 = ALT_MAYBE;
alt_status tmp_398_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_398_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8844 */
tmp_398_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE));
if (tmp_398_alt_flag_0 == ALT_REPEAT) goto tmp_398;
if (tmp_398_alt_flag_0 == ALT_BREAK) break;
if (tmp_398_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8847 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8848);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8848 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8849 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_398_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8851 */
tmp_398_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_398_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8852);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8852 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8853 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_398_default_flag == ALT_MAYBE) {
tmp_398_default_flag = TTCN_Default::try_altsteps();
if (tmp_398_default_flag == ALT_YES || tmp_398_default_flag == ALT_BREAK) break;
else if (tmp_398_default_flag == ALT_REPEAT) goto tmp_398;
}
current_location.update_lineno(8843);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8843 */
if (tmp_398_alt_flag_0 == ALT_NO && tmp_398_alt_flag_1 == ALT_NO && tmp_398_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8843 and 8855.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8858 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__08__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_08_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_08_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__08__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8865, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_08_nodeD");
current_location.update_lineno(8868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8868 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(8871);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8871 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8872);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8872 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8875);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8875 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(8876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8876 */
{
tmp_399:
alt_status tmp_399_alt_flag_0 = ALT_MAYBE;
alt_status tmp_399_alt_flag_1 = ALT_MAYBE;
alt_status tmp_399_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_399_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(8877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8877 */
tmp_399_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE));
if (tmp_399_alt_flag_0 == ALT_REPEAT) goto tmp_399;
if (tmp_399_alt_flag_0 == ALT_BREAK) break;
if (tmp_399_alt_flag_0 == ALT_YES) {
current_location.update_lineno(8880);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8880 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(8881);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8881 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8882 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_399_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(8884);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8884 */
tmp_399_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_399_alt_flag_1 == ALT_YES) {
current_location.update_lineno(8885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8885 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8886);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8886 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_399_default_flag == ALT_MAYBE) {
tmp_399_default_flag = TTCN_Default::try_altsteps();
if (tmp_399_default_flag == ALT_YES || tmp_399_default_flag == ALT_BREAK) break;
else if (tmp_399_default_flag == ALT_REPEAT) goto tmp_399;
}
current_location.update_lineno(8876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8876 */
if (tmp_399_alt_flag_0 == ALT_NO && tmp_399_alt_flag_1 == ALT_NO && tmp_399_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 8876 and 8888.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(8891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8891 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__08__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_08_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_08_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__09()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8900, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_09");
current_location.update_lineno(8903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8903 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(8904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8904 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(8905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8905 */
INTEGER i;
current_location.update_lineno(8906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8906 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(8909);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8909 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__DST))) {
current_location.update_lineno(8910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8910 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_54).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8911 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8912 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8916 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(8917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8917 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8922 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(8923);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8923 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(8926);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8926 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(8932);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8932 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(8934);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8934 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(8936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8936 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_403;
tmp_403 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_403.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_403);
}
current_location.update_lineno(8937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8937 */
i = 0;
current_location.update_lineno(8937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8937 */
for ( ; ; ) {
current_location.update_lineno(8937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8937 */
{
boolean tmp_405;
tmp_405 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_405) tmp_405 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_405) break;
}
current_location.update_lineno(8937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8937 */
{
INTEGER tmp_406;
++i;
}
}
current_location.update_lineno(8940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8940 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(8941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8941 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8942);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8942 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(8945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8945 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_155).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8946 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(8950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8950 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(8951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8951 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GBC__BV__09(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_09(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_09", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 8960, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_10");
current_location.update_lineno(8963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8963 */
COMPONENT v__nodeB;
current_location.update_lineno(8964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8964 */
COMPONENT v__nodeD;
current_location.update_lineno(8967);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8967 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__DST))) {
current_location.update_lineno(8968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8968 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_54).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8969);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8969 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8970 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(8972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8972 */
{
boolean tmp_407;
tmp_407 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_407) tmp_407 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
if (tmp_407) {
current_location.update_lineno(8973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8973 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(8974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8974 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(8975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8975 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(8979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8979 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8984 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(8985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8985 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(8986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8986 */
start_f__GEONW__PON__GBC__BO__10__nodeB(v__nodeB);
current_location.update_lineno(8987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8987 */
start_f__GEONW__PON__GBC__BO__10__nodeD(v__nodeD);
current_location.update_lineno(8990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8990 */
{
LibCommon__Sync::SyncPointList tmp_410;
tmp_410.set_size(2);
tmp_410[0] = LibCommon__Sync::c__prDone;
tmp_410[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_410);
}
current_location.update_lineno(8993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 8993 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BO__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__10__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9000, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_10_nodeB");
current_location.update_lineno(9003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9003 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(9004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9004 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(9005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9005 */
INTEGER i;
current_location.update_lineno(9006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9006 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(9009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9009 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9010 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(9018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9018 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(v__gnPacket.valueof())));
current_location.update_lineno(9021);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9021 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9022 */
{
tmp_412:
alt_status tmp_412_alt_flag_0 = ALT_MAYBE;
alt_status tmp_412_alt_flag_1 = ALT_MAYBE;
alt_status tmp_412_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_412_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9023 */
tmp_412_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_412_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9028 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9029 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_191).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
break;
}
}
if (tmp_412_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9031 */
tmp_412_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_412_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9032 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_192).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
break;
}
}
if (tmp_412_default_flag == ALT_MAYBE) {
tmp_412_default_flag = TTCN_Default::try_altsteps();
if (tmp_412_default_flag == ALT_YES || tmp_412_default_flag == ALT_BREAK) break;
else if (tmp_412_default_flag == ALT_REPEAT) goto tmp_412;
}
current_location.update_lineno(9022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9022 */
if (tmp_412_alt_flag_0 == ALT_NO && tmp_412_alt_flag_1 == ALT_NO && tmp_412_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9022 and 9034.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9036 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(9038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9038 */
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(LibItsGeoNetworking__TypesAndValues::Payload_template(v__gnPacket.gnPacket().packet().payload().valueof()));
current_location.update_lineno(9039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9039 */
i = 0;
current_location.update_lineno(9039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9039 */
for ( ; ; ) {
current_location.update_lineno(9039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9039 */
{
boolean tmp_415;
tmp_415 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_415) tmp_415 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_415) break;
}
current_location.update_lineno(9039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9039 */
{
INTEGER tmp_416;
++i;
}
}
current_location.update_lineno(9042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9042 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(9043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9043 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9045 */
LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds = NULL_VALUE;
current_location.update_lineno(9046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9046 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(9049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9049 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_6).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9050 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(9054);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9054 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(9056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9056 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(9057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9057 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9058);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9058 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(9061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9061 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_193).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9062 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(9066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9066 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__10__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_10_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_10_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__10__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9073, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_10_nodeD");
current_location.update_lineno(9076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9076 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(9077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9077 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(9078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9078 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(9079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9079 */
INTEGER i;
current_location.update_lineno(9082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9082 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9085 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9086 */
{
tmp_418:
alt_status tmp_418_alt_flag_0 = ALT_MAYBE;
alt_status tmp_418_alt_flag_1 = ALT_MAYBE;
alt_status tmp_418_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_418_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9087 */
tmp_418_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_418_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9092);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9092 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9093 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_194).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9094);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9094 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_418_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9096);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9096 */
tmp_418_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_418_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9097);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9097 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_195).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9098 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_418_default_flag == ALT_MAYBE) {
tmp_418_default_flag = TTCN_Default::try_altsteps();
if (tmp_418_default_flag == ALT_YES || tmp_418_default_flag == ALT_BREAK) break;
else if (tmp_418_default_flag == ALT_REPEAT) goto tmp_418;
}
current_location.update_lineno(9086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9086 */
if (tmp_418_alt_flag_0 == ALT_NO && tmp_418_alt_flag_1 == ALT_NO && tmp_418_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9086 and 9100.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9103 */
{
INTEGER tmp_419;
tmp_419 = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn().basicHeader().routerHopLimit() / 2);
v__msgInd.msgIn().basicHeader().routerHopLimit() = tmp_419;
}
current_location.update_lineno(9104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9104 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn())));
current_location.update_lineno(9105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9105 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9108 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__10__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_10_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_10_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__11()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9117, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_11");
current_location.update_lineno(9120);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9120 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(9121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9121 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(9122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9122 */
INTEGER i;
current_location.update_lineno(9123);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9123 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(9126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9126 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(9127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9127 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9128 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9129 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9133 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(9134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9134 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9139 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9140 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9143 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(9149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9149 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(9151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9151 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(9153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9153 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(9154);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9154 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9155);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9155 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(9158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9158 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_193).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9159);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9159 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(9163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9163 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(9164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9164 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GBC__BV__11(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_11(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_11", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__12()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9173, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_12");
current_location.update_lineno(9176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9176 */
COMPONENT v__nodeB;
current_location.update_lineno(9177);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9177 */
COMPONENT v__nodeD;
current_location.update_lineno(9180);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9180 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__SRC))) {
current_location.update_lineno(9181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9181 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_28).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9182 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9183 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9185 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(9186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9186 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_196).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9187 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9188 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9192);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9192 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(9197);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9197 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9198 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9199 */
start_f__GEONW__PON__GBC__BV__12__nodeB(v__nodeB);
current_location.update_lineno(9200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9200 */
start_f__GEONW__PON__GBC__BV__12__nodeD(v__nodeD);
current_location.update_lineno(9203);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9203 */
{
LibCommon__Sync::SyncPointList tmp_424;
tmp_424.set_size(2);
tmp_424[0] = LibCommon__Sync::c__prDone;
tmp_424[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_424);
}
current_location.update_lineno(9206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9206 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GBC__BV__12(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_12(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_12", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__12__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9213, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_12_nodeB");
current_location.update_lineno(9216);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9216 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(9219);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9219 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9220);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9220 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9223);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9223 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoBroadcastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(9224);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9224 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9225 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(9228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9228 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9229 */
{
tmp_425:
alt_status tmp_425_alt_flag_0 = ALT_MAYBE;
alt_status tmp_425_alt_flag_1 = ALT_MAYBE;
alt_status tmp_425_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_425_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9230 */
tmp_425_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_425_alt_flag_0 == ALT_REPEAT) goto tmp_425;
if (tmp_425_alt_flag_0 == ALT_BREAK) break;
if (tmp_425_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9234);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9234 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9235 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9236 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_425_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9238);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9238 */
tmp_425_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_425_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9239 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9240 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_425_default_flag == ALT_MAYBE) {
tmp_425_default_flag = TTCN_Default::try_altsteps();
if (tmp_425_default_flag == ALT_YES || tmp_425_default_flag == ALT_BREAK) break;
else if (tmp_425_default_flag == ALT_REPEAT) goto tmp_425;
}
current_location.update_lineno(9229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9229 */
if (tmp_425_alt_flag_0 == ALT_NO && tmp_425_alt_flag_1 == ALT_NO && tmp_425_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9229 and 9242.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9245);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9245 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__12__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_12_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_12_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__12__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9252, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_12_nodeD");
current_location.update_lineno(9255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9255 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(9258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9258 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9259 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9262 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9263 */
{
tmp_426:
alt_status tmp_426_alt_flag_0 = ALT_MAYBE;
alt_status tmp_426_alt_flag_1 = ALT_MAYBE;
alt_status tmp_426_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_426_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9264 */
tmp_426_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_426_alt_flag_0 == ALT_REPEAT) goto tmp_426;
if (tmp_426_alt_flag_0 == ALT_BREAK) break;
if (tmp_426_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9268 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9269 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_171).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9270 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_426_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9272);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9272 */
tmp_426_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_426_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9273 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9274 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_426_default_flag == ALT_MAYBE) {
tmp_426_default_flag = TTCN_Default::try_altsteps();
if (tmp_426_default_flag == ALT_YES || tmp_426_default_flag == ALT_BREAK) break;
else if (tmp_426_default_flag == ALT_REPEAT) goto tmp_426;
}
current_location.update_lineno(9263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9263 */
if (tmp_426_alt_flag_0 == ALT_NO && tmp_426_alt_flag_1 == ALT_NO && tmp_426_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9263 and 9276.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9279 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__12__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_12_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_12_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__19()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9290, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_19");
current_location.update_lineno(9293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9293 */
COMPONENT v__nodeB;
current_location.update_lineno(9294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9294 */
COMPONENT v__nodeC;
current_location.update_lineno(9295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9295 */
COMPONENT v__nodeD;
current_location.update_lineno(9296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9296 */
INTEGER v__distanceTooBig;
current_location.update_lineno(9299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9299 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(9300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9300 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9301 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9302 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9306);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9306 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(9307);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9307 */
v__distanceTooBig = float2int((1.1 * LibItsGeoNetworking__Functions::f__radiusFromCircularArea((LibItsGeoNetworking__Functions::f__getGnMaxAreaSize() * LibItsGeoNetworking__TypesAndValues::c__squareKm))));
current_location.update_lineno(9312);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9312 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9313 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(9314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9314 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9315);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9315 */
start_f__GEONW__PON__GBC__BO__19__nodeB(v__nodeB, v__distanceTooBig);
current_location.update_lineno(9316);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9316 */
start_f__GEONW__PON__GBC__BO__19__nodeC(v__nodeC, v__distanceTooBig);
current_location.update_lineno(9317);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9317 */
start_f__GEONW__PON__GBC__BO__19__nodeD(v__nodeD, v__distanceTooBig);
current_location.update_lineno(9320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9320 */
{
LibCommon__Sync::SyncPointList tmp_431;
tmp_431.set_size(2);
tmp_431[0] = LibCommon__Sync::c__prDone;
tmp_431[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_431);
}
current_location.update_lineno(9323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9323 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GBC__BO__19(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_19", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__19__nodeB(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9330, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_19_nodeB");
current_location.update_lineno(9333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9333 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9334 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(9337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9337 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9338 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), p__distanceTooBig);
current_location.update_lineno(9342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9342 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9345 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(9346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9346 */
{
tmp_433:
alt_status tmp_433_alt_flag_0 = ALT_MAYBE;
alt_status tmp_433_alt_flag_1 = ALT_MAYBE;
alt_status tmp_433_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_433_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9347);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9347 */
tmp_433_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoBroadcastArea(v__areaTooBig))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_433_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9352 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(9353);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9353 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_197).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9354 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_433_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9356 */
tmp_433_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_433_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9357);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9357 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_198).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9358);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9358 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_433_default_flag == ALT_MAYBE) {
tmp_433_default_flag = TTCN_Default::try_altsteps();
if (tmp_433_default_flag == ALT_YES || tmp_433_default_flag == ALT_BREAK) break;
else if (tmp_433_default_flag == ALT_REPEAT) goto tmp_433;
}
current_location.update_lineno(9346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9346 */
if (tmp_433_alt_flag_0 == ALT_NO && tmp_433_alt_flag_1 == ALT_NO && tmp_433_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9346 and 9360.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9363 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__19__nodeB(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeB(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_19_nodeB", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__19__nodeC(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9370, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_19_nodeC");
current_location.update_lineno(9373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9373 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9374 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(9377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9377 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9378 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), p__distanceTooBig);
current_location.update_lineno(9382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9382 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoBroadcastArea(v__areaTooBig)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(9393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9393 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9396 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9399 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__19__nodeC(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeC(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_19_nodeC", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BO__19__nodeD(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9406, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BO_19_nodeD");
current_location.update_lineno(9409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9409 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9410 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(9413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9413 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9414 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), p__distanceTooBig);
current_location.update_lineno(9418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9418 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9421);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9421 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(9422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9422 */
{
tmp_436:
alt_status tmp_436_alt_flag_0 = ALT_MAYBE;
alt_status tmp_436_alt_flag_1 = ALT_MAYBE;
alt_status tmp_436_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_436_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9423 */
tmp_436_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoBroadcastArea(v__areaTooBig))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_436_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9428 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(9429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9429 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_197).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9430);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9430 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_436_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9432 */
tmp_436_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_436_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9433 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_198).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9434 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_436_default_flag == ALT_MAYBE) {
tmp_436_default_flag = TTCN_Default::try_altsteps();
if (tmp_436_default_flag == ALT_YES || tmp_436_default_flag == ALT_BREAK) break;
else if (tmp_436_default_flag == ALT_REPEAT) goto tmp_436;
}
current_location.update_lineno(9422);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9422 */
if (tmp_436_alt_flag_0 == ALT_NO && tmp_436_alt_flag_1 == ALT_NO && tmp_436_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9422 and 9436.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9439 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BO__19__nodeD(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeD(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BO_19_nodeD", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__20()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9450, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_20");
current_location.update_lineno(9453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9453 */
COMPONENT v__nodeB;
current_location.update_lineno(9454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9454 */
COMPONENT v__nodeC;
current_location.update_lineno(9455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9455 */
COMPONENT v__nodeD;
current_location.update_lineno(9458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9458 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(9459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9459 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9460 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9461 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9465 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(9470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9470 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9471);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9471 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(9472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9472 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9473 */
start_f__GEONW__PON__GBC__BV__20__nodeB(v__nodeB);
current_location.update_lineno(9474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9474 */
start_f__GEONW__PON__GBC__BV__20__nodeC(v__nodeC);
current_location.update_lineno(9475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9475 */
start_f__GEONW__PON__GBC__BV__20__nodeD(v__nodeD);
current_location.update_lineno(9478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9478 */
{
LibCommon__Sync::SyncPointList tmp_440;
tmp_440.set_size(2);
tmp_440[0] = LibCommon__Sync::c__prDone;
tmp_440[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_440);
}
current_location.update_lineno(9481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9481 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GBC__BV__20(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_20(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_20", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__20__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9488, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_20_nodeB");
current_location.update_lineno(9491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9491 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9494 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9495 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9498 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9499 */
{
tmp_441:
alt_status tmp_441_alt_flag_0 = ALT_MAYBE;
alt_status tmp_441_alt_flag_1 = ALT_MAYBE;
alt_status tmp_441_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_441_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9500 */
tmp_441_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_441_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9505 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9506 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9507 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_441_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9509);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9509 */
tmp_441_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_441_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9510 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9511 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_441_default_flag == ALT_MAYBE) {
tmp_441_default_flag = TTCN_Default::try_altsteps();
if (tmp_441_default_flag == ALT_YES || tmp_441_default_flag == ALT_BREAK) break;
else if (tmp_441_default_flag == ALT_REPEAT) goto tmp_441;
}
current_location.update_lineno(9499);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9499 */
if (tmp_441_alt_flag_0 == ALT_NO && tmp_441_alt_flag_1 == ALT_NO && tmp_441_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9499 and 9513.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9516 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__20__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_20_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_20_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__20__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9523, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_20_nodeC");
current_location.update_lineno(9526);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9526 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9529);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9529 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9530);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9530 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9533 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9534 */
{
tmp_442:
alt_status tmp_442_alt_flag_0 = ALT_MAYBE;
alt_status tmp_442_alt_flag_1 = ALT_MAYBE;
alt_status tmp_442_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_442_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9535 */
tmp_442_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_442_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9540 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9541 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9542 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_442_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9544 */
tmp_442_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_442_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9545 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9546 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_442_default_flag == ALT_MAYBE) {
tmp_442_default_flag = TTCN_Default::try_altsteps();
if (tmp_442_default_flag == ALT_YES || tmp_442_default_flag == ALT_BREAK) break;
else if (tmp_442_default_flag == ALT_REPEAT) goto tmp_442;
}
current_location.update_lineno(9534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9534 */
if (tmp_442_alt_flag_0 == ALT_NO && tmp_442_alt_flag_1 == ALT_NO && tmp_442_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9534 and 9548.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9551 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__20__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_20_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_20_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__20__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9558, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_20_nodeD");
current_location.update_lineno(9561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9561 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9564);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9564 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(9565);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9565 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9568 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(9579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9579 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9580 */
{
tmp_443:
alt_status tmp_443_alt_flag_0 = ALT_MAYBE;
alt_status tmp_443_alt_flag_1 = ALT_MAYBE;
alt_status tmp_443_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_443_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9581 */
tmp_443_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_443_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9586 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9587 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9588 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_443_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9590 */
tmp_443_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_443_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9591 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9592);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9592 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_443_default_flag == ALT_MAYBE) {
tmp_443_default_flag = TTCN_Default::try_altsteps();
if (tmp_443_default_flag == ALT_YES || tmp_443_default_flag == ALT_BREAK) break;
else if (tmp_443_default_flag == ALT_REPEAT) goto tmp_443;
}
current_location.update_lineno(9580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9580 */
if (tmp_443_alt_flag_0 == ALT_NO && tmp_443_alt_flag_1 == ALT_NO && tmp_443_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9580 and 9594.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9597 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__20__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_20_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_20_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__21()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9608, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_21");
current_location.update_lineno(9611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9611 */
COMPONENT v__nodeB;
current_location.update_lineno(9612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9612 */
COMPONENT v__nodeC;
current_location.update_lineno(9613);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9613 */
COMPONENT v__nodeD;
current_location.update_lineno(9616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9616 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(9617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9617 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9618 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9619);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9619 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9623 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(9628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9628 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9629 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(9630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9630 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9631 */
start_f__GEONW__PON__GBC__BV__21__nodeB(v__nodeB);
current_location.update_lineno(9632);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9632 */
start_f__GEONW__PON__GBC__BV__21__nodeC(v__nodeC);
current_location.update_lineno(9633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9633 */
start_f__GEONW__PON__GBC__BV__21__nodeD(v__nodeD);
current_location.update_lineno(9636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9636 */
{
LibCommon__Sync::SyncPointList tmp_447;
tmp_447.set_size(2);
tmp_447[0] = LibCommon__Sync::c__prDone;
tmp_447[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_447);
}
current_location.update_lineno(9639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9639 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GBC__BV__21(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_21(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_21", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__21__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9646, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_21_nodeB");
current_location.update_lineno(9649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9649 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9652 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9653 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9656);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9656 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9657 */
{
tmp_448:
alt_status tmp_448_alt_flag_0 = ALT_MAYBE;
alt_status tmp_448_alt_flag_1 = ALT_MAYBE;
alt_status tmp_448_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_448_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9658 */
tmp_448_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_448_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9663 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9664);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9664 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9665 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_448_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9667);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9667 */
tmp_448_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_448_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9668);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9668 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9669 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_448_default_flag == ALT_MAYBE) {
tmp_448_default_flag = TTCN_Default::try_altsteps();
if (tmp_448_default_flag == ALT_YES || tmp_448_default_flag == ALT_BREAK) break;
else if (tmp_448_default_flag == ALT_REPEAT) goto tmp_448;
}
current_location.update_lineno(9657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9657 */
if (tmp_448_alt_flag_0 == ALT_NO && tmp_448_alt_flag_1 == ALT_NO && tmp_448_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9657 and 9671.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9674 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__21__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_21_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_21_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__21__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9681, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_21_nodeC");
current_location.update_lineno(9684);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9684 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9687);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9687 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9688);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9688 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9691);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9691 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9692 */
{
tmp_449:
alt_status tmp_449_alt_flag_0 = ALT_MAYBE;
alt_status tmp_449_alt_flag_1 = ALT_MAYBE;
alt_status tmp_449_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_449_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9693);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9693 */
tmp_449_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_449_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9698 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9699);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9699 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9700 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_449_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9702 */
tmp_449_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_449_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9703);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9703 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9704 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_449_default_flag == ALT_MAYBE) {
tmp_449_default_flag = TTCN_Default::try_altsteps();
if (tmp_449_default_flag == ALT_YES || tmp_449_default_flag == ALT_BREAK) break;
else if (tmp_449_default_flag == ALT_REPEAT) goto tmp_449;
}
current_location.update_lineno(9692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9692 */
if (tmp_449_alt_flag_0 == ALT_NO && tmp_449_alt_flag_1 == ALT_NO && tmp_449_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9692 and 9706.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9709 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__21__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_21_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_21_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GBC__BV__21__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9716, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GBC_BV_21_nodeD");
current_location.update_lineno(9719);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9719 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(9720);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9720 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(9723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9723 */
v__longPosVectorNodeD.pai() = bs_0;
current_location.update_lineno(9724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9724 */
LibItsGeoNetworking__Functions::f__changePositon(LibItsGeoNetworking__TypesAndValues::c__compNodeD, v__longPosVectorNodeD);
current_location.update_lineno(9725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9725 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9726 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9729 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(9740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9740 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9741 */
{
tmp_451:
alt_status tmp_451_alt_flag_0 = ALT_MAYBE;
alt_status tmp_451_alt_flag_1 = ALT_MAYBE;
alt_status tmp_451_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_451_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9742 */
tmp_451_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_451_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9747 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9748);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9748 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9749 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_451_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9751);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9751 */
tmp_451_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_451_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9752 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9753 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_451_default_flag == ALT_MAYBE) {
tmp_451_default_flag = TTCN_Default::try_altsteps();
if (tmp_451_default_flag == ALT_YES || tmp_451_default_flag == ALT_BREAK) break;
else if (tmp_451_default_flag == ALT_REPEAT) goto tmp_451;
}
current_location.update_lineno(9741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9741 */
if (tmp_451_alt_flag_0 == ALT_NO && tmp_451_alt_flag_1 == ALT_NO && tmp_451_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9741 and 9755.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9758 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GBC__BV__21__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BV_21_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GBC_BV_21_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9774, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_01");
current_location.update_lineno(9777);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9777 */
COMPONENT v__nodeB;
current_location.update_lineno(9778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9778 */
COMPONENT v__nodeD;
current_location.update_lineno(9781);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9781 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__SRC))) {
current_location.update_lineno(9782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9782 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_37).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9783);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9783 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9784 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9788);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9788 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(9793);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9793 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9794);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9794 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9795);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9795 */
start_f__GEONW__PON__TSB__BV__01__nodeB(v__nodeB);
current_location.update_lineno(9796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9796 */
start_f__GEONW__PON__TSB__BV__01__nodeD(v__nodeD);
current_location.update_lineno(9799);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9799 */
{
LibCommon__Sync::SyncPointList tmp_454;
tmp_454.set_size(2);
tmp_454[0] = LibCommon__Sync::c__prDone;
tmp_454[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_454);
}
current_location.update_lineno(9802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9802 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9809, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_01_nodeB");
current_location.update_lineno(9812);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9812 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(9815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9815 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9816);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9816 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9819);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9819 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateTsbMessage)))) {
current_location.update_lineno(9820);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9820 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9821 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(9823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9823 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9824 */
{
tmp_455:
alt_status tmp_455_alt_flag_0 = ALT_MAYBE;
alt_status tmp_455_alt_flag_1 = ALT_MAYBE;
alt_status tmp_455_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_455_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9825 */
tmp_455_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_455_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9832 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9833 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_200).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9834 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_455_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9836 */
tmp_455_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_455_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9837);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9837 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_201).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9838);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9838 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_455_default_flag == ALT_MAYBE) {
tmp_455_default_flag = TTCN_Default::try_altsteps();
if (tmp_455_default_flag == ALT_YES || tmp_455_default_flag == ALT_BREAK) break;
else if (tmp_455_default_flag == ALT_REPEAT) goto tmp_455;
}
current_location.update_lineno(9824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9824 */
if (tmp_455_alt_flag_0 == ALT_NO && tmp_455_alt_flag_1 == ALT_NO && tmp_455_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9824 and 9840.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9843);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9843 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__01__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9850, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_01_nodeD");
current_location.update_lineno(9853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9853 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(9856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9856 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9857 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9860);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9860 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9861);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9861 */
{
tmp_456:
alt_status tmp_456_alt_flag_0 = ALT_MAYBE;
alt_status tmp_456_alt_flag_1 = ALT_MAYBE;
alt_status tmp_456_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_456_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9862 */
tmp_456_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_456_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9869 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9870);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9870 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_200).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9871);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9871 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_456_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9873);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9873 */
tmp_456_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_456_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9874);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9874 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_201).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9875);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9875 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_456_default_flag == ALT_MAYBE) {
tmp_456_default_flag = TTCN_Default::try_altsteps();
if (tmp_456_default_flag == ALT_YES || tmp_456_default_flag == ALT_BREAK) break;
else if (tmp_456_default_flag == ALT_REPEAT) goto tmp_456;
}
current_location.update_lineno(9861);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9861 */
if (tmp_456_alt_flag_0 == ALT_NO && tmp_456_alt_flag_1 == ALT_NO && tmp_456_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9861 and 9877.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9880);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9880 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__01__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_01_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_01_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9891, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_02");
current_location.update_lineno(9894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9894 */
COMPONENT v__nodeB;
current_location.update_lineno(9895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9895 */
COMPONENT v__nodeD;
current_location.update_lineno(9898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9898 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__FWD))) {
current_location.update_lineno(9899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9899 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_202).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9900 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(9901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9901 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(9905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9905 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(9910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9910 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(9911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9911 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(9912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9912 */
start_f__GEONW__PON__TSB__BV__02__nodeB(v__nodeB);
current_location.update_lineno(9913);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9913 */
start_f__GEONW__PON__TSB__BV__02__nodeD(v__nodeD);
current_location.update_lineno(9916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9916 */
{
LibCommon__Sync::SyncPointList tmp_459;
tmp_459.set_size(2);
tmp_459[0] = LibCommon__Sync::c__prDone;
tmp_459[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_459);
}
current_location.update_lineno(9919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9919 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9926, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_02_nodeB");
current_location.update_lineno(9929);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9929 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(9932);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9932 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9933);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9933 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9936 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(9949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9949 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9950 */
{
tmp_460:
alt_status tmp_460_alt_flag_0 = ALT_MAYBE;
alt_status tmp_460_alt_flag_1 = ALT_MAYBE;
alt_status tmp_460_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_460_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9951 */
tmp_460_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_460_alt_flag_0 == ALT_YES) {
current_location.update_lineno(9961);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9961 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(9962);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9962 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_200).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9963 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_460_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(9965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9965 */
tmp_460_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_460_alt_flag_1 == ALT_YES) {
current_location.update_lineno(9966);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9966 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_201).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(9967);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9967 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_460_default_flag == ALT_MAYBE) {
tmp_460_default_flag = TTCN_Default::try_altsteps();
if (tmp_460_default_flag == ALT_YES || tmp_460_default_flag == ALT_BREAK) break;
else if (tmp_460_default_flag == ALT_REPEAT) goto tmp_460;
}
current_location.update_lineno(9950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9950 */
if (tmp_460_alt_flag_0 == ALT_NO && tmp_460_alt_flag_1 == ALT_NO && tmp_460_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9950 and 9969.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(9972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9972 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__02__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 9979, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_02_nodeD");
current_location.update_lineno(9982);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9982 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(9985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9985 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(9986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9986 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(9989);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9989 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(9990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9990 */
{
tmp_461:
alt_status tmp_461_alt_flag_0 = ALT_MAYBE;
alt_status tmp_461_alt_flag_1 = ALT_MAYBE;
alt_status tmp_461_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_461_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(9991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9991 */
tmp_461_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_461_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10001 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10002);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10002 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_200).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10003 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_461_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10005 */
tmp_461_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_461_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10006 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_201).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10007 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_461_default_flag == ALT_MAYBE) {
tmp_461_default_flag = TTCN_Default::try_altsteps();
if (tmp_461_default_flag == ALT_YES || tmp_461_default_flag == ALT_BREAK) break;
else if (tmp_461_default_flag == ALT_REPEAT) goto tmp_461;
}
current_location.update_lineno(9990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 9990 */
if (tmp_461_alt_flag_0 == ALT_NO && tmp_461_alt_flag_1 == ALT_NO && tmp_461_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 9990 and 10009.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10012);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10012 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__02__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_02_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_02_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10023, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_03");
current_location.update_lineno(10026);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10026 */
COMPONENT v__nodeB;
current_location.update_lineno(10027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10027 */
COMPONENT v__nodeD;
current_location.update_lineno(10030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10030 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__FWD))) {
current_location.update_lineno(10031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10031 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_202).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10032 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10033);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10033 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10037);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10037 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(10042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10042 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10043 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10044 */
start_f__GEONW__PON__TSB__BO__03__nodeB(v__nodeB);
current_location.update_lineno(10045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10045 */
start_f__GEONW__PON__TSB__BO__03__nodeD(v__nodeD);
current_location.update_lineno(10048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10048 */
{
LibCommon__Sync::SyncPointList tmp_464;
tmp_464.set_size(2);
tmp_464[0] = LibCommon__Sync::c__prDone;
tmp_464[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_464);
}
current_location.update_lineno(10051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10051 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BO__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10058, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_03_nodeB");
current_location.update_lineno(10061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10061 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10062 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(10065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10065 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10066 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(10075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10075 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(v__gnPacket.valueof())));
current_location.update_lineno(10076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10076 */
v__gnPacket.basicHeader().routerHopLimit() = ANY_VALUE;
current_location.update_lineno(10077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10077 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(10078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10078 */
{
tmp_467:
alt_status tmp_467_alt_flag_0 = ALT_MAYBE;
alt_status tmp_467_alt_flag_1 = ALT_MAYBE;
alt_status tmp_467_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_467_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10079 */
tmp_467_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_467_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10089 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(10090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10090 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_203).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10091);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10091 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_467_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10093 */
tmp_467_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_467_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10094);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10094 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_204).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10095);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10095 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_467_default_flag == ALT_MAYBE) {
tmp_467_default_flag = TTCN_Default::try_altsteps();
if (tmp_467_default_flag == ALT_YES || tmp_467_default_flag == ALT_BREAK) break;
else if (tmp_467_default_flag == ALT_REPEAT) goto tmp_467;
}
current_location.update_lineno(10078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10078 */
if (tmp_467_alt_flag_0 == ALT_NO && tmp_467_alt_flag_1 == ALT_NO && tmp_467_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10078 and 10097.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10100 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(10101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10101 */
{
tmp_468:
alt_status tmp_468_alt_flag_0 = ALT_MAYBE;
alt_status tmp_468_alt_flag_1 = ALT_MAYBE;
alt_status tmp_468_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_468_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10102 */
tmp_468_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_468_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10112 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(10113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10113 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_205).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10114 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_468_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10116);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10116 */
tmp_468_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_468_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10117);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10117 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_206).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10118 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_468_default_flag == ALT_MAYBE) {
tmp_468_default_flag = TTCN_Default::try_altsteps();
if (tmp_468_default_flag == ALT_YES || tmp_468_default_flag == ALT_BREAK) break;
else if (tmp_468_default_flag == ALT_REPEAT) goto tmp_468;
}
current_location.update_lineno(10101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10101 */
if (tmp_468_alt_flag_0 == ALT_NO && tmp_468_alt_flag_1 == ALT_NO && tmp_468_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10101 and 10120.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10123);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10123 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__03__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10130, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_03_nodeD");
current_location.update_lineno(10133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10133 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10134 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(10135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10135 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(10138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10138 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10139 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10140 */
{
tmp_469:
alt_status tmp_469_alt_flag_0 = ALT_MAYBE;
alt_status tmp_469_alt_flag_1 = ALT_MAYBE;
alt_status tmp_469_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_469_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10141 */
tmp_469_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_469_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10151 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10152 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_203).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10153 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_469_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10155);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10155 */
tmp_469_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_469_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10156);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10156 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_204).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10157 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_469_default_flag == ALT_MAYBE) {
tmp_469_default_flag = TTCN_Default::try_altsteps();
if (tmp_469_default_flag == ALT_YES || tmp_469_default_flag == ALT_BREAK) break;
else if (tmp_469_default_flag == ALT_REPEAT) goto tmp_469;
}
current_location.update_lineno(10140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10140 */
if (tmp_469_alt_flag_0 == ALT_NO && tmp_469_alt_flag_1 == ALT_NO && tmp_469_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10140 and 10159.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10162 */
{
INTEGER tmp_470;
tmp_470 = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn().basicHeader().routerHopLimit() - 1);
v__msgInd.msgIn().basicHeader().routerHopLimit() = tmp_470;
}
current_location.update_lineno(10163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10163 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn())));
current_location.update_lineno(10165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10165 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(10166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10166 */
{
tmp_471:
alt_status tmp_471_alt_flag_0 = ALT_MAYBE;
alt_status tmp_471_alt_flag_1 = ALT_MAYBE;
alt_status tmp_471_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_471_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10167 */
tmp_471_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template(v__msgInd), NULL, any_compref, NULL);
if (tmp_471_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10168);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10168 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(10169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10169 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_205).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10170 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_471_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10172);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10172 */
tmp_471_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_471_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10173);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10173 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_206).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10174 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_471_default_flag == ALT_MAYBE) {
tmp_471_default_flag = TTCN_Default::try_altsteps();
if (tmp_471_default_flag == ALT_YES || tmp_471_default_flag == ALT_BREAK) break;
else if (tmp_471_default_flag == ALT_REPEAT) goto tmp_471;
}
current_location.update_lineno(10166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10166 */
if (tmp_471_alt_flag_0 == ALT_NO && tmp_471_alt_flag_1 == ALT_NO && tmp_471_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10166 and 10176.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10179);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10179 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__03__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_03_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_03_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10190, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_04");
current_location.update_lineno(10193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10193 */
COMPONENT v__nodeB;
current_location.update_lineno(10194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10194 */
COMPONENT v__nodeD;
current_location.update_lineno(10197);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10197 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__FWD))) {
current_location.update_lineno(10198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10198 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_202).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10199 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10200 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10204);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10204 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(10209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10209 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10210);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10210 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10211);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10211 */
start_f__GEONW__PON__TSB__BV__04__nodeB(v__nodeB);
current_location.update_lineno(10212);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10212 */
start_f__GEONW__PON__TSB__BV__04__nodeD(v__nodeD);
current_location.update_lineno(10215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10215 */
{
LibCommon__Sync::SyncPointList tmp_474;
tmp_474.set_size(2);
tmp_474[0] = LibCommon__Sync::c__prDone;
tmp_474[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_474);
}
current_location.update_lineno(10218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10218 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10225, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_04_nodeB");
current_location.update_lineno(10228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10228 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10231 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10232 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10235 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(10249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10249 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10250 */
{
tmp_475:
alt_status tmp_475_alt_flag_0 = ALT_MAYBE;
alt_status tmp_475_alt_flag_1 = ALT_MAYBE;
alt_status tmp_475_alt_flag_2 = ALT_MAYBE;
alt_status tmp_475_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_475_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10251 */
tmp_475_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_475_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10263 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10264 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_207).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10265 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_475_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10267 */
tmp_475_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(ANY_VALUE))), NULL, any_compref, NULL);
if (tmp_475_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10279 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10280 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_208).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10281 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_475_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(10283);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10283 */
tmp_475_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_475_alt_flag_2 == ALT_YES) {
current_location.update_lineno(10284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10284 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_209).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10285 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_475_default_flag == ALT_MAYBE) {
tmp_475_default_flag = TTCN_Default::try_altsteps();
if (tmp_475_default_flag == ALT_YES || tmp_475_default_flag == ALT_BREAK) break;
else if (tmp_475_default_flag == ALT_REPEAT) goto tmp_475;
}
current_location.update_lineno(10250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10250 */
if (tmp_475_alt_flag_0 == ALT_NO && tmp_475_alt_flag_1 == ALT_NO && tmp_475_alt_flag_2 == ALT_NO && tmp_475_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10250 and 10287.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10290 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__04__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10297, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_04_nodeD");
current_location.update_lineno(10300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10300 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10303 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10304 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10307);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10307 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10308);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10308 */
{
tmp_476:
alt_status tmp_476_alt_flag_0 = ALT_MAYBE;
alt_status tmp_476_alt_flag_1 = ALT_MAYBE;
alt_status tmp_476_alt_flag_2 = ALT_MAYBE;
alt_status tmp_476_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_476_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10309 */
tmp_476_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacketWithHl(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))), NULL, any_compref, NULL);
if (tmp_476_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10322);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10322 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10323 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_207).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10324);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10324 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_476_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10326 */
tmp_476_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, INTEGER_template(ANY_VALUE))), NULL, any_compref, NULL);
if (tmp_476_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10338);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10338 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10339 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_208).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10340 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_476_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(10342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10342 */
tmp_476_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_476_alt_flag_2 == ALT_YES) {
current_location.update_lineno(10343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10343 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_209).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10344);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10344 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_476_default_flag == ALT_MAYBE) {
tmp_476_default_flag = TTCN_Default::try_altsteps();
if (tmp_476_default_flag == ALT_YES || tmp_476_default_flag == ALT_BREAK) break;
else if (tmp_476_default_flag == ALT_REPEAT) goto tmp_476;
}
current_location.update_lineno(10308);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10308 */
if (tmp_476_alt_flag_0 == ALT_NO && tmp_476_alt_flag_1 == ALT_NO && tmp_476_alt_flag_2 == ALT_NO && tmp_476_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10308 and 10346.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10349 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BV__04__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_04_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_04_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10360, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_05");
current_location.update_lineno(10363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10363 */
COMPONENT v__nodeB;
current_location.update_lineno(10364);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10364 */
COMPONENT v__nodeD;
current_location.update_lineno(10367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10367 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__FWD))) {
current_location.update_lineno(10368);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10368 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_202).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10369);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10369 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10370 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10374 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(10379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10379 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10380);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10380 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10381 */
start_f__GEONW__PON__TSB__BO__05__nodeB(v__nodeB);
current_location.update_lineno(10382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10382 */
start_f__GEONW__PON__TSB__BO__05__nodeD(v__nodeD);
current_location.update_lineno(10385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10385 */
{
LibCommon__Sync::SyncPointList tmp_479;
tmp_479.set_size(2);
tmp_479[0] = LibCommon__Sync::c__prDone;
tmp_479[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_479);
}
current_location.update_lineno(10388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10388 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BO__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10395, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_05_nodeB");
current_location.update_lineno(10398);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10398 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10401);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10401 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10402);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10402 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10405);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10405 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(1))));
current_location.update_lineno(10417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10417 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10420);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10420 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__05__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10427, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_05_nodeD");
current_location.update_lineno(10430);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10430 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10433 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10434 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10437);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10437 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(10438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10438 */
{
tmp_480:
alt_status tmp_480_alt_flag_0 = ALT_MAYBE;
alt_status tmp_480_alt_flag_1 = ALT_MAYBE;
alt_status tmp_480_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_480_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10439 */
tmp_480_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_480_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10449 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(10450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10450 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_210).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10451);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10451 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_480_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10453);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10453 */
tmp_480_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_480_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10454 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_211).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10455 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_480_default_flag == ALT_MAYBE) {
tmp_480_default_flag = TTCN_Default::try_altsteps();
if (tmp_480_default_flag == ALT_YES || tmp_480_default_flag == ALT_BREAK) break;
else if (tmp_480_default_flag == ALT_REPEAT) goto tmp_480;
}
current_location.update_lineno(10438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10438 */
if (tmp_480_alt_flag_0 == ALT_NO && tmp_480_alt_flag_1 == ALT_NO && tmp_480_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10438 and 10457.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10460 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__05__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_05_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_05_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10469, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BV_06");
current_location.update_lineno(10472);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10472 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(10473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10473 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(10474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10474 */
INTEGER i;
current_location.update_lineno(10475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10475 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(10478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10478 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__DST))) {
current_location.update_lineno(10479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10479 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_55).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10480 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10481 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10485 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(10486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10486 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10491 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(10492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10492 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10495 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(10500);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10500 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(10502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10502 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(10504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10504 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_484;
tmp_484 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_484.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_484);
}
current_location.update_lineno(10505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10505 */
i = 0;
current_location.update_lineno(10505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10505 */
for ( ; ; ) {
current_location.update_lineno(10505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10505 */
{
boolean tmp_486;
tmp_486 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_486) tmp_486 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_486) break;
}
current_location.update_lineno(10505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10505 */
{
INTEGER tmp_487;
++i;
}
}
current_location.update_lineno(10508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10508 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(10509);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10509 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10510 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(10513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10513 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_155).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10514 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(10517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10517 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_212).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10518 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10521 */
LibItsGeoNetworking__Functions::f__poDefault();
current_location.update_lineno(10522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10522 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__TSB__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10531, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_07");
current_location.update_lineno(10534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10534 */
COMPONENT v__nodeB;
current_location.update_lineno(10535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10535 */
COMPONENT v__nodeD;
current_location.update_lineno(10538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10538 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__TSB__DST))) {
current_location.update_lineno(10539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10539 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_55).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10540 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10541 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10545 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10550 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10551 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10552);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10552 */
start_f__GEONW__PON__TSB__BO__07__nodeB(v__nodeB);
current_location.update_lineno(10553);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10553 */
start_f__GEONW__PON__TSB__BO__07__nodeD(v__nodeD);
current_location.update_lineno(10556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10556 */
{
LibCommon__Sync::SyncPointList tmp_490;
tmp_490.set_size(2);
tmp_490[0] = LibCommon__Sync::c__prDone;
tmp_490[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_490);
}
current_location.update_lineno(10559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10559 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__TSB__BO__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__07__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10566, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_07_nodeB");
current_location.update_lineno(10569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10569 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10570);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10570 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(10571);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10571 */
INTEGER i;
current_location.update_lineno(10572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10572 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(10575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10575 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10576 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwTsbPacket(INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwTsbPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(10583);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10583 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(v__gnPacket.valueof())));
current_location.update_lineno(10585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10585 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10586 */
{
tmp_492:
alt_status tmp_492_alt_flag_0 = ALT_MAYBE;
alt_status tmp_492_alt_flag_1 = ALT_MAYBE;
alt_status tmp_492_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_492_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10587 */
tmp_492_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_492_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10597 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10599);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10599 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(10601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10601 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_494;
tmp_494 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_494.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_494);
}
current_location.update_lineno(10602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10602 */
i = 0;
current_location.update_lineno(10602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10602 */
for ( ; ; ) {
current_location.update_lineno(10602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10602 */
{
boolean tmp_496;
tmp_496 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_496) tmp_496 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_496) break;
}
current_location.update_lineno(10602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10602 */
{
INTEGER tmp_497;
++i;
}
}
current_location.update_lineno(10605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10605 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(10606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10606 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_213).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10607 */
LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds = NULL_VALUE;
current_location.update_lineno(10608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10608 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(10611);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10611 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_214).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10612 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_492_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10615);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10615 */
tmp_492_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_492_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10616 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_215).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10617 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_492_default_flag == ALT_MAYBE) {
tmp_492_default_flag = TTCN_Default::try_altsteps();
if (tmp_492_default_flag == ALT_YES || tmp_492_default_flag == ALT_BREAK) break;
else if (tmp_492_default_flag == ALT_REPEAT) goto tmp_492;
}
current_location.update_lineno(10586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10586 */
if (tmp_492_alt_flag_0 == ALT_NO && tmp_492_alt_flag_1 == ALT_NO && tmp_492_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10586 and 10619.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10622 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(10624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10624 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_500;
tmp_500 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_500.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_500);
}
current_location.update_lineno(10625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10625 */
i = 0;
current_location.update_lineno(10625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10625 */
for ( ; ; ) {
current_location.update_lineno(10625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10625 */
{
boolean tmp_502;
tmp_502 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_502) tmp_502 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_502) break;
}
current_location.update_lineno(10625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10625 */
{
INTEGER tmp_503;
++i;
}
}
current_location.update_lineno(10628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10628 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(10629);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10629 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_216).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10630 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(10633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10633 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_217).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10634 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(10638);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10638 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__07__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_07_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_07_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__TSB__BO__07__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10645, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_TSB_BO_07_nodeD");
current_location.update_lineno(10648);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10648 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(10649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10649 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(10650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10650 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(10651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10651 */
INTEGER i;
current_location.update_lineno(10652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10652 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(10655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10655 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10657 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10658 */
{
tmp_504:
alt_status tmp_504_alt_flag_0 = ALT_MAYBE;
alt_status tmp_504_alt_flag_1 = ALT_MAYBE;
alt_status tmp_504_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_504_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10659 */
tmp_504_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwTsbPacket(INTEGER_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_504_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10669 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10670 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_218).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10671 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_504_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10673);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10673 */
tmp_504_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_504_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10674 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_215).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10675 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_504_default_flag == ALT_MAYBE) {
tmp_504_default_flag = TTCN_Default::try_altsteps();
if (tmp_504_default_flag == ALT_YES || tmp_504_default_flag == ALT_BREAK) break;
else if (tmp_504_default_flag == ALT_REPEAT) goto tmp_504;
}
current_location.update_lineno(10658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10658 */
if (tmp_504_alt_flag_0 == ALT_NO && tmp_504_alt_flag_1 == ALT_NO && tmp_504_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10658 and 10677.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10680 */
{
INTEGER tmp_505;
tmp_505 = (const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn().basicHeader().routerHopLimit() - 1);
v__msgInd.msgIn().basicHeader().routerHopLimit() = tmp_505;
}
current_location.update_lineno(10681);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10681 */
v__gnPacket = const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn();
current_location.update_lineno(10682);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10682 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template(const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msgInd).msgIn())));
current_location.update_lineno(10683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10683 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10686 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__TSB__BO__07__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_TSB_BO_07_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_TSB_BO_07_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SHB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10702, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SHB_BV_01");
current_location.update_lineno(10705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10705 */
COMPONENT v__nodeB;
current_location.update_lineno(10706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10706 */
COMPONENT v__nodeD;
current_location.update_lineno(10709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10709 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__SHB__SRC))) {
current_location.update_lineno(10710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10710 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_34).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10711 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10712 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10716 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(10721);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10721 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10722);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10722 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10723 */
start_f__GEONW__PON__SHB__BV__01__nodeB(v__nodeB);
current_location.update_lineno(10724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10724 */
start_f__GEONW__PON__SHB__BV__01__nodeD(v__nodeD);
current_location.update_lineno(10727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10727 */
{
LibCommon__Sync::SyncPointList tmp_509;
tmp_509.set_size(2);
tmp_509[0] = LibCommon__Sync::c__prDone;
tmp_509[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_509);
}
current_location.update_lineno(10730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10730 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__SHB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SHB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SHB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SHB__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10737, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SHB_BV_01_nodeB");
current_location.update_lineno(10740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10740 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(10743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10743 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10744 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10747 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateShbMessage)))) {
current_location.update_lineno(10748);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10748 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10749 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(10752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10752 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10753 */
{
tmp_510:
alt_status tmp_510_alt_flag_0 = ALT_MAYBE;
alt_status tmp_510_alt_flag_1 = ALT_MAYBE;
alt_status tmp_510_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_510_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10754 */
tmp_510_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_510_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10761 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10762 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_219).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10763);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10763 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_510_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10765);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10765 */
tmp_510_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_510_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10766 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_220).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10767);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10767 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_510_default_flag == ALT_MAYBE) {
tmp_510_default_flag = TTCN_Default::try_altsteps();
if (tmp_510_default_flag == ALT_YES || tmp_510_default_flag == ALT_BREAK) break;
else if (tmp_510_default_flag == ALT_REPEAT) goto tmp_510;
}
current_location.update_lineno(10753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10753 */
if (tmp_510_alt_flag_0 == ALT_NO && tmp_510_alt_flag_1 == ALT_NO && tmp_510_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10753 and 10769.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10772 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__SHB__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SHB_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SHB_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SHB__BV__01__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10779, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SHB_BV_01_nodeD");
current_location.update_lineno(10782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10782 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(10785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10785 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10786 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10789 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10790 */
{
tmp_511:
alt_status tmp_511_alt_flag_0 = ALT_MAYBE;
alt_status tmp_511_alt_flag_1 = ALT_MAYBE;
alt_status tmp_511_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_511_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10791 */
tmp_511_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwShbPacket(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), LibItsGeoNetworking__Templates::mw__geoNwShbPacket_p__hopLimit_defval), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_511_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10798);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10798 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10799);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10799 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_219).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10800);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10800 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_511_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10802 */
tmp_511_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_511_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10803 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_220).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10804);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10804 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_511_default_flag == ALT_MAYBE) {
tmp_511_default_flag = TTCN_Default::try_altsteps();
if (tmp_511_default_flag == ALT_YES || tmp_511_default_flag == ALT_BREAK) break;
else if (tmp_511_default_flag == ALT_REPEAT) goto tmp_511;
}
current_location.update_lineno(10790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10790 */
if (tmp_511_alt_flag_0 == ALT_NO && tmp_511_alt_flag_1 == ALT_NO && tmp_511_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10790 and 10806.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10809 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__SHB__BV__01__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SHB_BV_01_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SHB_BV_01_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__SHB__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10818, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_SHB_BV_02");
current_location.update_lineno(10821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10821 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(10822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10822 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(10823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10823 */
INTEGER i;
current_location.update_lineno(10824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10824 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(10827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10827 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__SHB__DST))) {
current_location.update_lineno(10828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10828 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_56).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10829);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10829 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10830);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10830 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10834 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(10835);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10835 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10840);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10840 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10841);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10841 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10844 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwShbPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(10845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10845 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(10847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10847 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(10849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10849 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_515;
tmp_515 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_515.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_515);
}
current_location.update_lineno(10850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10850 */
i = 0;
current_location.update_lineno(10850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10850 */
for ( ; ; ) {
current_location.update_lineno(10850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10850 */
{
boolean tmp_517;
tmp_517 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_517) tmp_517 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_517) break;
}
current_location.update_lineno(10850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10850 */
{
INTEGER tmp_518;
++i;
}
}
current_location.update_lineno(10853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10853 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(10854);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10854 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10855 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(10858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10858 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_155).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10859);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10859 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(10863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10863 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(10864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10864 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__SHB__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_SHB_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_SHB_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10878, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_01");
current_location.update_lineno(10881);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10881 */
COMPONENT v__nodeB;
current_location.update_lineno(10882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10882 */
COMPONENT v__nodeD;
current_location.update_lineno(10885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10885 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(10886);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10886 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10887);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10887 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(10888);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10888 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(10892);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10892 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(10897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10897 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(10898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10898 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(10899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10899 */
start_f__GEONW__PON__GAC__BV__01__nodeB(v__nodeB);
current_location.update_lineno(10900);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10900 */
start_f__GEONW__PON__GAC__BV__01__nodeD(v__nodeD);
current_location.update_lineno(10903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10903 */
{
LibCommon__Sync::SyncPointList tmp_521;
tmp_521.set_size(2);
tmp_521[0] = LibCommon__Sync::c__prDone;
tmp_521[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_521);
}
current_location.update_lineno(10906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10906 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GAC__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10913, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_01_nodeB");
current_location.update_lineno(10916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10916 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(10919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10919 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10920 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10923);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10923 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoAnycastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area1)))))) {
current_location.update_lineno(10924);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10924 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10925);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10925 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(10928);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10928 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10929);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10929 */
{
tmp_522:
alt_status tmp_522_alt_flag_0 = ALT_MAYBE;
alt_status tmp_522_alt_flag_1 = ALT_MAYBE;
alt_status tmp_522_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_522_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10930);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10930 */
tmp_522_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_522_alt_flag_0 == ALT_REPEAT) goto tmp_522;
if (tmp_522_alt_flag_0 == ALT_BREAK) break;
if (tmp_522_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10934);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10934 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10935);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10935 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_221).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10936 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_522_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10938 */
tmp_522_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_522_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10939 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_222).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10940 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_522_default_flag == ALT_MAYBE) {
tmp_522_default_flag = TTCN_Default::try_altsteps();
if (tmp_522_default_flag == ALT_YES || tmp_522_default_flag == ALT_BREAK) break;
else if (tmp_522_default_flag == ALT_REPEAT) goto tmp_522;
}
current_location.update_lineno(10929);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10929 */
if (tmp_522_alt_flag_0 == ALT_NO && tmp_522_alt_flag_1 == ALT_NO && tmp_522_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10929 and 10942.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10945 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__01__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10952, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_01_nodeD");
current_location.update_lineno(10955);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10955 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(10958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10958 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(10959);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10959 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(10962);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10962 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(10963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10963 */
{
tmp_523:
alt_status tmp_523_alt_flag_0 = ALT_MAYBE;
alt_status tmp_523_alt_flag_1 = ALT_MAYBE;
alt_status tmp_523_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_523_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(10964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10964 */
tmp_523_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_523_alt_flag_0 == ALT_REPEAT) goto tmp_523;
if (tmp_523_alt_flag_0 == ALT_BREAK) break;
if (tmp_523_alt_flag_0 == ALT_YES) {
current_location.update_lineno(10968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10968 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(10969);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10969 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_221).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10970 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_523_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(10972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10972 */
tmp_523_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_523_alt_flag_1 == ALT_YES) {
current_location.update_lineno(10973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10973 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_222).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10974 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_523_default_flag == ALT_MAYBE) {
tmp_523_default_flag = TTCN_Default::try_altsteps();
if (tmp_523_default_flag == ALT_YES || tmp_523_default_flag == ALT_BREAK) break;
else if (tmp_523_default_flag == ALT_REPEAT) goto tmp_523;
}
current_location.update_lineno(10963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10963 */
if (tmp_523_alt_flag_0 == ALT_NO && tmp_523_alt_flag_1 == ALT_NO && tmp_523_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 10963 and 10976.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(10979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10979 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__01__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_01_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_01_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 10990, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_02");
current_location.update_lineno(10993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10993 */
COMPONENT v__nodeB;
current_location.update_lineno(10994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10994 */
COMPONENT v__nodeD;
current_location.update_lineno(10997);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10997 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(10998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10998 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(10999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 10999 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11000 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11002);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11002 */
{
boolean tmp_524;
tmp_524 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__simple);
if (tmp_524) tmp_524 = (LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__unspecified);
if (tmp_524) {
current_location.update_lineno(11003);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11003 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_172).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11004 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11005 */
TTCN_Runtime::stop_execution();
}
}
current_location.update_lineno(11009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11009 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(11014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11014 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11015 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(11016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11016 */
start_f__GEONW__PON__GAC__BV__02__nodeB(v__nodeB);
current_location.update_lineno(11017);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11017 */
start_f__GEONW__PON__GAC__BV__02__nodeD(v__nodeD);
current_location.update_lineno(11020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11020 */
{
LibCommon__Sync::SyncPointList tmp_527;
tmp_527.set_size(2);
tmp_527[0] = LibCommon__Sync::c__prDone;
tmp_527[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_527);
}
current_location.update_lineno(11023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11023 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GAC__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11030, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_02_nodeB");
current_location.update_lineno(11033);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11033 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(11036);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11036 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11037);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11037 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11040);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11040 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoAnycastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area2)))))) {
current_location.update_lineno(11041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11041 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11042 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(11045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11045 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(11046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11046 */
{
tmp_528:
alt_status tmp_528_alt_flag_0 = ALT_MAYBE;
alt_status tmp_528_alt_flag_1 = ALT_MAYBE;
alt_status tmp_528_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_528_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11047 */
tmp_528_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_528_alt_flag_0 == ALT_REPEAT) goto tmp_528;
if (tmp_528_alt_flag_0 == ALT_BREAK) break;
if (tmp_528_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11051 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(11052);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11052 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_221).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11053);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11053 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_528_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11055 */
tmp_528_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_528_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11056 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_222).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11057 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_528_default_flag == ALT_MAYBE) {
tmp_528_default_flag = TTCN_Default::try_altsteps();
if (tmp_528_default_flag == ALT_YES || tmp_528_default_flag == ALT_BREAK) break;
else if (tmp_528_default_flag == ALT_REPEAT) goto tmp_528;
}
current_location.update_lineno(11046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11046 */
if (tmp_528_alt_flag_0 == ALT_NO && tmp_528_alt_flag_1 == ALT_NO && tmp_528_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11046 and 11059.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11062 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__02__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11069, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_02_nodeD");
current_location.update_lineno(11072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11072 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(11075);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11075 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11076 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11079 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11080 */
{
tmp_529:
alt_status tmp_529_alt_flag_0 = ALT_MAYBE;
alt_status tmp_529_alt_flag_1 = ALT_MAYBE;
alt_status tmp_529_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_529_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11081 */
tmp_529_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_529_alt_flag_0 == ALT_REPEAT) goto tmp_529;
if (tmp_529_alt_flag_0 == ALT_BREAK) break;
if (tmp_529_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11085 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11086 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_223).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11087 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_529_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11089 */
tmp_529_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_529_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11090 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11091);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11091 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_529_default_flag == ALT_MAYBE) {
tmp_529_default_flag = TTCN_Default::try_altsteps();
if (tmp_529_default_flag == ALT_YES || tmp_529_default_flag == ALT_BREAK) break;
else if (tmp_529_default_flag == ALT_REPEAT) goto tmp_529;
}
current_location.update_lineno(11080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11080 */
if (tmp_529_alt_flag_0 == ALT_NO && tmp_529_alt_flag_1 == ALT_NO && tmp_529_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11080 and 11093.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11096);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11096 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__02__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_02_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_02_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11107, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_03");
current_location.update_lineno(11110);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11110 */
COMPONENT v__nodeB;
current_location.update_lineno(11111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11111 */
COMPONENT v__nodeD;
current_location.update_lineno(11114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11114 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(11115);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11115 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11116);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11116 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11117);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11117 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11121 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(11126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11126 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11127);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11127 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(11128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11128 */
start_f__GEONW__PON__GAC__BV__03__nodeB(v__nodeB);
current_location.update_lineno(11129);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11129 */
start_f__GEONW__PON__GAC__BV__03__nodeD(v__nodeD);
current_location.update_lineno(11132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11132 */
{
LibCommon__Sync::SyncPointList tmp_532;
tmp_532.set_size(2);
tmp_532[0] = LibCommon__Sync::c__prDone;
tmp_532[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_532);
}
current_location.update_lineno(11135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11135 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GAC__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11142, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_03_nodeB");
current_location.update_lineno(11145);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11145 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(11148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11148 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11149 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11152);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11152 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(11164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11164 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11165 */
{
tmp_533:
alt_status tmp_533_alt_flag_0 = ALT_MAYBE;
alt_status tmp_533_alt_flag_1 = ALT_MAYBE;
alt_status tmp_533_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_533_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11166 */
tmp_533_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_533_alt_flag_0 == ALT_REPEAT) goto tmp_533;
if (tmp_533_alt_flag_0 == ALT_BREAK) break;
if (tmp_533_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11170 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11171);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11171 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_226).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11172);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11172 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_533_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11174 */
tmp_533_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_533_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11175);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11175 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11176 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_533_default_flag == ALT_MAYBE) {
tmp_533_default_flag = TTCN_Default::try_altsteps();
if (tmp_533_default_flag == ALT_YES || tmp_533_default_flag == ALT_BREAK) break;
else if (tmp_533_default_flag == ALT_REPEAT) goto tmp_533;
}
current_location.update_lineno(11165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11165 */
if (tmp_533_alt_flag_0 == ALT_NO && tmp_533_alt_flag_1 == ALT_NO && tmp_533_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11165 and 11178.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11181 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__03__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11188, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_03_nodeD");
current_location.update_lineno(11191);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11191 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(11194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11194 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11195 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11198 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11199 */
{
tmp_534:
alt_status tmp_534_alt_flag_0 = ALT_MAYBE;
alt_status tmp_534_alt_flag_1 = ALT_MAYBE;
alt_status tmp_534_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_534_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11200 */
tmp_534_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)));
if (tmp_534_alt_flag_0 == ALT_REPEAT) goto tmp_534;
if (tmp_534_alt_flag_0 == ALT_BREAK) break;
if (tmp_534_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11204);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11204 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11205 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_226).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11206 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_534_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11208);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11208 */
tmp_534_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_534_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11209 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11210);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11210 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_534_default_flag == ALT_MAYBE) {
tmp_534_default_flag = TTCN_Default::try_altsteps();
if (tmp_534_default_flag == ALT_YES || tmp_534_default_flag == ALT_BREAK) break;
else if (tmp_534_default_flag == ALT_REPEAT) goto tmp_534;
}
current_location.update_lineno(11199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11199 */
if (tmp_534_alt_flag_0 == ALT_NO && tmp_534_alt_flag_1 == ALT_NO && tmp_534_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11199 and 11212.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11215 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__03__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_03_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_03_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11226, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_04");
current_location.update_lineno(11229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11229 */
COMPONENT v__nodeB;
current_location.update_lineno(11230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11230 */
COMPONENT v__nodeC;
current_location.update_lineno(11231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11231 */
COMPONENT v__nodeD;
current_location.update_lineno(11234);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11234 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(11235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11235 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11236 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11237 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11241 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(11246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11246 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11247);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11247 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(11248);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11248 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(11249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11249 */
start_f__GEONW__PON__GAC__BV__04__nodeB(v__nodeB);
current_location.update_lineno(11250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11250 */
start_f__GEONW__PON__GAC__BV__04__nodeC(v__nodeC);
current_location.update_lineno(11251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11251 */
start_f__GEONW__PON__GAC__BV__04__nodeD(v__nodeD);
current_location.update_lineno(11254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11254 */
{
LibCommon__Sync::SyncPointList tmp_538;
tmp_538.set_size(2);
tmp_538[0] = LibCommon__Sync::c__prDone;
tmp_538[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_538);
}
current_location.update_lineno(11257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11257 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GAC__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11264, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_04_nodeB");
current_location.update_lineno(11267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11267 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11270 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11271 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11274);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11274 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(11275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11275 */
{
tmp_539:
alt_status tmp_539_alt_flag_0 = ALT_MAYBE;
alt_status tmp_539_alt_flag_1 = ALT_MAYBE;
alt_status tmp_539_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_539_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11276);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11276 */
tmp_539_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_539_alt_flag_0 == ALT_REPEAT) goto tmp_539;
if (tmp_539_alt_flag_0 == ALT_BREAK) break;
if (tmp_539_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11280 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(11281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11281 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_227).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11282 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_539_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11284 */
tmp_539_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_539_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11285 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_222).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11286 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_539_default_flag == ALT_MAYBE) {
tmp_539_default_flag = TTCN_Default::try_altsteps();
if (tmp_539_default_flag == ALT_YES || tmp_539_default_flag == ALT_BREAK) break;
else if (tmp_539_default_flag == ALT_REPEAT) goto tmp_539;
}
current_location.update_lineno(11275);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11275 */
if (tmp_539_alt_flag_0 == ALT_NO && tmp_539_alt_flag_1 == ALT_NO && tmp_539_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11275 and 11288.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11291 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__04__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11298, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_04_nodeC");
current_location.update_lineno(11301);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11301 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11304 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11305);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11305 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11308);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11308 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(11319);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11319 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11322);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11322 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__04__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_04_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_04_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__04__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11329, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_04_nodeD");
current_location.update_lineno(11332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11332 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11335);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11335 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11336 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11339 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11340 */
{
tmp_540:
alt_status tmp_540_alt_flag_0 = ALT_MAYBE;
alt_status tmp_540_alt_flag_1 = ALT_MAYBE;
alt_status tmp_540_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_540_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11341 */
tmp_540_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_540_alt_flag_0 == ALT_REPEAT) goto tmp_540;
if (tmp_540_alt_flag_0 == ALT_BREAK) break;
if (tmp_540_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11345);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11345 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11346 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_228).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11347);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11347 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_540_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11349 */
tmp_540_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_540_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11350);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11350 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11351);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11351 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_540_default_flag == ALT_MAYBE) {
tmp_540_default_flag = TTCN_Default::try_altsteps();
if (tmp_540_default_flag == ALT_YES || tmp_540_default_flag == ALT_BREAK) break;
else if (tmp_540_default_flag == ALT_REPEAT) goto tmp_540;
}
current_location.update_lineno(11340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11340 */
if (tmp_540_alt_flag_0 == ALT_NO && tmp_540_alt_flag_1 == ALT_NO && tmp_540_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11340 and 11353.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11356 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__04__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_04_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_04_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11367, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_05");
current_location.update_lineno(11370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11370 */
COMPONENT v__nodeB;
current_location.update_lineno(11371);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11371 */
COMPONENT v__nodeC;
current_location.update_lineno(11372);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11372 */
COMPONENT v__nodeD;
current_location.update_lineno(11373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11373 */
INTEGER v__sequenceNumber(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(11376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11376 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(11377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11377 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11378 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11379 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11383 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(11388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11388 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11389 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(11390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11390 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(11391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11391 */
start_f__GEONW__PON__GAC__BO__05__nodeB(v__nodeB);
current_location.update_lineno(11392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11392 */
start_f__GEONW__PON__GAC__BO__05__nodeC(v__nodeC, v__sequenceNumber);
current_location.update_lineno(11393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11393 */
start_f__GEONW__PON__GAC__BO__05__nodeD(v__nodeD, v__sequenceNumber);
current_location.update_lineno(11396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11396 */
{
LibCommon__Sync::SyncPointList tmp_544;
tmp_544.set_size(2);
tmp_544[0] = LibCommon__Sync::c__prDone;
tmp_544[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_544);
}
current_location.update_lineno(11399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11399 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GAC__BO__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11406, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_05_nodeB");
current_location.update_lineno(11409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11409 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11410 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template p__msgInd;
current_location.update_lineno(11411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11411 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd(p__msgInd.valueof());
current_location.update_lineno(11414);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11414 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11415);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11415 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(11416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11416 */
{
tmp_545:
alt_status tmp_545_alt_flag_0 = ALT_MAYBE;
alt_status tmp_545_alt_flag_1 = ALT_MAYBE;
alt_status tmp_545_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_545_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11417 */
tmp_545_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msgInd), any_compref, NULL);
if (tmp_545_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11428 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(11429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11429 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_229).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11430);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11430 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_545_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11432);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11432 */
tmp_545_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_545_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11433 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_230).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11434 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
if (tmp_545_default_flag == ALT_MAYBE) {
tmp_545_default_flag = TTCN_Default::try_altsteps();
if (tmp_545_default_flag == ALT_YES || tmp_545_default_flag == ALT_BREAK) break;
else if (tmp_545_default_flag == ALT_REPEAT) goto tmp_545;
}
current_location.update_lineno(11416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11416 */
if (tmp_545_alt_flag_0 == ALT_NO && tmp_545_alt_flag_1 == ALT_NO && tmp_545_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11416 and 11436.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11439 */
p__msgInd.msgIn().basicHeader().routerHopLimit() = ANY_VALUE;
current_location.update_lineno(11440);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11440 */
v__msgInd = p__msgInd.valueof();
current_location.update_lineno(11441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11441 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11442);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11442 */
{
tmp_548:
alt_status tmp_548_alt_flag_0 = ALT_MAYBE;
alt_status tmp_548_alt_flag_1 = ALT_MAYBE;
alt_status tmp_548_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_548_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11443);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11443 */
tmp_548_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template(v__msgInd), NULL, any_compref, NULL);
if (tmp_548_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11444);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11444 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11445 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_231).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11446 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_548_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11448 */
tmp_548_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_548_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11449 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_232).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11450 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_548_default_flag == ALT_MAYBE) {
tmp_548_default_flag = TTCN_Default::try_altsteps();
if (tmp_548_default_flag == ALT_YES || tmp_548_default_flag == ALT_BREAK) break;
else if (tmp_548_default_flag == ALT_REPEAT) goto tmp_548;
}
current_location.update_lineno(11442);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11442 */
if (tmp_548_alt_flag_0 == ALT_NO && tmp_548_alt_flag_1 == ALT_NO && tmp_548_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11442 and 11452.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11455 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__05__nodeC(const INTEGER& p__sequenceNumber)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11462, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_05_nodeC");
current_location.update_lineno(11465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11465 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11468);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11468 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11469);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11469 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(11482);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11482 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11485 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11486 */
{
tmp_549:
alt_status tmp_549_alt_flag_0 = ALT_MAYBE;
alt_status tmp_549_alt_flag_1 = ALT_MAYBE;
alt_status tmp_549_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_549_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11487);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11487 */
tmp_549_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_549_alt_flag_0 == ALT_REPEAT) goto tmp_549;
if (tmp_549_alt_flag_0 == ALT_BREAK) break;
if (tmp_549_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11491 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11492);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11492 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_233).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11493 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_549_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11495);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11495 */
tmp_549_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_549_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11496);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11496 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11497 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_549_default_flag == ALT_MAYBE) {
tmp_549_default_flag = TTCN_Default::try_altsteps();
if (tmp_549_default_flag == ALT_YES || tmp_549_default_flag == ALT_BREAK) break;
else if (tmp_549_default_flag == ALT_REPEAT) goto tmp_549;
}
current_location.update_lineno(11486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11486 */
if (tmp_549_alt_flag_0 == ALT_NO && tmp_549_alt_flag_1 == ALT_NO && tmp_549_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11486 and 11499.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11502 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__05__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumber)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05_nodeC(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_05_nodeC", text_buf);
p__sequenceNumber.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__05__nodeD(const INTEGER& p__sequenceNumber)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11509, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_05_nodeD");
current_location.update_lineno(11512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11512 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11515 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11516 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11517 */
{
tmp_550:
alt_status tmp_550_alt_flag_0 = ALT_MAYBE;
alt_status tmp_550_alt_flag_1 = ALT_MAYBE;
alt_status tmp_550_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_550_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11518 */
tmp_550_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_550_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11523);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11523 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11524 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_234).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11525);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11525 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_550_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11527);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11527 */
tmp_550_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_550_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11528 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_235).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11529);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11529 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_550_default_flag == ALT_MAYBE) {
tmp_550_default_flag = TTCN_Default::try_altsteps();
if (tmp_550_default_flag == ALT_YES || tmp_550_default_flag == ALT_BREAK) break;
else if (tmp_550_default_flag == ALT_REPEAT) goto tmp_550;
}
current_location.update_lineno(11517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11517 */
if (tmp_550_alt_flag_0 == ALT_NO && tmp_550_alt_flag_1 == ALT_NO && tmp_550_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11517 and 11531.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11535 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(9))));
current_location.update_lineno(11549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11549 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11550 */
{
tmp_551:
alt_status tmp_551_alt_flag_0 = ALT_MAYBE;
alt_status tmp_551_alt_flag_1 = ALT_MAYBE;
alt_status tmp_551_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_551_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11551 */
tmp_551_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_551_alt_flag_0 == ALT_REPEAT) goto tmp_551;
if (tmp_551_alt_flag_0 == ALT_BREAK) break;
if (tmp_551_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11555 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11556 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_233).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11557 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_551_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11559 */
tmp_551_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_551_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11560 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_224).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11561 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_551_default_flag == ALT_MAYBE) {
tmp_551_default_flag = TTCN_Default::try_altsteps();
if (tmp_551_default_flag == ALT_YES || tmp_551_default_flag == ALT_BREAK) break;
else if (tmp_551_default_flag == ALT_REPEAT) goto tmp_551;
}
current_location.update_lineno(11550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11550 */
if (tmp_551_alt_flag_0 == ALT_NO && tmp_551_alt_flag_1 == ALT_NO && tmp_551_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11550 and 11563.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11566);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11566 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__05__nodeD(const COMPONENT& component_reference, const INTEGER& p__sequenceNumber)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05_nodeD(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_05_nodeD", text_buf);
p__sequenceNumber.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11577, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_06");
current_location.update_lineno(11580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11580 */
COMPONENT v__nodeB;
current_location.update_lineno(11581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11581 */
COMPONENT v__nodeC;
current_location.update_lineno(11584);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11584 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(11585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11585 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11586 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11587);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11587 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11591 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(11596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11596 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11597 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(11598);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11598 */
start_f__GEONW__PON__GAC__BV__06__nodeB(v__nodeB);
current_location.update_lineno(11599);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11599 */
start_f__GEONW__PON__GAC__BV__06__nodeC(v__nodeC);
current_location.update_lineno(11602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11602 */
{
LibCommon__Sync::SyncPointList tmp_554;
tmp_554.set_size(2);
tmp_554[0] = LibCommon__Sync::c__prDone;
tmp_554[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_554);
}
current_location.update_lineno(11605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11605 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GAC__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__06__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11612, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_06_nodeB");
current_location.update_lineno(11615);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11615 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11618 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11619);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11619 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11622 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(11623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11623 */
{
tmp_555:
alt_status tmp_555_alt_flag_0 = ALT_MAYBE;
alt_status tmp_555_alt_flag_1 = ALT_MAYBE;
alt_status tmp_555_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_555_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11624 */
tmp_555_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithAreaWithHopLimit_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), INTEGER_template(9), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
if (tmp_555_alt_flag_0 == ALT_REPEAT) goto tmp_555;
if (tmp_555_alt_flag_0 == ALT_BREAK) break;
if (tmp_555_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11630 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(11631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11631 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_236).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11632);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11632 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_555_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11634 */
tmp_555_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_555_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11635 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_237).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11636 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_555_default_flag == ALT_MAYBE) {
tmp_555_default_flag = TTCN_Default::try_altsteps();
if (tmp_555_default_flag == ALT_YES || tmp_555_default_flag == ALT_BREAK) break;
else if (tmp_555_default_flag == ALT_REPEAT) goto tmp_555;
}
current_location.update_lineno(11623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11623 */
if (tmp_555_alt_flag_0 == ALT_NO && tmp_555_alt_flag_1 == ALT_NO && tmp_555_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11623 and 11638.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11641);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11641 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__06__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_06_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_06_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__06__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11648, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_06_nodeC");
current_location.update_lineno(11651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11651 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11652 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msgInd;
current_location.update_lineno(11655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11655 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11656);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11656 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11659 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit))));
current_location.update_lineno(11673);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11673 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11676 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__06__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_06_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_06_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11687, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_07");
current_location.update_lineno(11690);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11690 */
COMPONENT v__nodeB;
current_location.update_lineno(11691);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11691 */
COMPONENT v__nodeC;
current_location.update_lineno(11694);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11694 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(11695);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11695 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11696 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11697 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11701 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(11706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11706 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11707);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11707 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(11708);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11708 */
start_f__GEONW__PON__GAC__BO__07__nodeB(v__nodeB);
current_location.update_lineno(11709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11709 */
start_f__GEONW__PON__GAC__BO__07__nodeC(v__nodeC);
current_location.update_lineno(11712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11712 */
{
LibCommon__Sync::SyncPointList tmp_558;
tmp_558.set_size(2);
tmp_558[0] = LibCommon__Sync::c__prDone;
tmp_558[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_558);
}
current_location.update_lineno(11715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11715 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__PON__GAC__BO__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__07__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11722, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_07_nodeB");
current_location.update_lineno(11725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11725 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11728);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11728 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11729 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11732);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11732 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(11733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11733 */
{
tmp_559:
alt_status tmp_559_alt_flag_0 = ALT_MAYBE;
alt_status tmp_559_alt_flag_1 = ALT_MAYBE;
alt_status tmp_559_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_559_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(11734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11734 */
tmp_559_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_559_alt_flag_0 == ALT_REPEAT) goto tmp_559;
if (tmp_559_alt_flag_0 == ALT_BREAK) break;
if (tmp_559_alt_flag_0 == ALT_YES) {
current_location.update_lineno(11738);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11738 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(11739);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11739 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_226).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11740 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_559_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(11742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11742 */
tmp_559_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_559_alt_flag_1 == ALT_YES) {
current_location.update_lineno(11743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11743 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_232).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11744 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_559_default_flag == ALT_MAYBE) {
tmp_559_default_flag = TTCN_Default::try_altsteps();
if (tmp_559_default_flag == ALT_YES || tmp_559_default_flag == ALT_BREAK) break;
else if (tmp_559_default_flag == ALT_REPEAT) goto tmp_559;
}
current_location.update_lineno(11733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11733 */
if (tmp_559_alt_flag_0 == ALT_NO && tmp_559_alt_flag_1 == ALT_NO && tmp_559_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 11733 and 11746.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(11749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11749 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__07__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_07_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_07_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__07__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11756, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_07_nodeC");
current_location.update_lineno(11759);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11759 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(11762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11762 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11763);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11763 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11766 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1))));
current_location.update_lineno(11779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11779 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11782 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__07__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_07_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_07_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11791, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_08");
current_location.update_lineno(11794);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11794 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(11795);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11795 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(11796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11796 */
INTEGER i;
current_location.update_lineno(11797);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11797 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(11800);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11800 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__DST))) {
current_location.update_lineno(11801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11801 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_53).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11802 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11803 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11807);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11807 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(11808);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11808 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11813 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11814 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11817 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(11823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11823 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(11825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11825 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(11827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11827 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_563;
tmp_563 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_563.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_563);
}
current_location.update_lineno(11828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11828 */
i = 0;
current_location.update_lineno(11828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11828 */
for ( ; ; ) {
current_location.update_lineno(11828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11828 */
{
boolean tmp_565;
tmp_565 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_565) tmp_565 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_565) break;
}
current_location.update_lineno(11828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11828 */
{
INTEGER tmp_566;
++i;
}
}
current_location.update_lineno(11831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11831 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(11832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11832 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11833 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(11836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11836 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_155).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11837);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11837 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(11840);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11840 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_238).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11841);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11841 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11844 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(11845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11845 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GAC__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__09()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11854, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_09");
current_location.update_lineno(11857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11857 */
COMPONENT v__nodeB;
current_location.update_lineno(11858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11858 */
COMPONENT v__nodeD;
current_location.update_lineno(11859);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11859 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(11862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11862 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__DST))) {
current_location.update_lineno(11863);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11863 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_53).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11864 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11865);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11865 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11869 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11874);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11874 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(11875);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11875 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(11876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11876 */
start_f__GEONW__PON__GAC__BO__09__nodeB(v__nodeB);
current_location.update_lineno(11877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11877 */
start_f__GEONW__PON__GAC__BO__09__nodeD(v__nodeD);
current_location.update_lineno(11880);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11880 */
{
LibCommon__Sync::SyncPointList tmp_569;
tmp_569.set_size(2);
tmp_569[0] = LibCommon__Sync::c__prDone;
tmp_569[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_569);
}
current_location.update_lineno(11883);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11883 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GAC__BO__09(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_09(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_09", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__09__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11890, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_09_nodeB");
current_location.update_lineno(11893);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11893 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(11894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11894 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(11895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11895 */
INTEGER i;
current_location.update_lineno(11896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11896 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(11899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11899 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11901);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11901 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(11903);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11903 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeD), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(11911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11911 */
{
LibItsGeoNetworking__TypesAndValues::Payload_template tmp_572;
tmp_572 = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template&>(v__gnPacket).gnPacket().packet().payload();
tmp_572.check_restriction(TR_VALUE, NULL, TRUE);
v__sentRawPayload = LibItsGeoNetworking__Templates::f__adaptPayloadForUtInd__m(tmp_572);
}
current_location.update_lineno(11912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11912 */
i = 0;
current_location.update_lineno(11912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11912 */
for ( ; ; ) {
current_location.update_lineno(11912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11912 */
{
boolean tmp_574;
tmp_574 = (i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof());
if (tmp_574) tmp_574 = (!(OCTETSTRING_template(v__sentRawPayload).match(const_cast< const LibItsGeoNetworking__TypesAndValues::UtGnEventIndList&>(LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds)[i].rawPayload(), TRUE)));
if (!tmp_574) break;
}
current_location.update_lineno(11912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11912 */
{
INTEGER tmp_575;
++i;
}
}
current_location.update_lineno(11915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11915 */
if ((i < LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(11916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11916 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_5).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11917 */
LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds = NULL_VALUE;
current_location.update_lineno(11918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11918 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(11921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11921 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_6).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11922 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
current_location.update_lineno(11926);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11926 */
{
INTEGER_template tmp_577;
tmp_577 = (v__gnPacket.basicHeader().routerHopLimit().valueof() / 2);
v__gnPacket.basicHeader().routerHopLimit() = tmp_577;
}
current_location.update_lineno(11927);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11927 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(11929);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11929 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(11931);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11931 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(11932);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11932 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11933);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11933 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(11936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11936 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_193).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11937 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(11941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11941 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__09__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_09_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_09_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__09__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11948, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_09_nodeD");
current_location.update_lineno(11951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11951 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(11952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11952 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(11953);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11953 */
INTEGER i;
current_location.update_lineno(11956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11956 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(11957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11957 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeD), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
current_location.update_lineno(11965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11965 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(11967);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11967 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11970 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(11973);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11973 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__09__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_09_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_09_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 11982, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_10");
current_location.update_lineno(11985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11985 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(11986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11986 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(11987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11987 */
INTEGER i;
current_location.update_lineno(11988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11988 */
OCTETSTRING v__sentRawPayload;
current_location.update_lineno(11991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11991 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__DST))) {
current_location.update_lineno(11992);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11992 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_53).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(11993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11993 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(11994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11994 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(11998);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11998 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(11999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 11999 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12004 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12005 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12008);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12008 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(12014);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12014 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(12016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12016 */
LibCommon__Time::f__sleep(LibCommon__Time::PX__TAC);
current_location.update_lineno(12018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12018 */
if ((0 != LibItsGeoNetworking__TestSystem::ItsBaseGeoNetworking_component_vc__utInds.lengthof())) {
current_location.update_lineno(12019);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12019 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_7).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12020 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(12023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12023 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_193).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12024);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12024 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
current_location.update_lineno(12028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12028 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(12029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12029 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__PON__GAC__BV__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__11()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12038, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_11");
current_location.update_lineno(12041);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12041 */
COMPONENT v__nodeB;
current_location.update_lineno(12042);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12042 */
COMPONENT v__nodeC;
current_location.update_lineno(12043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12043 */
COMPONENT v__nodeD;
current_location.update_lineno(12044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12044 */
INTEGER v__distanceTooBig;
current_location.update_lineno(12047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12047 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__FWD))) {
current_location.update_lineno(12048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12048 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_225).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12049 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12050 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12054);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12054 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(12055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12055 */
v__distanceTooBig = float2int((1.1 * LibItsGeoNetworking__Functions::f__radiusFromCircularArea((LibItsGeoNetworking__Functions::f__getGnMaxAreaSize() * LibItsGeoNetworking__TypesAndValues::c__squareKm))));
current_location.update_lineno(12060);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12060 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12061);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12061 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(12062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12062 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12063 */
start_f__GEONW__PON__GAC__BO__11__nodeB(v__nodeB, v__distanceTooBig);
current_location.update_lineno(12064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12064 */
start_f__GEONW__PON__GAC__BO__11__nodeC(v__nodeC, v__distanceTooBig);
current_location.update_lineno(12065);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12065 */
start_f__GEONW__PON__GAC__BO__11__nodeD(v__nodeD, v__distanceTooBig);
current_location.update_lineno(12068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12068 */
{
LibCommon__Sync::SyncPointList tmp_585;
tmp_585.set_size(2);
tmp_585[0] = LibCommon__Sync::c__prDone;
tmp_585[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_585);
}
current_location.update_lineno(12071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12071 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__GAC__BO__11(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_11", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__11__nodeB(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12078, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_11_nodeB");
current_location.update_lineno(12081);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12081 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12082 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(12085);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12085 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12086 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__computePosition(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), 1000, 0), p__distanceTooBig);
current_location.update_lineno(12090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12090 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12093);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12093 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12094);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12094 */
{
tmp_587:
alt_status tmp_587_alt_flag_0 = ALT_MAYBE;
alt_status tmp_587_alt_flag_1 = ALT_MAYBE;
alt_status tmp_587_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_587_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12095);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12095 */
tmp_587_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoAnycastArea(v__areaTooBig))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_587_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12100 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12101 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_239).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12102 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_587_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12104 */
tmp_587_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_587_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12105 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_240).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12106);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12106 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_587_default_flag == ALT_MAYBE) {
tmp_587_default_flag = TTCN_Default::try_altsteps();
if (tmp_587_default_flag == ALT_YES || tmp_587_default_flag == ALT_BREAK) break;
else if (tmp_587_default_flag == ALT_REPEAT) goto tmp_587;
}
current_location.update_lineno(12094);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12094 */
if (tmp_587_alt_flag_0 == ALT_NO && tmp_587_alt_flag_1 == ALT_NO && tmp_587_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12094 and 12108.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12111 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__11__nodeB(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeB(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_11_nodeB", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__11__nodeC(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12118, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_11_nodeC");
current_location.update_lineno(12121);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12121 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12122);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12122 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(12125);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12125 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12126);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12126 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__computePosition(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), 1000, 0), p__distanceTooBig);
current_location.update_lineno(12130);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12130 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwAnycastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoAnycastArea(v__areaTooBig)), LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwAnycastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12141);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12141 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12147);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12147 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__11__nodeC(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeC(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_11_nodeC", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BO__11__nodeD(const INTEGER& p__distanceTooBig)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12154, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BO_11_nodeD");
current_location.update_lineno(12157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12157 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12158);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12158 */
LibItsGeoNetworking__TypesAndValues::GeoArea v__areaTooBig;
current_location.update_lineno(12161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12161 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12162 */
v__areaTooBig = LibItsGeoNetworking__Functions::f__computeCircularArea(LibItsGeoNetworking__Functions::f__computePosition(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB), 1000, 0), p__distanceTooBig);
current_location.update_lineno(12166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12166 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12169 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12170 */
{
tmp_590:
alt_status tmp_590_alt_flag_0 = ALT_MAYBE;
alt_status tmp_590_alt_flag_1 = ALT_MAYBE;
alt_status tmp_590_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_590_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12171);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12171 */
tmp_590_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwAnycastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__geoArea2GeoAnycastArea(v__areaTooBig))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_590_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12176 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12177);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12177 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_239).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12178 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_590_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12180);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12180 */
tmp_590_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_590_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12181);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12181 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_240).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12182 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_590_default_flag == ALT_MAYBE) {
tmp_590_default_flag = TTCN_Default::try_altsteps();
if (tmp_590_default_flag == ALT_YES || tmp_590_default_flag == ALT_BREAK) break;
else if (tmp_590_default_flag == ALT_REPEAT) goto tmp_590;
}
current_location.update_lineno(12170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12170 */
if (tmp_590_alt_flag_0 == ALT_NO && tmp_590_alt_flag_1 == ALT_NO && tmp_590_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12170 and 12184.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12187 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BO__11__nodeD(const COMPONENT& component_reference, const INTEGER& p__distanceTooBig)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeD(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BO_11_nodeD", text_buf);
p__distanceTooBig.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__13()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12198, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_13");
current_location.update_lineno(12201);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12201 */
COMPONENT v__nodeB;
current_location.update_lineno(12202);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12202 */
COMPONENT v__nodeD;
current_location.update_lineno(12205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12205 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GAC__SRC))) {
current_location.update_lineno(12206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12206 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_31).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12207);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12207 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12208);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12208 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12210);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12210 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(12211);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12211 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_196).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12212);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12212 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12213);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12213 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12217);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12217 */
LibItsGeoNetworking__Functions::f__cf02Up(LibItsGeoNetworking__Functions::f__cf02Up_p__mainUtComponent_defval);
current_location.update_lineno(12222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12222 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12223);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12223 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12224);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12224 */
start_f__GEONW__PON__GAC__BV__13__nodeB(v__nodeB);
current_location.update_lineno(12225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12225 */
start_f__GEONW__PON__GAC__BV__13__nodeD(v__nodeD);
current_location.update_lineno(12228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12228 */
{
LibCommon__Sync::SyncPointList tmp_593;
tmp_593.set_size(2);
tmp_593[0] = LibCommon__Sync::c__prDone;
tmp_593[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_593);
}
current_location.update_lineno(12231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12231 */
LibItsGeoNetworking__Functions::f__cf02Down();
}

void start_f__GEONW__PON__GAC__BV__13(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_13(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_13", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__13__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12238, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_13_nodeB");
current_location.update_lineno(12241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12241 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(12244);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12244 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12245);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12245 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12248);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12248 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoAnycastMessage(LibItsGeoNetworking__Functions::f__getArea(LibItsGeoNetworking__TypesAndValues::c__area2)))))) {
current_location.update_lineno(12249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12249 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12250 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(12253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12253 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12254 */
{
tmp_594:
alt_status tmp_594_alt_flag_0 = ALT_MAYBE;
alt_status tmp_594_alt_flag_1 = ALT_MAYBE;
alt_status tmp_594_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_594_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12255 */
tmp_594_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_594_alt_flag_0 == ALT_REPEAT) goto tmp_594;
if (tmp_594_alt_flag_0 == ALT_BREAK) break;
if (tmp_594_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12259 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12260);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12260 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_221).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12261);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12261 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_594_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12263 */
tmp_594_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_594_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12264 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_222).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12265 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_594_default_flag == ALT_MAYBE) {
tmp_594_default_flag = TTCN_Default::try_altsteps();
if (tmp_594_default_flag == ALT_YES || tmp_594_default_flag == ALT_BREAK) break;
else if (tmp_594_default_flag == ALT_REPEAT) goto tmp_594;
}
current_location.update_lineno(12254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12254 */
if (tmp_594_alt_flag_0 == ALT_NO && tmp_594_alt_flag_1 == ALT_NO && tmp_594_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12254 and 12267.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12270);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12270 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__13__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_13_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_13_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__GAC__BV__13__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12277, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_GAC_BV_13_nodeD");
current_location.update_lineno(12280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12280 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(12283);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12283 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12284);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12284 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12287);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12287 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12288 */
{
tmp_595:
alt_status tmp_595_alt_flag_0 = ALT_MAYBE;
alt_status tmp_595_alt_flag_1 = ALT_MAYBE;
alt_status tmp_595_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_595_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12289 */
tmp_595_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoAnycastWithArea_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorIut)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template(LibItsGeoNetworking__Functions::f__getGeoAnycastArea(LibItsGeoNetworking__TypesAndValues::c__area2)));
if (tmp_595_alt_flag_0 == ALT_REPEAT) goto tmp_595;
if (tmp_595_alt_flag_0 == ALT_BREAK) break;
if (tmp_595_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12293 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12294 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_241).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12295 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_595_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12297);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12297 */
tmp_595_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_595_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12298 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_242).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12299 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_595_default_flag == ALT_MAYBE) {
tmp_595_default_flag = TTCN_Default::try_altsteps();
if (tmp_595_default_flag == ALT_YES || tmp_595_default_flag == ALT_BREAK) break;
else if (tmp_595_default_flag == ALT_REPEAT) goto tmp_595;
}
current_location.update_lineno(12288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12288 */
if (tmp_595_alt_flag_0 == ALT_NO && tmp_595_alt_flag_1 == ALT_NO && tmp_595_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12288 and 12301.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12304 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__GAC__BV__13__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BV_13_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_GAC_BV_13_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12320, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_01");
current_location.update_lineno(12323);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12323 */
COMPONENT v__nodeB;
current_location.update_lineno(12324);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12324 */
COMPONENT v__nodeC;
current_location.update_lineno(12325);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12325 */
COMPONENT v__nodeD;
current_location.update_lineno(12326);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12326 */
INTEGER v__sequenceNumberC(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(12329);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12329 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(12330);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12330 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12331 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12332 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12334 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(12335);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12335 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12336 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12337 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12340 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(12341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12341 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12342 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12343 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12347);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12347 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(12352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12352 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12353);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12353 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(12354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12354 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12355 */
start_f__GEONW__PON__BCA__BV__01__nodeB(v__nodeB);
current_location.update_lineno(12356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12356 */
start_f__GEONW__PON__BCA__BV__01__nodeC(v__nodeC, v__sequenceNumberC);
current_location.update_lineno(12357);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12357 */
start_f__GEONW__PON__BCA__BV__01__nodeD(v__nodeD, v__sequenceNumberC);
current_location.update_lineno(12360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12360 */
{
LibCommon__Sync::SyncPointList tmp_599;
tmp_599.set_size(2);
tmp_599[0] = LibCommon__Sync::c__prDone;
tmp_599[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_599);
}
current_location.update_lineno(12363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12363 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12370, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_01_nodeB");
current_location.update_lineno(12373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12373 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12376 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12377 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12380);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12380 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12381 */
{
tmp_600:
alt_status tmp_600_alt_flag_0 = ALT_MAYBE;
alt_status tmp_600_alt_flag_1 = ALT_MAYBE;
alt_status tmp_600_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_600_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12382);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12382 */
tmp_600_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_600_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12387);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12387 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12388 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12389 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_600_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12391 */
tmp_600_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_600_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12392 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12393 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_600_default_flag == ALT_MAYBE) {
tmp_600_default_flag = TTCN_Default::try_altsteps();
if (tmp_600_default_flag == ALT_YES || tmp_600_default_flag == ALT_BREAK) break;
else if (tmp_600_default_flag == ALT_REPEAT) goto tmp_600;
}
current_location.update_lineno(12381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12381 */
if (tmp_600_alt_flag_0 == ALT_NO && tmp_600_alt_flag_1 == ALT_NO && tmp_600_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12381 and 12395.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12398);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12398 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__01__nodeC(const INTEGER& p__sequenceNumberC)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12405, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_01_nodeC");
current_location.update_lineno(12408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12408 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12411 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12412 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumberC), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12423 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12426 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12427 */
{
tmp_601:
alt_status tmp_601_alt_flag_0 = ALT_MAYBE;
alt_status tmp_601_alt_flag_1 = ALT_MAYBE;
alt_status tmp_601_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_601_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12428 */
tmp_601_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_601_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12433);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12433 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12434 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12435);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12435 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_601_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12437);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12437 */
tmp_601_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_601_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12438);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12438 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12439 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_601_default_flag == ALT_MAYBE) {
tmp_601_default_flag = TTCN_Default::try_altsteps();
if (tmp_601_default_flag == ALT_YES || tmp_601_default_flag == ALT_BREAK) break;
else if (tmp_601_default_flag == ALT_REPEAT) goto tmp_601;
}
current_location.update_lineno(12427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12427 */
if (tmp_601_alt_flag_0 == ALT_NO && tmp_601_alt_flag_1 == ALT_NO && tmp_601_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12427 and 12441.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12444);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12444 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__01__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_01_nodeC", text_buf);
p__sequenceNumberC.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__01__nodeD(const INTEGER& p__sequenceNumberC)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12451, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_01_nodeD");
current_location.update_lineno(12454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12454 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12457);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12457 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12458);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12458 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12461 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(p__sequenceNumberC), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12473 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12474 */
{
tmp_602:
alt_status tmp_602_alt_flag_0 = ALT_MAYBE;
alt_status tmp_602_alt_flag_1 = ALT_MAYBE;
alt_status tmp_602_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_602_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12475 */
tmp_602_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_602_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12480 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12481 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_178).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12482);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12482 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_602_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12484);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12484 */
tmp_602_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_602_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12485 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_179).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12486 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_602_default_flag == ALT_MAYBE) {
tmp_602_default_flag = TTCN_Default::try_altsteps();
if (tmp_602_default_flag == ALT_YES || tmp_602_default_flag == ALT_BREAK) break;
else if (tmp_602_default_flag == ALT_REPEAT) goto tmp_602;
}
current_location.update_lineno(12474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12474 */
if (tmp_602_alt_flag_0 == ALT_NO && tmp_602_alt_flag_1 == ALT_NO && tmp_602_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12474 and 12488.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12491 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__01__nodeD(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01_nodeD(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_01_nodeD", text_buf);
p__sequenceNumberC.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12502, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_02");
current_location.update_lineno(12505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12505 */
COMPONENT v__nodeB;
current_location.update_lineno(12506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12506 */
COMPONENT v__nodeC;
current_location.update_lineno(12507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12507 */
COMPONENT v__nodeD;
current_location.update_lineno(12510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12510 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(12511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12511 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12512 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12513 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12515 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(12516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12516 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12517 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12518);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12518 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12521 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(12522);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12522 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12523);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12523 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12524 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12528 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(12533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12533 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12534 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(12535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12535 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12536);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12536 */
start_f__GEONW__PON__BCA__BV__02__nodeB(v__nodeB);
current_location.update_lineno(12537);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12537 */
start_f__GEONW__PON__BCA__BV__02__nodeC(v__nodeC);
current_location.update_lineno(12538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12538 */
start_f__GEONW__PON__BCA__BV__02__nodeD(v__nodeD);
current_location.update_lineno(12541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12541 */
{
LibCommon__Sync::SyncPointList tmp_606;
tmp_606.set_size(2);
tmp_606[0] = LibCommon__Sync::c__prDone;
tmp_606[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_606);
}
current_location.update_lineno(12544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12544 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12551, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_02_nodeB");
current_location.update_lineno(12554);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12554 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12557 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12558);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12558 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12561 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12562 */
{
tmp_607:
alt_status tmp_607_alt_flag_0 = ALT_MAYBE;
alt_status tmp_607_alt_flag_1 = ALT_MAYBE;
alt_status tmp_607_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_607_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12563);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12563 */
tmp_607_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_607_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12568 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12569 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12570);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12570 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_607_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12572 */
tmp_607_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_607_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12573);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12573 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12574);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12574 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_607_default_flag == ALT_MAYBE) {
tmp_607_default_flag = TTCN_Default::try_altsteps();
if (tmp_607_default_flag == ALT_YES || tmp_607_default_flag == ALT_BREAK) break;
else if (tmp_607_default_flag == ALT_REPEAT) goto tmp_607;
}
current_location.update_lineno(12562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12562 */
if (tmp_607_alt_flag_0 == ALT_NO && tmp_607_alt_flag_1 == ALT_NO && tmp_607_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12562 and 12576.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12579 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__02__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12586, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_02_nodeC");
current_location.update_lineno(12589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12589 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12590 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(12591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12591 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * LibItsGeoNetworking__Functions::f__distance(v__longPosVectorNodeC, v__longPosVectorIut))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(12598);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12598 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12599);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12599 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12602 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12614);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12614 */
t__toCbf.start();
current_location.update_lineno(12615);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12615 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12616 */
{
tmp_608:
alt_status tmp_608_alt_flag_0 = ALT_MAYBE;
alt_status tmp_608_alt_flag_1 = ALT_MAYBE;
alt_status tmp_608_alt_flag_2 = ALT_MAYBE;
alt_status tmp_608_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_608_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12617 */
tmp_608_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_608_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12622 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12624 */
if (t__toCbf.running()) {
current_location.update_lineno(12625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12625 */
t__toCbf.stop();
current_location.update_lineno(12626);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12626 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12627);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12627 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(12630);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12630 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12631 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_608_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12634);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12634 */
tmp_608_alt_flag_1 = t__toCbf.timeout();
if (tmp_608_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12635 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12636 */
goto tmp_608;
}
}
if (tmp_608_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(12638);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12638 */
tmp_608_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_608_alt_flag_2 == ALT_YES) {
current_location.update_lineno(12639);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12639 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12640 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_608_default_flag == ALT_MAYBE) {
tmp_608_default_flag = TTCN_Default::try_altsteps();
if (tmp_608_default_flag == ALT_YES || tmp_608_default_flag == ALT_BREAK) break;
else if (tmp_608_default_flag == ALT_REPEAT) goto tmp_608;
}
current_location.update_lineno(12616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12616 */
if (tmp_608_alt_flag_0 == ALT_NO && tmp_608_alt_flag_1 == ALT_NO && tmp_608_alt_flag_2 == ALT_NO && tmp_608_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12616 and 12642.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12645 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__02__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_02_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_02_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__02__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12652, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_02_nodeD");
current_location.update_lineno(12655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12655 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12658 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12659 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12662);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12662 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12663 */
{
tmp_609:
alt_status tmp_609_alt_flag_0 = ALT_MAYBE;
alt_status tmp_609_alt_flag_1 = ALT_MAYBE;
alt_status tmp_609_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_609_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12664);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12664 */
tmp_609_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_609_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12669 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12670 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12671 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_609_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12673);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12673 */
tmp_609_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_609_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12674 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12675 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_609_default_flag == ALT_MAYBE) {
tmp_609_default_flag = TTCN_Default::try_altsteps();
if (tmp_609_default_flag == ALT_YES || tmp_609_default_flag == ALT_BREAK) break;
else if (tmp_609_default_flag == ALT_REPEAT) goto tmp_609;
}
current_location.update_lineno(12663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12663 */
if (tmp_609_alt_flag_0 == ALT_NO && tmp_609_alt_flag_1 == ALT_NO && tmp_609_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12663 and 12677.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12680 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__02__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_02_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_02_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12691, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_03");
current_location.update_lineno(12694);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12694 */
COMPONENT v__nodeB;
current_location.update_lineno(12695);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12695 */
COMPONENT v__nodeC;
current_location.update_lineno(12696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12696 */
COMPONENT v__nodeD;
current_location.update_lineno(12699);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12699 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(12700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12700 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12701 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12702 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12704 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(12705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12705 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12706 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12707);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12707 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12710 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(12711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12711 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12712 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12713);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12713 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12717);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12717 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(12722);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12722 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12723 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(12724);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12724 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12725 */
start_f__GEONW__PON__BCA__BV__03__nodeB(v__nodeB);
current_location.update_lineno(12726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12726 */
start_f__GEONW__PON__BCA__BV__03__nodeC(v__nodeC);
current_location.update_lineno(12727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12727 */
start_f__GEONW__PON__BCA__BV__03__nodeD(v__nodeD);
current_location.update_lineno(12730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12730 */
{
LibCommon__Sync::SyncPointList tmp_613;
tmp_613.set_size(2);
tmp_613[0] = LibCommon__Sync::c__prDone;
tmp_613[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_613);
}
current_location.update_lineno(12733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12733 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12740, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_03_nodeB");
current_location.update_lineno(12743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12743 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12744);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12744 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__LongPosVectorB;
current_location.update_lineno(12747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12747 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12748);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12748 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12749 */
v__LongPosVectorB.gnAddr() = LibItsGeoNetworking__Functions::f__getTsGnLocalAddress(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12752 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(12753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12753 */
{
tmp_615:
alt_status tmp_615_alt_flag_0 = ALT_MAYBE;
alt_status tmp_615_alt_flag_1 = ALT_MAYBE;
alt_status tmp_615_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_615_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12754 */
tmp_615_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd__withLinkLayerDestination(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__LongPosVectorB).gnAddr().mid())), NULL, any_compref, NULL);
if (tmp_615_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12761 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(12762);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12762 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_250).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12763);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12763 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_615_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12765);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12765 */
tmp_615_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_615_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12766 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_251).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12767);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12767 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_615_default_flag == ALT_MAYBE) {
tmp_615_default_flag = TTCN_Default::try_altsteps();
if (tmp_615_default_flag == ALT_YES || tmp_615_default_flag == ALT_BREAK) break;
else if (tmp_615_default_flag == ALT_REPEAT) goto tmp_615;
}
current_location.update_lineno(12753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12753 */
if (tmp_615_alt_flag_0 == ALT_NO && tmp_615_alt_flag_1 == ALT_NO && tmp_615_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12753 and 12769.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12772);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12772 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__03__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12779, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_03_nodeC");
current_location.update_lineno(12782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12782 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(12785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12785 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12786 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12789 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12801 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12802 */
{
tmp_616:
alt_status tmp_616_alt_flag_0 = ALT_MAYBE;
alt_status tmp_616_alt_flag_1 = ALT_MAYBE;
alt_status tmp_616_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_616_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12803 */
tmp_616_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_616_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12804);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12804 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12805);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12805 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_252).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12806 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_616_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12808);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12808 */
tmp_616_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_616_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12809 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_253).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12810);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12810 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_616_default_flag == ALT_MAYBE) {
tmp_616_default_flag = TTCN_Default::try_altsteps();
if (tmp_616_default_flag == ALT_YES || tmp_616_default_flag == ALT_BREAK) break;
else if (tmp_616_default_flag == ALT_REPEAT) goto tmp_616;
}
current_location.update_lineno(12802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12802 */
if (tmp_616_alt_flag_0 == ALT_NO && tmp_616_alt_flag_1 == ALT_NO && tmp_616_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12802 and 12812.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12815);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12815 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__03__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_03_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_03_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__03__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12822, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_03_nodeD");
current_location.update_lineno(12827);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12827 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12828 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12831);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12831 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12832 */
{
tmp_617:
alt_status tmp_617_alt_flag_0 = ALT_MAYBE;
alt_status tmp_617_alt_flag_1 = ALT_MAYBE;
alt_status tmp_617_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_617_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12833);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12833 */
tmp_617_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_617_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12834);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12834 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12835);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12835 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_252).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12836);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12836 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_617_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12838);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12838 */
tmp_617_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_617_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12839);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12839 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_253).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12840);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12840 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_617_default_flag == ALT_MAYBE) {
tmp_617_default_flag = TTCN_Default::try_altsteps();
if (tmp_617_default_flag == ALT_YES || tmp_617_default_flag == ALT_BREAK) break;
else if (tmp_617_default_flag == ALT_REPEAT) goto tmp_617;
}
current_location.update_lineno(12832);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12832 */
if (tmp_617_alt_flag_0 == ALT_NO && tmp_617_alt_flag_1 == ALT_NO && tmp_617_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12832 and 12842.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12845 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__03__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_03_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_03_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BO__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12856, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BO_04");
current_location.update_lineno(12859);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12859 */
COMPONENT v__nodeB;
current_location.update_lineno(12860);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12860 */
COMPONENT v__nodeC;
current_location.update_lineno(12861);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12861 */
COMPONENT v__nodeD;
current_location.update_lineno(12864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12864 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(12865);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12865 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12866);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12866 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12867 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12869 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(12870);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12870 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12871);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12871 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12872);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12872 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12875);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12875 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(12876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12876 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12877 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(12878);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12878 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(12882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12882 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(12887);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12887 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(12888);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12888 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(12889);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12889 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(12890);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12890 */
start_f__GEONW__PON__BCA__BO__04__nodeB(v__nodeB);
current_location.update_lineno(12891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12891 */
start_f__GEONW__PON__BCA__BO__04__nodeC(v__nodeC);
current_location.update_lineno(12892);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12892 */
start_f__GEONW__PON__BCA__BO__04__nodeD(v__nodeD);
current_location.update_lineno(12895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12895 */
{
LibCommon__Sync::SyncPointList tmp_621;
tmp_621.set_size(2);
tmp_621[0] = LibCommon__Sync::c__prDone;
tmp_621[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_621);
}
current_location.update_lineno(12898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12898 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BO__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BO_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BO_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BO__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12905, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BO_04_nodeB");
current_location.update_lineno(12910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12910 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12911 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12914);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12914 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12915 */
{
tmp_622:
alt_status tmp_622_alt_flag_0 = ALT_MAYBE;
alt_status tmp_622_alt_flag_1 = ALT_MAYBE;
alt_status tmp_622_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_622_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12916 */
tmp_622_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_622_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12917 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12918 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_254).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12919 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_622_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12921);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12921 */
tmp_622_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_622_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12922);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12922 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_255).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12923);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12923 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_622_default_flag == ALT_MAYBE) {
tmp_622_default_flag = TTCN_Default::try_altsteps();
if (tmp_622_default_flag == ALT_YES || tmp_622_default_flag == ALT_BREAK) break;
else if (tmp_622_default_flag == ALT_REPEAT) goto tmp_622;
}
current_location.update_lineno(12915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12915 */
if (tmp_622_alt_flag_0 == ALT_NO && tmp_622_alt_flag_1 == ALT_NO && tmp_622_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12915 and 12925.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12928);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12928 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BO__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BO_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BO_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BO__04__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12935, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BO_04_nodeC");
current_location.update_lineno(12940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12940 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12941 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12944);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12944 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12945 */
{
tmp_623:
alt_status tmp_623_alt_flag_0 = ALT_MAYBE;
alt_status tmp_623_alt_flag_1 = ALT_MAYBE;
alt_status tmp_623_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_623_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12946);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12946 */
tmp_623_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_623_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12947);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12947 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12948);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12948 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_254).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12949 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_623_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12951 */
tmp_623_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_623_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12952 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_255).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12953);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12953 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_623_default_flag == ALT_MAYBE) {
tmp_623_default_flag = TTCN_Default::try_altsteps();
if (tmp_623_default_flag == ALT_YES || tmp_623_default_flag == ALT_BREAK) break;
else if (tmp_623_default_flag == ALT_REPEAT) goto tmp_623;
}
current_location.update_lineno(12945);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12945 */
if (tmp_623_alt_flag_0 == ALT_NO && tmp_623_alt_flag_1 == ALT_NO && tmp_623_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12945 and 12955.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(12958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12958 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BO__04__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BO_04_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BO_04_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BO__04__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 12965, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BO_04_nodeD");
current_location.update_lineno(12968);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12968 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(12971);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12971 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(12972);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12972 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(12975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12975 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeD), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(12987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12987 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(12988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12988 */
{
tmp_624:
alt_status tmp_624_alt_flag_0 = ALT_MAYBE;
alt_status tmp_624_alt_flag_1 = ALT_MAYBE;
alt_status tmp_624_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_624_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(12989);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12989 */
tmp_624_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_624_alt_flag_0 == ALT_YES) {
current_location.update_lineno(12990);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12990 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(12991);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12991 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_254).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12992);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12992 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_624_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(12994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12994 */
tmp_624_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_624_alt_flag_1 == ALT_YES) {
current_location.update_lineno(12995);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12995 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_255).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(12996);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12996 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_624_default_flag == ALT_MAYBE) {
tmp_624_default_flag = TTCN_Default::try_altsteps();
if (tmp_624_default_flag == ALT_YES || tmp_624_default_flag == ALT_BREAK) break;
else if (tmp_624_default_flag == ALT_REPEAT) goto tmp_624;
}
current_location.update_lineno(12988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 12988 */
if (tmp_624_alt_flag_0 == ALT_NO && tmp_624_alt_flag_1 == ALT_NO && tmp_624_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 12988 and 12998.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13001 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BO__04__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BO_04_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BO_04_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13012, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_05");
current_location.update_lineno(13015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13015 */
COMPONENT v__nodeB;
current_location.update_lineno(13016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13016 */
COMPONENT v__nodeC;
current_location.update_lineno(13017);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13017 */
COMPONENT v__nodeD;
current_location.update_lineno(13020);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13020 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13021);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13021 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13022 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13023 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13025);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13025 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(13026);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13026 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13027 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13028 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13031 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13032 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13033);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13033 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13034);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13034 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13038 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(13043);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13043 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13044);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13044 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(13045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13045 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(13046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13046 */
start_f__GEONW__PON__BCA__BV__05__nodeB(v__nodeB);
current_location.update_lineno(13047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13047 */
start_f__GEONW__PON__BCA__BV__05__nodeC(v__nodeC);
current_location.update_lineno(13048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13048 */
start_f__GEONW__PON__BCA__BV__05__nodeD(v__nodeD);
current_location.update_lineno(13051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13051 */
{
LibCommon__Sync::SyncPointList tmp_628;
tmp_628.set_size(2);
tmp_628[0] = LibCommon__Sync::c__prDone;
tmp_628[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_628);
}
current_location.update_lineno(13054);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13054 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13061, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_05_nodeB");
current_location.update_lineno(13064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13064 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13067 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13068 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13071);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13071 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13072 */
{
tmp_629:
alt_status tmp_629_alt_flag_0 = ALT_MAYBE;
alt_status tmp_629_alt_flag_1 = ALT_MAYBE;
alt_status tmp_629_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_629_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13073 */
tmp_629_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_629_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13078);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13078 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13079);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13079 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13080 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_629_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13082);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13082 */
tmp_629_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_629_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13083);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13083 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13084);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13084 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_629_default_flag == ALT_MAYBE) {
tmp_629_default_flag = TTCN_Default::try_altsteps();
if (tmp_629_default_flag == ALT_YES || tmp_629_default_flag == ALT_BREAK) break;
else if (tmp_629_default_flag == ALT_REPEAT) goto tmp_629;
}
current_location.update_lineno(13072);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13072 */
if (tmp_629_alt_flag_0 == ALT_NO && tmp_629_alt_flag_1 == ALT_NO && tmp_629_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13072 and 13086.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13089 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__05__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13096, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_05_nodeC");
current_location.update_lineno(13099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13099 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13102 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13103);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13103 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13106);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13106 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13107 */
{
tmp_630:
alt_status tmp_630_alt_flag_0 = ALT_MAYBE;
alt_status tmp_630_alt_flag_1 = ALT_MAYBE;
alt_status tmp_630_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_630_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13108 */
tmp_630_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_630_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13113 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13114 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13115);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13115 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_630_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13117);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13117 */
tmp_630_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_630_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13118 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13119);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13119 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_630_default_flag == ALT_MAYBE) {
tmp_630_default_flag = TTCN_Default::try_altsteps();
if (tmp_630_default_flag == ALT_YES || tmp_630_default_flag == ALT_BREAK) break;
else if (tmp_630_default_flag == ALT_REPEAT) goto tmp_630;
}
current_location.update_lineno(13107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13107 */
if (tmp_630_alt_flag_0 == ALT_NO && tmp_630_alt_flag_1 == ALT_NO && tmp_630_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13107 and 13121.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13124);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13124 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__05__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_05_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_05_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__05__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13131, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_05_nodeD");
current_location.update_lineno(13134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13134 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13135 */
TIMER t__toCbf("t_toCbf", ((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) * 9.5e-1) / 1.0e3));
current_location.update_lineno(13138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13138 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(13139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13139 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13142 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13154);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13154 */
t__toCbf.start();
current_location.update_lineno(13155);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13155 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13156);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13156 */
{
tmp_631:
alt_status tmp_631_alt_flag_0 = ALT_MAYBE;
alt_status tmp_631_alt_flag_1 = ALT_MAYBE;
alt_status tmp_631_alt_flag_2 = ALT_MAYBE;
alt_status tmp_631_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_631_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13157);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13157 */
tmp_631_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_631_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13162 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13164);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13164 */
if (t__toCbf.running()) {
current_location.update_lineno(13165);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13165 */
t__toCbf.stop();
current_location.update_lineno(13166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13166 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13167 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(13170);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13170 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13171);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13171 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_631_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13174 */
tmp_631_alt_flag_1 = t__toCbf.timeout();
if (tmp_631_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13175);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13175 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13176 */
goto tmp_631;
}
}
if (tmp_631_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(13178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13178 */
tmp_631_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_631_alt_flag_2 == ALT_YES) {
current_location.update_lineno(13179);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13179 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13180);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13180 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_631_default_flag == ALT_MAYBE) {
tmp_631_default_flag = TTCN_Default::try_altsteps();
if (tmp_631_default_flag == ALT_YES || tmp_631_default_flag == ALT_BREAK) break;
else if (tmp_631_default_flag == ALT_REPEAT) goto tmp_631;
}
current_location.update_lineno(13156);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13156 */
if (tmp_631_alt_flag_0 == ALT_NO && tmp_631_alt_flag_1 == ALT_NO && tmp_631_alt_flag_2 == ALT_NO && tmp_631_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13156 and 13182.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13185 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__BCA__BV__05__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_05_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_05_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13196, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_06");
current_location.update_lineno(13199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13199 */
COMPONENT v__nodeB;
current_location.update_lineno(13200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13200 */
COMPONENT v__nodeC;
current_location.update_lineno(13201);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13201 */
COMPONENT v__nodeD;
current_location.update_lineno(13204);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13204 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13205);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13205 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13206);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13206 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13207);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13207 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13209);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13209 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(13210);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13210 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13211);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13211 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13212);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13212 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13215);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13215 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13216);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13216 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13217);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13217 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13218 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13222);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13222 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(13227);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13227 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13228 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(13229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13229 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(13230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13230 */
start_f__GEONW__PON__BCA__BV__06__nodeB(v__nodeB);
current_location.update_lineno(13231);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13231 */
start_f__GEONW__PON__BCA__BV__06__nodeC(v__nodeC);
current_location.update_lineno(13232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13232 */
start_f__GEONW__PON__BCA__BV__06__nodeD(v__nodeD);
current_location.update_lineno(13235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13235 */
{
LibCommon__Sync::SyncPointList tmp_635;
tmp_635.set_size(2);
tmp_635[0] = LibCommon__Sync::c__prDone;
tmp_635[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_635);
}
current_location.update_lineno(13238);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13238 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__06__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13245, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_06_nodeB");
current_location.update_lineno(13248);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13248 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13251);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13251 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13252);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13252 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13255 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13256 */
{
tmp_636:
alt_status tmp_636_alt_flag_0 = ALT_MAYBE;
alt_status tmp_636_alt_flag_1 = ALT_MAYBE;
alt_status tmp_636_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_636_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13257 */
tmp_636_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_636_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13262);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13262 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13263);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13263 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_256).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13264 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_636_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13266 */
tmp_636_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_636_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13267 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_257).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13268);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13268 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_636_default_flag == ALT_MAYBE) {
tmp_636_default_flag = TTCN_Default::try_altsteps();
if (tmp_636_default_flag == ALT_YES || tmp_636_default_flag == ALT_BREAK) break;
else if (tmp_636_default_flag == ALT_REPEAT) goto tmp_636;
}
current_location.update_lineno(13256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13256 */
if (tmp_636_alt_flag_0 == ALT_NO && tmp_636_alt_flag_1 == ALT_NO && tmp_636_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13256 and 13270.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13273);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13273 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__06__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_06_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_06_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__06__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13280, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_06_nodeC");
current_location.update_lineno(13285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13285 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13286 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13289 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13290 */
{
tmp_637:
alt_status tmp_637_alt_flag_0 = ALT_MAYBE;
alt_status tmp_637_alt_flag_1 = ALT_MAYBE;
alt_status tmp_637_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_637_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13291 */
tmp_637_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_637_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13292);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13292 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13293);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13293 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13294 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_637_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13296);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13296 */
tmp_637_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_637_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13297);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13297 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13298 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_637_default_flag == ALT_MAYBE) {
tmp_637_default_flag = TTCN_Default::try_altsteps();
if (tmp_637_default_flag == ALT_YES || tmp_637_default_flag == ALT_BREAK) break;
else if (tmp_637_default_flag == ALT_REPEAT) goto tmp_637;
}
current_location.update_lineno(13290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13290 */
if (tmp_637_alt_flag_0 == ALT_NO && tmp_637_alt_flag_1 == ALT_NO && tmp_637_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13290 and 13300.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13303 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__06__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_06_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_06_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__06__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13310, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_06_nodeD");
current_location.update_lineno(13313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13313 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13316);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13316 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(13317);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13317 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13320 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13332 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13333 */
{
tmp_638:
alt_status tmp_638_alt_flag_0 = ALT_MAYBE;
alt_status tmp_638_alt_flag_1 = ALT_MAYBE;
alt_status tmp_638_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_638_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13334 */
tmp_638_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_638_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13335);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13335 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13336 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_199).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13337 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_638_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13339);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13339 */
tmp_638_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_638_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13340 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_190).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13341 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_638_default_flag == ALT_MAYBE) {
tmp_638_default_flag = TTCN_Default::try_altsteps();
if (tmp_638_default_flag == ALT_YES || tmp_638_default_flag == ALT_BREAK) break;
else if (tmp_638_default_flag == ALT_REPEAT) goto tmp_638;
}
current_location.update_lineno(13333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13333 */
if (tmp_638_alt_flag_0 == ALT_NO && tmp_638_alt_flag_1 == ALT_NO && tmp_638_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13333 and 13343.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13346);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13346 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__BCA__BV__06__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_06_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_06_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13357, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_07");
current_location.update_lineno(13360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13360 */
COMPONENT v__nodeB;
current_location.update_lineno(13361);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13361 */
COMPONENT v__nodeC;
current_location.update_lineno(13362);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13362 */
COMPONENT v__nodeD;
current_location.update_lineno(13365);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13365 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13366);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13366 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13367);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13367 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13368);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13368 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13370);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13370 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(13371);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13371 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13372);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13372 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13373);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13373 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13376);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13376 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13377);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13377 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13378 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13379 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13383);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13383 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(13388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13388 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13389 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(13390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13390 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(13391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13391 */
start_f__GEONW__PON__BCA__BV__07__nodeB(v__nodeB);
current_location.update_lineno(13392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13392 */
start_f__GEONW__PON__BCA__BV__07__nodeC(v__nodeC);
current_location.update_lineno(13393);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13393 */
start_f__GEONW__PON__BCA__BV__07__nodeD(v__nodeD);
current_location.update_lineno(13396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13396 */
{
LibCommon__Sync::SyncPointList tmp_642;
tmp_642.set_size(2);
tmp_642[0] = LibCommon__Sync::c__prDone;
tmp_642[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_642);
}
current_location.update_lineno(13399);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13399 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__07__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13406, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_07_nodeB");
current_location.update_lineno(13409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13409 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(13412);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13412 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13413 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13416 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13417 */
{
tmp_643:
alt_status tmp_643_alt_flag_0 = ALT_MAYBE;
alt_status tmp_643_alt_flag_1 = ALT_MAYBE;
alt_status tmp_643_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_643_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13418);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13418 */
tmp_643_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_643_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13423);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13423 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13424);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13424 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_256).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13425);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13425 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_643_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13427 */
tmp_643_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_643_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13428 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_257).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13429);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13429 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_643_default_flag == ALT_MAYBE) {
tmp_643_default_flag = TTCN_Default::try_altsteps();
if (tmp_643_default_flag == ALT_YES || tmp_643_default_flag == ALT_BREAK) break;
else if (tmp_643_default_flag == ALT_REPEAT) goto tmp_643;
}
current_location.update_lineno(13417);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13417 */
if (tmp_643_alt_flag_0 == ALT_NO && tmp_643_alt_flag_1 == ALT_NO && tmp_643_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13417 and 13431.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13434);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13434 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__07__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_07_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_07_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__07__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13441, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_07_nodeC");
current_location.update_lineno(13444);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13444 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13445 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(13448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13448 */
v__longPosVectorNodeC.pai() = bs_0;
current_location.update_lineno(13449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13449 */
LibItsGeoNetworking__Functions::f__changePositon(LibItsGeoNetworking__TypesAndValues::c__compNodeC, v__longPosVectorNodeC);
current_location.update_lineno(13450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13450 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13451);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13451 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13454);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13454 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13466);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13466 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13467 */
{
tmp_645:
alt_status tmp_645_alt_flag_0 = ALT_MAYBE;
alt_status tmp_645_alt_flag_1 = ALT_MAYBE;
alt_status tmp_645_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_645_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13468);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13468 */
tmp_645_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_645_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13473 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13474 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_256).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13475 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_645_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13477 */
tmp_645_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_645_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13478 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_257).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13479 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_645_default_flag == ALT_MAYBE) {
tmp_645_default_flag = TTCN_Default::try_altsteps();
if (tmp_645_default_flag == ALT_YES || tmp_645_default_flag == ALT_BREAK) break;
else if (tmp_645_default_flag == ALT_REPEAT) goto tmp_645;
}
current_location.update_lineno(13467);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13467 */
if (tmp_645_alt_flag_0 == ALT_NO && tmp_645_alt_flag_1 == ALT_NO && tmp_645_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13467 and 13481.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13484);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13484 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__07__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_07_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_07_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__07__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13491, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_07_nodeD");
current_location.update_lineno(13494);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13494 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(13497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13497 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13498);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13498 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13501);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13501 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13502 */
{
tmp_646:
alt_status tmp_646_alt_flag_0 = ALT_MAYBE;
alt_status tmp_646_alt_flag_1 = ALT_MAYBE;
alt_status tmp_646_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_646_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13503);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13503 */
tmp_646_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_646_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13508 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13509);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13509 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_256).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13510);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13510 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_646_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13512 */
tmp_646_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_646_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13513 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_257).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13514 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_646_default_flag == ALT_MAYBE) {
tmp_646_default_flag = TTCN_Default::try_altsteps();
if (tmp_646_default_flag == ALT_YES || tmp_646_default_flag == ALT_BREAK) break;
else if (tmp_646_default_flag == ALT_REPEAT) goto tmp_646;
}
current_location.update_lineno(13502);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13502 */
if (tmp_646_alt_flag_0 == ALT_NO && tmp_646_alt_flag_1 == ALT_NO && tmp_646_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13502 and 13516.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13519);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13519 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__07__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_07_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_07_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13530, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_08");
current_location.update_lineno(13533);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13533 */
COMPONENT v__nodeB;
current_location.update_lineno(13534);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13534 */
COMPONENT v__nodeC;
current_location.update_lineno(13535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13535 */
COMPONENT v__nodeD;
current_location.update_lineno(13538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13538 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13539 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13540);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13540 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13541);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13541 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13543 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__cbf)) {
current_location.update_lineno(13544);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13544 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_243).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13545);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13545 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13546 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13549 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13550 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13551 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13552);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13552 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13556 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(13561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13561 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13562 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(13563);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13563 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(13564);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13564 */
start_f__GEONW__PON__BCA__BV__08__nodeB(v__nodeB);
current_location.update_lineno(13565);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13565 */
start_f__GEONW__PON__BCA__BV__08__nodeC(v__nodeC);
current_location.update_lineno(13566);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13566 */
start_f__GEONW__PON__BCA__BV__08__nodeD(v__nodeD);
current_location.update_lineno(13569);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13569 */
{
LibCommon__Sync::SyncPointList tmp_650;
tmp_650.set_size(2);
tmp_650[0] = LibCommon__Sync::c__prDone;
tmp_650[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_650);
}
current_location.update_lineno(13572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13572 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BCA__BV__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__08__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13579, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_08_nodeB");
current_location.update_lineno(13582);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13582 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13585 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13586);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13586 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13589);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13589 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13590 */
{
tmp_651:
alt_status tmp_651_alt_flag_0 = ALT_MAYBE;
alt_status tmp_651_alt_flag_1 = ALT_MAYBE;
alt_status tmp_651_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_651_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13591 */
tmp_651_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_651_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13596);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13596 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13597);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13597 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13598);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13598 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_651_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13600);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13600 */
tmp_651_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_651_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13601 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13602 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_651_default_flag == ALT_MAYBE) {
tmp_651_default_flag = TTCN_Default::try_altsteps();
if (tmp_651_default_flag == ALT_YES || tmp_651_default_flag == ALT_BREAK) break;
else if (tmp_651_default_flag == ALT_REPEAT) goto tmp_651;
}
current_location.update_lineno(13590);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13590 */
if (tmp_651_alt_flag_0 == ALT_NO && tmp_651_alt_flag_1 == ALT_NO && tmp_651_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13590 and 13604.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13607 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__08__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_08_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_08_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__08__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13614, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_08_nodeC");
current_location.update_lineno(13617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13617 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13620);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13620 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13621);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13621 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13624);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13624 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13625 */
{
tmp_652:
alt_status tmp_652_alt_flag_0 = ALT_MAYBE;
alt_status tmp_652_alt_flag_1 = ALT_MAYBE;
alt_status tmp_652_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_652_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13626);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13626 */
tmp_652_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_652_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13631);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13631 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13632);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13632 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_245).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13633 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_652_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13635);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13635 */
tmp_652_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_652_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13636 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_246).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13637);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13637 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_652_default_flag == ALT_MAYBE) {
tmp_652_default_flag = TTCN_Default::try_altsteps();
if (tmp_652_default_flag == ALT_YES || tmp_652_default_flag == ALT_BREAK) break;
else if (tmp_652_default_flag == ALT_REPEAT) goto tmp_652;
}
current_location.update_lineno(13625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13625 */
if (tmp_652_alt_flag_0 == ALT_NO && tmp_652_alt_flag_1 == ALT_NO && tmp_652_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13625 and 13639.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13642);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13642 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BCA__BV__08__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_08_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_08_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BCA__BV__08__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13649, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BCA_BV_08_nodeD");
current_location.update_lineno(13652);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13652 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(13653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13653 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(13654);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13654 */
TIMER t__toCbf("t_toCbf", ((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) * 9.5e-1) / 1.0e3));
current_location.update_lineno(13657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13657 */
v__longPosVectorNodeD.pai() = bs_0;
current_location.update_lineno(13658);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13658 */
LibItsGeoNetworking__Functions::f__changePositon(LibItsGeoNetworking__TypesAndValues::c__compNodeD, v__longPosVectorNodeD);
current_location.update_lineno(13659);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13659 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13660);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13660 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13663);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13663 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13675 */
t__toCbf.start();
current_location.update_lineno(13676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13676 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(13677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13677 */
{
tmp_654:
alt_status tmp_654_alt_flag_0 = ALT_MAYBE;
alt_status tmp_654_alt_flag_1 = ALT_MAYBE;
alt_status tmp_654_alt_flag_2 = ALT_MAYBE;
alt_status tmp_654_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_654_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13678);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13678 */
tmp_654_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_654_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13683 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(13685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13685 */
if (t__toCbf.running()) {
current_location.update_lineno(13686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13686 */
t__toCbf.stop();
current_location.update_lineno(13687);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13687 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13688);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13688 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(13691);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13691 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13692 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_654_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13695);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13695 */
tmp_654_alt_flag_1 = t__toCbf.timeout();
if (tmp_654_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13696);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13696 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13697 */
goto tmp_654;
}
}
if (tmp_654_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(13699);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13699 */
tmp_654_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_654_alt_flag_2 == ALT_YES) {
current_location.update_lineno(13700);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13700 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13701);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13701 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_654_default_flag == ALT_MAYBE) {
tmp_654_default_flag = TTCN_Default::try_altsteps();
if (tmp_654_default_flag == ALT_YES || tmp_654_default_flag == ALT_BREAK) break;
else if (tmp_654_default_flag == ALT_REPEAT) goto tmp_654;
}
current_location.update_lineno(13677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13677 */
if (tmp_654_alt_flag_0 == ALT_NO && tmp_654_alt_flag_1 == ALT_NO && tmp_654_alt_flag_2 == ALT_NO && tmp_654_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13677 and 13703.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13706);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13706 */
LibItsGeoNetworking__Functions::f__poDefault();
}

void start_f__GEONW__PON__BCA__BV__08__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_08_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BCA_BV_08_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13722, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_01");
current_location.update_lineno(13725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13725 */
COMPONENT v__nodeB;
current_location.update_lineno(13726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13726 */
COMPONENT v__nodeF;
current_location.update_lineno(13729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13729 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13730 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13731);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13731 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13732);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13732 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13734);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13734 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(13735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13735 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13736);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13736 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13737 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13740 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13741 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13742 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13743);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13743 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13747);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13747 */
LibItsGeoNetworking__Functions::f__cf06Up(LibItsGeoNetworking__Functions::f__cf06Up_p__mainUtComponent_defval);
current_location.update_lineno(13752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13752 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13753 */
v__nodeF = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeF);
current_location.update_lineno(13754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13754 */
start_f__GEONW__PON__BAA__BV__01__nodeB(v__nodeB);
current_location.update_lineno(13755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13755 */
start_f__GEONW__PON__BAA__BV__01__nodeF(v__nodeF);
current_location.update_lineno(13758);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13758 */
{
LibCommon__Sync::SyncPointList tmp_657;
tmp_657.set_size(2);
tmp_657[0] = LibCommon__Sync::c__prDone;
tmp_657[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_657);
}
current_location.update_lineno(13761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13761 */
LibItsGeoNetworking__Functions::f__cf06Down();
}

void start_f__GEONW__PON__BAA__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__01__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13768, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_01_nodeB");
current_location.update_lineno(13773);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13773 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13774);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13774 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13777);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13777 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(13778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13778 */
{
tmp_658:
alt_status tmp_658_alt_flag_0 = ALT_MAYBE;
alt_status tmp_658_alt_flag_1 = ALT_MAYBE;
alt_status tmp_658_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_658_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13779 */
tmp_658_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_658_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13780);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13780 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(13781);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13781 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13782 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_658_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13784 */
tmp_658_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_658_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13785 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13786 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_658_default_flag == ALT_MAYBE) {
tmp_658_default_flag = TTCN_Default::try_altsteps();
if (tmp_658_default_flag == ALT_YES || tmp_658_default_flag == ALT_BREAK) break;
else if (tmp_658_default_flag == ALT_REPEAT) goto tmp_658;
}
current_location.update_lineno(13778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13778 */
if (tmp_658_alt_flag_0 == ALT_NO && tmp_658_alt_flag_1 == ALT_NO && tmp_658_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13778 and 13788.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13791 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__01__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_01_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_01_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__01__nodeF()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13798, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_01_nodeF");
current_location.update_lineno(13801);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13801 */
INTEGER i;
current_location.update_lineno(13802);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13802 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__gnPacket;
current_location.update_lineno(13803);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13803 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(13806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13806 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13807);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13807 */
v__gnPacket = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(13813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13813 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(13814);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13814 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13817 */
i = 1;
current_location.update_lineno(13817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13817 */
for ( ; ; ) {
current_location.update_lineno(13817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13817 */
if (!(i < LibItsGeoNetworking__Functions::f__getAdvancedGbcForwardingMaxCounter())) break;
current_location.update_lineno(13818);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13818 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(v__gnPacket));
current_location.update_lineno(13819);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13819 */
LibCommon__Time::f__sleepIgnoreDef(5.0e-1);
current_location.update_lineno(13817);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13817 */
{
INTEGER tmp_661;
++i;
}
}
current_location.update_lineno(13821);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13821 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(13822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13822 */
{
tmp_662:
alt_status tmp_662_alt_flag_0 = ALT_MAYBE;
alt_status tmp_662_alt_flag_1 = ALT_MAYBE;
alt_status tmp_662_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_662_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13823 */
tmp_662_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_662_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13824);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13824 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(13825);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13825 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13826);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13826 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_662_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13828);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13828 */
tmp_662_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_662_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13829);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13829 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13830);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13830 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_662_default_flag == ALT_MAYBE) {
tmp_662_default_flag = TTCN_Default::try_altsteps();
if (tmp_662_default_flag == ALT_YES || tmp_662_default_flag == ALT_BREAK) break;
else if (tmp_662_default_flag == ALT_REPEAT) goto tmp_662;
}
current_location.update_lineno(13822);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13822 */
if (tmp_662_alt_flag_0 == ALT_NO && tmp_662_alt_flag_1 == ALT_NO && tmp_662_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13822 and 13832.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13835);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13835 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__01__nodeF(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_01_nodeF(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_01_nodeF", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13846, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_02");
current_location.update_lineno(13849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13849 */
COMPONENT v__nodeB;
current_location.update_lineno(13850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13850 */
COMPONENT v__nodeE;
current_location.update_lineno(13853);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13853 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13854);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13854 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13855 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13856 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13858 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(13859);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13859 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13860);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13860 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13861);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13861 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13864);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13864 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13865);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13865 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13866);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13866 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13867 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13871);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13871 */
LibItsGeoNetworking__Functions::f__cf05Up(LibItsGeoNetworking__Functions::f__cf05Up_p__mainUtComponent_defval);
current_location.update_lineno(13876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13876 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(13877);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13877 */
v__nodeE = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeE);
current_location.update_lineno(13878);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13878 */
start_f__GEONW__PON__BAA__BV__02__nodeB(v__nodeB);
current_location.update_lineno(13879);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13879 */
start_f__GEONW__PON__BAA__BV__02__nodeE(v__nodeE);
current_location.update_lineno(13882);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13882 */
{
LibCommon__Sync::SyncPointList tmp_665;
tmp_665.set_size(2);
tmp_665[0] = LibCommon__Sync::c__prDone;
tmp_665[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_665);
}
current_location.update_lineno(13885);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13885 */
LibItsGeoNetworking__Functions::f__cf05Down();
}

void start_f__GEONW__PON__BAA__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__02__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13892, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_02_nodeB");
current_location.update_lineno(13895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13895 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(13898);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13898 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13899);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13899 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13907);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13907 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13910 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(13911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13911 */
{
tmp_666:
alt_status tmp_666_alt_flag_0 = ALT_MAYBE;
alt_status tmp_666_alt_flag_1 = ALT_MAYBE;
alt_status tmp_666_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_666_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13912);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13912 */
tmp_666_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_666_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13913);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13913 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(13914);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13914 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13915 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_666_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13917);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13917 */
tmp_666_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_666_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13918 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13919 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_666_default_flag == ALT_MAYBE) {
tmp_666_default_flag = TTCN_Default::try_altsteps();
if (tmp_666_default_flag == ALT_YES || tmp_666_default_flag == ALT_BREAK) break;
else if (tmp_666_default_flag == ALT_REPEAT) goto tmp_666;
}
current_location.update_lineno(13911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13911 */
if (tmp_666_alt_flag_0 == ALT_NO && tmp_666_alt_flag_1 == ALT_NO && tmp_666_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13911 and 13921.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13924);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13924 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__02__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_02_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_02_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__02__nodeE()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13931, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_02_nodeE");
current_location.update_lineno(13934);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13934 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(13937);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13937 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(13938);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13938 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(13941);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13941 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(13949);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13949 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(13950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13950 */
{
tmp_667:
alt_status tmp_667_alt_flag_0 = ALT_MAYBE;
alt_status tmp_667_alt_flag_1 = ALT_MAYBE;
alt_status tmp_667_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_667_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(13951);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13951 */
tmp_667_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_667_alt_flag_0 == ALT_YES) {
current_location.update_lineno(13952);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13952 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(13953);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13953 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13954);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13954 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_667_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(13956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13956 */
tmp_667_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_667_alt_flag_1 == ALT_YES) {
current_location.update_lineno(13957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13957 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13958);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13958 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_667_default_flag == ALT_MAYBE) {
tmp_667_default_flag = TTCN_Default::try_altsteps();
if (tmp_667_default_flag == ALT_YES || tmp_667_default_flag == ALT_BREAK) break;
else if (tmp_667_default_flag == ALT_REPEAT) goto tmp_667;
}
current_location.update_lineno(13950);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13950 */
if (tmp_667_alt_flag_0 == ALT_NO && tmp_667_alt_flag_1 == ALT_NO && tmp_667_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 13950 and 13960.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(13963);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13963 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__02__nodeE(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_02_nodeE(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_02_nodeE", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__03()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 13974, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_03");
current_location.update_lineno(13977);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13977 */
COMPONENT v__nodeB;
current_location.update_lineno(13978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13978 */
COMPONENT v__nodeF;
current_location.update_lineno(13981);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13981 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(13982);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13982 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13983);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13983 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13984);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13984 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13986);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13986 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(13987);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13987 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13988);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13988 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13989);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13989 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13992);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13992 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(13993);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13993 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(13994);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13994 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(13995);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13995 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(13999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 13999 */
LibItsGeoNetworking__Functions::f__cf06Up(LibItsGeoNetworking__Functions::f__cf06Up_p__mainUtComponent_defval);
current_location.update_lineno(14004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14004 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14005 */
v__nodeF = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeF);
current_location.update_lineno(14006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14006 */
start_f__GEONW__PON__BAA__BV__03__nodeB(v__nodeB);
current_location.update_lineno(14007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14007 */
start_f__GEONW__PON__BAA__BV__03__nodeF(v__nodeF);
current_location.update_lineno(14010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14010 */
{
LibCommon__Sync::SyncPointList tmp_670;
tmp_670.set_size(2);
tmp_670[0] = LibCommon__Sync::c__prDone;
tmp_670[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_670);
}
current_location.update_lineno(14013);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14013 */
LibItsGeoNetworking__Functions::f__cf06Down();
}

void start_f__GEONW__PON__BAA__BV__03(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_03(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_03", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__03__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14020, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_03_nodeB");
current_location.update_lineno(14023);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14023 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(14026);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14026 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14027 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14035);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14035 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14038 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14039 */
{
tmp_671:
alt_status tmp_671_alt_flag_0 = ALT_MAYBE;
alt_status tmp_671_alt_flag_1 = ALT_MAYBE;
alt_status tmp_671_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_671_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14040);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14040 */
tmp_671_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_671_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14045);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14045 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14046);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14046 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14047);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14047 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_671_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14049);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14049 */
tmp_671_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_671_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14050);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14050 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14051 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_671_default_flag == ALT_MAYBE) {
tmp_671_default_flag = TTCN_Default::try_altsteps();
if (tmp_671_default_flag == ALT_YES || tmp_671_default_flag == ALT_BREAK) break;
else if (tmp_671_default_flag == ALT_REPEAT) goto tmp_671;
}
current_location.update_lineno(14039);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14039 */
if (tmp_671_alt_flag_0 == ALT_NO && tmp_671_alt_flag_1 == ALT_NO && tmp_671_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14039 and 14053.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14056 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__03__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_03_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_03_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__03__nodeF()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14063, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_03_nodeF");
current_location.update_lineno(14066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14066 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(14067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14067 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeF(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeF));
current_location.update_lineno(14068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14068 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(14069);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14069 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * LibItsGeoNetworking__Functions::f__distance(v__longPosVectorNodeF, v__longPosVectorIut))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(14076);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14076 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14077);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14077 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14080);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14080 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14088);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14088 */
t__toCbf.start();
current_location.update_lineno(14089);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14089 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14090 */
{
tmp_672:
alt_status tmp_672_alt_flag_0 = ALT_MAYBE;
alt_status tmp_672_alt_flag_1 = ALT_MAYBE;
alt_status tmp_672_alt_flag_2 = ALT_MAYBE;
alt_status tmp_672_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_672_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14091);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14091 */
tmp_672_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_672_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14096);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14096 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14098);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14098 */
if (t__toCbf.running()) {
current_location.update_lineno(14099);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14099 */
t__toCbf.stop();
current_location.update_lineno(14100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14100 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14101 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(14104);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14104 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14105);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14105 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_672_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14108 */
tmp_672_alt_flag_1 = t__toCbf.timeout();
if (tmp_672_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14109 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14110);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14110 */
goto tmp_672;
}
}
if (tmp_672_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(14112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14112 */
tmp_672_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_672_alt_flag_2 == ALT_YES) {
current_location.update_lineno(14113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14113 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14114);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14114 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_672_default_flag == ALT_MAYBE) {
tmp_672_default_flag = TTCN_Default::try_altsteps();
if (tmp_672_default_flag == ALT_YES || tmp_672_default_flag == ALT_BREAK) break;
else if (tmp_672_default_flag == ALT_REPEAT) goto tmp_672;
}
current_location.update_lineno(14090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14090 */
if (tmp_672_alt_flag_0 == ALT_NO && tmp_672_alt_flag_1 == ALT_NO && tmp_672_alt_flag_2 == ALT_NO && tmp_672_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14090 and 14116.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14119);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14119 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__03__nodeF(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_03_nodeF(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_03_nodeF", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__04()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14130, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_04");
current_location.update_lineno(14133);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14133 */
COMPONENT v__nodeB;
current_location.update_lineno(14134);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14134 */
COMPONENT v__nodeE;
current_location.update_lineno(14137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14137 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14138);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14138 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14139);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14139 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14140);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14140 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14142 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14143 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14144 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14145);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14145 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14148 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14149);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14149 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14150);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14150 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14151);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14151 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14155);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14155 */
LibItsGeoNetworking__Functions::f__cf05Up(LibItsGeoNetworking__Functions::f__cf05Up_p__mainUtComponent_defval);
current_location.update_lineno(14160);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14160 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14161);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14161 */
v__nodeE = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeE);
current_location.update_lineno(14162);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14162 */
start_f__GEONW__PON__BAA__BV__04__nodeB(v__nodeB);
current_location.update_lineno(14163);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14163 */
start_f__GEONW__PON__BAA__BV__04__nodeE(v__nodeE);
current_location.update_lineno(14166);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14166 */
{
LibCommon__Sync::SyncPointList tmp_675;
tmp_675.set_size(2);
tmp_675[0] = LibCommon__Sync::c__prDone;
tmp_675[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_675);
}
current_location.update_lineno(14169);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14169 */
LibItsGeoNetworking__Functions::f__cf05Down();
}

void start_f__GEONW__PON__BAA__BV__04(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_04(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_04", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__04__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14176, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_04_nodeB");
current_location.update_lineno(14179);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14179 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(14182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14182 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14183 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14186);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14186 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14187 */
{
tmp_676:
alt_status tmp_676_alt_flag_0 = ALT_MAYBE;
alt_status tmp_676_alt_flag_1 = ALT_MAYBE;
alt_status tmp_676_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_676_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14188);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14188 */
tmp_676_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_676_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14193);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14193 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14194 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14195 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_676_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14197);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14197 */
tmp_676_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_676_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14198);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14198 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14199);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14199 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_676_default_flag == ALT_MAYBE) {
tmp_676_default_flag = TTCN_Default::try_altsteps();
if (tmp_676_default_flag == ALT_YES || tmp_676_default_flag == ALT_BREAK) break;
else if (tmp_676_default_flag == ALT_REPEAT) goto tmp_676;
}
current_location.update_lineno(14187);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14187 */
if (tmp_676_alt_flag_0 == ALT_NO && tmp_676_alt_flag_1 == ALT_NO && tmp_676_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14187 and 14201.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14204);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14204 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__04__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_04_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_04_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__04__nodeE()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14211, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_04_nodeE");
current_location.update_lineno(14214);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14214 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(14217);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14217 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14218);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14218 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14221);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14221 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(14232);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14232 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14235 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__04__nodeE(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_04_nodeE(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_04_nodeE", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__05()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14246, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_05");
current_location.update_lineno(14249);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14249 */
COMPONENT v__nodeB;
current_location.update_lineno(14250);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14250 */
COMPONENT v__nodeE;
current_location.update_lineno(14253);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14253 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14254);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14254 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14255);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14255 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14256 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14258 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14259);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14259 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14260);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14260 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14261);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14261 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14264);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14264 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14265 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14266 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14267);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14267 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14271);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14271 */
LibItsGeoNetworking__Functions::f__cf05Up(LibItsGeoNetworking__Functions::f__cf05Up_p__mainUtComponent_defval);
current_location.update_lineno(14276);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14276 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14277);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14277 */
v__nodeE = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeE);
current_location.update_lineno(14278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14278 */
start_f__GEONW__PON__BAA__BV__05__nodeB(v__nodeB);
current_location.update_lineno(14279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14279 */
start_f__GEONW__PON__BAA__BV__05__nodeE(v__nodeE);
current_location.update_lineno(14282);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14282 */
{
LibCommon__Sync::SyncPointList tmp_679;
tmp_679.set_size(2);
tmp_679[0] = LibCommon__Sync::c__prDone;
tmp_679[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_679);
}
current_location.update_lineno(14285);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14285 */
LibItsGeoNetworking__Functions::f__cf05Down();
}

void start_f__GEONW__PON__BAA__BV__05(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_05(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_05", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__05__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14292, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_05_nodeB");
current_location.update_lineno(14295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14295 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(14298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14298 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14299 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14302 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14303 */
{
tmp_680:
alt_status tmp_680_alt_flag_0 = ALT_MAYBE;
alt_status tmp_680_alt_flag_1 = ALT_MAYBE;
alt_status tmp_680_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_680_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14304 */
tmp_680_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_680_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14309 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14310);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14310 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_260).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14311);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14311 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_680_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14313);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14313 */
tmp_680_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_680_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14314);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14314 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14315);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14315 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_680_default_flag == ALT_MAYBE) {
tmp_680_default_flag = TTCN_Default::try_altsteps();
if (tmp_680_default_flag == ALT_YES || tmp_680_default_flag == ALT_BREAK) break;
else if (tmp_680_default_flag == ALT_REPEAT) goto tmp_680;
}
current_location.update_lineno(14303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14303 */
if (tmp_680_alt_flag_0 == ALT_NO && tmp_680_alt_flag_1 == ALT_NO && tmp_680_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14303 and 14317.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14320);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14320 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__05__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_05_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_05_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__05__nodeE()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14327, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_05_nodeE");
current_location.update_lineno(14330);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14330 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(14333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14333 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14334 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14337 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__withLinkLayerDestination(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval), OCTETSTRING_template(LibItsGeoNetworking__Functions::f__getIutMacAddress())));
current_location.update_lineno(14348);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14348 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14349 */
{
tmp_681:
alt_status tmp_681_alt_flag_0 = ALT_MAYBE;
alt_status tmp_681_alt_flag_1 = ALT_MAYBE;
alt_status tmp_681_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_681_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14350);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14350 */
tmp_681_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeA)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_681_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14355 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14356);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14356 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_260).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14357);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14357 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_681_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14359);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14359 */
tmp_681_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_681_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14360 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14361);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14361 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_681_default_flag == ALT_MAYBE) {
tmp_681_default_flag = TTCN_Default::try_altsteps();
if (tmp_681_default_flag == ALT_YES || tmp_681_default_flag == ALT_BREAK) break;
else if (tmp_681_default_flag == ALT_REPEAT) goto tmp_681;
}
current_location.update_lineno(14349);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14349 */
if (tmp_681_alt_flag_0 == ALT_NO && tmp_681_alt_flag_1 == ALT_NO && tmp_681_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14349 and 14363.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14366);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14366 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__05__nodeE(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_05_nodeE(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_05_nodeE", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__06()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14377, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_06");
current_location.update_lineno(14380);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14380 */
COMPONENT v__nodeB;
current_location.update_lineno(14381);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14381 */
COMPONENT v__nodeE;
current_location.update_lineno(14384);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14384 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14385 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14386);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14386 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14387);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14387 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14389 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14390 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14391);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14391 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14392);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14392 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14395);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14395 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14396);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14396 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14397 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14398);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14398 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14402);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14402 */
LibItsGeoNetworking__Functions::f__cf05Up(LibItsGeoNetworking__Functions::f__cf05Up_p__mainUtComponent_defval);
current_location.update_lineno(14407);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14407 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14408);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14408 */
v__nodeE = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeE);
current_location.update_lineno(14409);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14409 */
start_f__GEONW__PON__BAA__BV__06__nodeB(v__nodeB);
current_location.update_lineno(14410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14410 */
start_f__GEONW__PON__BAA__BV__06__nodeE(v__nodeE);
current_location.update_lineno(14413);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14413 */
{
LibCommon__Sync::SyncPointList tmp_684;
tmp_684.set_size(2);
tmp_684[0] = LibCommon__Sync::c__prDone;
tmp_684[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_684);
}
current_location.update_lineno(14416);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14416 */
LibItsGeoNetworking__Functions::f__cf05Down();
}

void start_f__GEONW__PON__BAA__BV__06(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_06(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_06", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__06__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14423, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_06_nodeB");
current_location.update_lineno(14426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14426 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeE(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeE));
current_location.update_lineno(14427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14427 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(14428);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14428 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * LibItsGeoNetworking__Functions::f__distance(v__longPosVectorNodeE, v__longPosVectorIut))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(14435);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14435 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14436);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14436 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14439);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14439 */
t__toCbf.start();
current_location.update_lineno(14440);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14440 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14441 */
{
tmp_685:
alt_status tmp_685_alt_flag_0 = ALT_MAYBE;
alt_status tmp_685_alt_flag_1 = ALT_MAYBE;
alt_status tmp_685_alt_flag_2 = ALT_MAYBE;
alt_status tmp_685_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_685_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14442);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14442 */
tmp_685_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeE)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_685_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14447);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14447 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14449 */
if (t__toCbf.running()) {
current_location.update_lineno(14450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14450 */
t__toCbf.stop();
current_location.update_lineno(14451);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14451 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14452);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14452 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(14455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14455 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14456);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14456 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_685_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14459);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14459 */
tmp_685_alt_flag_1 = t__toCbf.timeout();
if (tmp_685_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14460);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14460 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14461);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14461 */
goto tmp_685;
}
}
if (tmp_685_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(14463);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14463 */
tmp_685_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_685_alt_flag_2 == ALT_YES) {
current_location.update_lineno(14464);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14464 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14465);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14465 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_685_default_flag == ALT_MAYBE) {
tmp_685_default_flag = TTCN_Default::try_altsteps();
if (tmp_685_default_flag == ALT_YES || tmp_685_default_flag == ALT_BREAK) break;
else if (tmp_685_default_flag == ALT_REPEAT) goto tmp_685;
}
current_location.update_lineno(14441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14441 */
if (tmp_685_alt_flag_0 == ALT_NO && tmp_685_alt_flag_1 == ALT_NO && tmp_685_alt_flag_2 == ALT_NO && tmp_685_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14441 and 14467.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14470);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14470 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__06__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_06_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_06_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__06__nodeE()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14477, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_06_nodeE");
current_location.update_lineno(14480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14480 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeE(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeE));
current_location.update_lineno(14481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14481 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(14482);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14482 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * LibItsGeoNetworking__Functions::f__distance(v__longPosVectorNodeE, v__longPosVectorIut))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(14489);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14489 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14490);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14490 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14493);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14493 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeE), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14504 */
t__toCbf.start();
current_location.update_lineno(14505);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14505 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14506 */
{
tmp_686:
alt_status tmp_686_alt_flag_0 = ALT_MAYBE;
alt_status tmp_686_alt_flag_1 = ALT_MAYBE;
alt_status tmp_686_alt_flag_2 = ALT_MAYBE;
alt_status tmp_686_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_686_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14507 */
tmp_686_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeE)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_686_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14512 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14514 */
if (t__toCbf.running()) {
current_location.update_lineno(14515);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14515 */
t__toCbf.stop();
current_location.update_lineno(14516);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14516 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14517 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(14520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14520 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14521);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14521 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_686_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14524);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14524 */
tmp_686_alt_flag_1 = t__toCbf.timeout();
if (tmp_686_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14525);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14525 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14526);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14526 */
goto tmp_686;
}
}
if (tmp_686_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(14528);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14528 */
tmp_686_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_686_alt_flag_2 == ALT_YES) {
current_location.update_lineno(14529);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14529 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14530);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14530 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_686_default_flag == ALT_MAYBE) {
tmp_686_default_flag = TTCN_Default::try_altsteps();
if (tmp_686_default_flag == ALT_YES || tmp_686_default_flag == ALT_BREAK) break;
else if (tmp_686_default_flag == ALT_REPEAT) goto tmp_686;
}
current_location.update_lineno(14506);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14506 */
if (tmp_686_alt_flag_0 == ALT_NO && tmp_686_alt_flag_1 == ALT_NO && tmp_686_alt_flag_2 == ALT_NO && tmp_686_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14506 and 14532.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14535);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14535 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__06__nodeE(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_06_nodeE(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_06_nodeE", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__07()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14546, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_07");
current_location.update_lineno(14549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14549 */
COMPONENT v__nodeB;
current_location.update_lineno(14550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14550 */
COMPONENT v__nodeC;
current_location.update_lineno(14551);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14551 */
COMPONENT v__nodeD;
current_location.update_lineno(14554);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14554 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14555);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14555 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14556);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14556 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14557);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14557 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14559);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14559 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14560 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14561 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14562 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14565);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14565 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14566);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14566 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14567);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14567 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14568);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14568 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14572);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14572 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(14577);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14577 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14578);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14578 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(14579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14579 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(14580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14580 */
start_f__GEONW__PON__BAA__BV__07__nodeB(v__nodeB);
current_location.update_lineno(14581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14581 */
start_f__GEONW__PON__BAA__BV__07__nodeC(v__nodeC);
current_location.update_lineno(14582);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14582 */
start_f__GEONW__PON__BAA__BV__07__nodeD(v__nodeD);
current_location.update_lineno(14585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14585 */
{
LibCommon__Sync::SyncPointList tmp_690;
tmp_690.set_size(2);
tmp_690[0] = LibCommon__Sync::c__prDone;
tmp_690[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_690);
}
current_location.update_lineno(14588);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14588 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BAA__BV__07(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_07(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_07", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__07__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14595, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_07_nodeB");
current_location.update_lineno(14598);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14598 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(14601);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14601 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14602);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14602 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14605);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14605 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14606 */
{
tmp_691:
alt_status tmp_691_alt_flag_0 = ALT_MAYBE;
alt_status tmp_691_alt_flag_1 = ALT_MAYBE;
alt_status tmp_691_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_691_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14607);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14607 */
tmp_691_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_691_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14612);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14612 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14613);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14613 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14614);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14614 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_691_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14616 */
tmp_691_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_691_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14617 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14618 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_691_default_flag == ALT_MAYBE) {
tmp_691_default_flag = TTCN_Default::try_altsteps();
if (tmp_691_default_flag == ALT_YES || tmp_691_default_flag == ALT_BREAK) break;
else if (tmp_691_default_flag == ALT_REPEAT) goto tmp_691;
}
current_location.update_lineno(14606);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14606 */
if (tmp_691_alt_flag_0 == ALT_NO && tmp_691_alt_flag_1 == ALT_NO && tmp_691_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14606 and 14620.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14623);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14623 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__07__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_07_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_07_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__07__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14630, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_07_nodeC");
current_location.update_lineno(14633);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14633 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(14636);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14636 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14637);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14637 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14640);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14640 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14650 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14653);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14653 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__07__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_07_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_07_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__07__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14660, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_07_nodeD");
current_location.update_lineno(14665);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14665 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14666 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14669);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14669 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(14670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14670 */
{
tmp_692:
alt_status tmp_692_alt_flag_0 = ALT_MAYBE;
alt_status tmp_692_alt_flag_1 = ALT_MAYBE;
alt_status tmp_692_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_692_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14671 */
tmp_692_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_692_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14672);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14672 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(14673);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14673 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14674);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14674 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_692_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14676);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14676 */
tmp_692_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_692_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14677 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14678);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14678 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_692_default_flag == ALT_MAYBE) {
tmp_692_default_flag = TTCN_Default::try_altsteps();
if (tmp_692_default_flag == ALT_YES || tmp_692_default_flag == ALT_BREAK) break;
else if (tmp_692_default_flag == ALT_REPEAT) goto tmp_692;
}
current_location.update_lineno(14670);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14670 */
if (tmp_692_alt_flag_0 == ALT_NO && tmp_692_alt_flag_1 == ALT_NO && tmp_692_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14670 and 14680.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14683 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__07__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_07_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_07_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BO__08()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14694, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BO_08");
current_location.update_lineno(14697);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14697 */
COMPONENT v__nodeB;
current_location.update_lineno(14698);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14698 */
COMPONENT v__nodeC;
current_location.update_lineno(14699);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14699 */
COMPONENT v__nodeD;
current_location.update_lineno(14702);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14702 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14703);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14703 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14704);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14704 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14705);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14705 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14707);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14707 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14708);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14708 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14709 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14710 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14713);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14713 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14714);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14714 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14715 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14716 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14720);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14720 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(14725);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14725 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14726);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14726 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(14727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14727 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(14728);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14728 */
start_f__GEONW__PON__BAA__BO__08__nodeB(v__nodeB);
current_location.update_lineno(14729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14729 */
start_f__GEONW__PON__BAA__BO__08__nodeC(v__nodeC);
current_location.update_lineno(14730);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14730 */
start_f__GEONW__PON__BAA__BO__08__nodeD(v__nodeD);
current_location.update_lineno(14733);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14733 */
{
LibCommon__Sync::SyncPointList tmp_696;
tmp_696.set_size(2);
tmp_696[0] = LibCommon__Sync::c__prDone;
tmp_696[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_696);
}
current_location.update_lineno(14736);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14736 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BAA__BO__08(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BO_08(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BO_08", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BO__08__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14743, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BO_08_nodeB");
current_location.update_lineno(14748);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14748 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14749);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14749 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14752 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(14753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14753 */
{
tmp_697:
alt_status tmp_697_alt_flag_0 = ALT_MAYBE;
alt_status tmp_697_alt_flag_1 = ALT_MAYBE;
alt_status tmp_697_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_697_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14754);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14754 */
tmp_697_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_697_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14755);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14755 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(14756);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14756 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14757);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14757 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_697_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14759);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14759 */
tmp_697_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_697_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14760);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14760 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14761);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14761 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_697_default_flag == ALT_MAYBE) {
tmp_697_default_flag = TTCN_Default::try_altsteps();
if (tmp_697_default_flag == ALT_YES || tmp_697_default_flag == ALT_BREAK) break;
else if (tmp_697_default_flag == ALT_REPEAT) goto tmp_697;
}
current_location.update_lineno(14753);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14753 */
if (tmp_697_alt_flag_0 == ALT_NO && tmp_697_alt_flag_1 == ALT_NO && tmp_697_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14753 and 14763.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14766);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14766 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BO__08__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BO_08_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BO_08_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BO__08__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14773, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BO_08_nodeC");
current_location.update_lineno(14778);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14778 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14779);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14779 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14782 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.start();
current_location.update_lineno(14783);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14783 */
{
tmp_698:
alt_status tmp_698_alt_flag_0 = ALT_MAYBE;
alt_status tmp_698_alt_flag_1 = ALT_MAYBE;
alt_status tmp_698_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_698_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14784 */
tmp_698_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template(ANY_VALUE), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_698_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14785 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.stop();
current_location.update_lineno(14786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14786 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_259).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14787);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14787 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_698_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14789);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14789 */
tmp_698_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__noac.timeout();
if (tmp_698_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14790);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14790 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_122).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14791 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_698_default_flag == ALT_MAYBE) {
tmp_698_default_flag = TTCN_Default::try_altsteps();
if (tmp_698_default_flag == ALT_YES || tmp_698_default_flag == ALT_BREAK) break;
else if (tmp_698_default_flag == ALT_REPEAT) goto tmp_698;
}
current_location.update_lineno(14783);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14783 */
if (tmp_698_alt_flag_0 == ALT_NO && tmp_698_alt_flag_1 == ALT_NO && tmp_698_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14783 and 14793.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14796);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14796 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BO__08__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BO_08_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BO_08_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BO__08__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14803, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BO_08_nodeD");
current_location.update_lineno(14806);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14806 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeD(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeD));
current_location.update_lineno(14809);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14809 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14810);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14810 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14813);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14813 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeD), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14823);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14823 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14826);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14826 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BO__08__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BO_08_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BO_08_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__09()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14837, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_09");
current_location.update_lineno(14840);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14840 */
COMPONENT v__nodeB;
current_location.update_lineno(14841);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14841 */
COMPONENT v__nodeE;
current_location.update_lineno(14844);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14844 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(14845);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14845 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14846);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14846 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14847);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14847 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14849);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14849 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(14850);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14850 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14851);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14851 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14852);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14852 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14855);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14855 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(14856);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14856 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14857);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14857 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(14858);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14858 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(14862);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14862 */
LibItsGeoNetworking__Functions::f__cf05Up(LibItsGeoNetworking__Functions::f__cf05Up_p__mainUtComponent_defval);
current_location.update_lineno(14867);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14867 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(14868);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14868 */
v__nodeE = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeE);
current_location.update_lineno(14869);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14869 */
start_f__GEONW__PON__BAA__BV__09__nodeB(v__nodeB);
current_location.update_lineno(14870);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14870 */
start_f__GEONW__PON__BAA__BV__09__nodeE(v__nodeE);
current_location.update_lineno(14873);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14873 */
{
LibCommon__Sync::SyncPointList tmp_701;
tmp_701.set_size(2);
tmp_701[0] = LibCommon__Sync::c__prDone;
tmp_701[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_701);
}
current_location.update_lineno(14876);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14876 */
LibItsGeoNetworking__Functions::f__cf05Down();
}

void start_f__GEONW__PON__BAA__BV__09(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_09(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_09", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__09__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14883, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_09_nodeB");
current_location.update_lineno(14886);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14886 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(14887);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14887 */
TIMER t__toCbf("t_toCbf", ((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) * 9.5e-1) / 1.0e3));
current_location.update_lineno(14890);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14890 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(14891);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14891 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14894);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14894 */
t__toCbf.start();
current_location.update_lineno(14895);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14895 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14896 */
{
tmp_702:
alt_status tmp_702_alt_flag_0 = ALT_MAYBE;
alt_status tmp_702_alt_flag_1 = ALT_MAYBE;
alt_status tmp_702_alt_flag_2 = ALT_MAYBE;
alt_status tmp_702_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_702_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14897);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14897 */
tmp_702_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_702_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14902);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14902 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14904);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14904 */
if (t__toCbf.running()) {
current_location.update_lineno(14905);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14905 */
t__toCbf.stop();
current_location.update_lineno(14906);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14906 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14907);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14907 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(14910);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14910 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14911);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14911 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_702_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14914);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14914 */
tmp_702_alt_flag_1 = t__toCbf.timeout();
if (tmp_702_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14915);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14915 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14916);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14916 */
goto tmp_702;
}
}
if (tmp_702_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(14918);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14918 */
tmp_702_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_702_alt_flag_2 == ALT_YES) {
current_location.update_lineno(14919);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14919 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14920);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14920 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_702_default_flag == ALT_MAYBE) {
tmp_702_default_flag = TTCN_Default::try_altsteps();
if (tmp_702_default_flag == ALT_YES || tmp_702_default_flag == ALT_BREAK) break;
else if (tmp_702_default_flag == ALT_REPEAT) goto tmp_702;
}
current_location.update_lineno(14896);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14896 */
if (tmp_702_alt_flag_0 == ALT_NO && tmp_702_alt_flag_1 == ALT_NO && tmp_702_alt_flag_2 == ALT_NO && tmp_702_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14896 and 14922.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14925);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14925 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__09__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_09_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_09_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__09__nodeE()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14932, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_09_nodeE");
current_location.update_lineno(14935);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14935 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(14936);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14936 */
TIMER t__toCbf("t_toCbf", ((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) * 9.5e-1) / 1.0e3));
current_location.update_lineno(14939);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14939 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(14940);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14940 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(14943);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14943 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(14954);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14954 */
t__toCbf.start();
current_location.update_lineno(14955);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14955 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(14956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14956 */
{
tmp_703:
alt_status tmp_703_alt_flag_0 = ALT_MAYBE;
alt_status tmp_703_alt_flag_1 = ALT_MAYBE;
alt_status tmp_703_alt_flag_2 = ALT_MAYBE;
alt_status tmp_703_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_703_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(14957);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14957 */
tmp_703_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_703_alt_flag_0 == ALT_YES) {
current_location.update_lineno(14962);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14962 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(14964);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14964 */
if (t__toCbf.running()) {
current_location.update_lineno(14965);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14965 */
t__toCbf.stop();
current_location.update_lineno(14966);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14966 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14967);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14967 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(14970);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14970 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14971);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14971 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_703_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(14974);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14974 */
tmp_703_alt_flag_1 = t__toCbf.timeout();
if (tmp_703_alt_flag_1 == ALT_YES) {
current_location.update_lineno(14975);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14975 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14976);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14976 */
goto tmp_703;
}
}
if (tmp_703_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(14978);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14978 */
tmp_703_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_703_alt_flag_2 == ALT_YES) {
current_location.update_lineno(14979);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14979 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(14980);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14980 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_703_default_flag == ALT_MAYBE) {
tmp_703_default_flag = TTCN_Default::try_altsteps();
if (tmp_703_default_flag == ALT_YES || tmp_703_default_flag == ALT_BREAK) break;
else if (tmp_703_default_flag == ALT_REPEAT) goto tmp_703;
}
current_location.update_lineno(14956);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14956 */
if (tmp_703_alt_flag_0 == ALT_NO && tmp_703_alt_flag_1 == ALT_NO && tmp_703_alt_flag_2 == ALT_NO && tmp_703_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 14956 and 14982.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(14985);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14985 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__09__nodeE(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_09_nodeE(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_09_nodeE", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__10()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 14996, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_10");
current_location.update_lineno(14999);
/* ItsGeoNetworking_TpFunctions.ttcn, line 14999 */
COMPONENT v__nodeB;
current_location.update_lineno(15000);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15000 */
COMPONENT v__nodeC;
current_location.update_lineno(15001);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15001 */
COMPONENT v__nodeD;
current_location.update_lineno(15004);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15004 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(15005);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15005 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15006);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15006 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15007);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15007 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15009);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15009 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(15010);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15010 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15011);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15011 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15012);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15012 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15015);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15015 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(15016);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15016 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15017);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15017 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15018);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15018 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15022);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15022 */
LibItsGeoNetworking__Functions::f__cf04Up(LibItsGeoNetworking__Functions::f__cf04Up_p__mainUtComponent_defval);
current_location.update_lineno(15027);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15027 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(15028);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15028 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(15029);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15029 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(15030);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15030 */
start_f__GEONW__PON__BAA__BV__10__nodeB(v__nodeB);
current_location.update_lineno(15031);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15031 */
start_f__GEONW__PON__BAA__BV__10__nodeC(v__nodeC);
current_location.update_lineno(15032);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15032 */
start_f__GEONW__PON__BAA__BV__10__nodeD(v__nodeD);
current_location.update_lineno(15035);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15035 */
{
LibCommon__Sync::SyncPointList tmp_707;
tmp_707.set_size(2);
tmp_707[0] = LibCommon__Sync::c__prDone;
tmp_707[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync3ClientsAndStop(tmp_707);
}
current_location.update_lineno(15038);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15038 */
LibItsGeoNetworking__Functions::f__cf04Down();
}

void start_f__GEONW__PON__BAA__BV__10(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_10(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_10", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__10__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15045, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_10_nodeB");
current_location.update_lineno(15048);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15048 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15051);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15051 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15052);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15052 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15055);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15055 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15056 */
{
tmp_708:
alt_status tmp_708_alt_flag_0 = ALT_MAYBE;
alt_status tmp_708_alt_flag_1 = ALT_MAYBE;
alt_status tmp_708_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_708_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15057);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15057 */
tmp_708_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_708_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15062);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15062 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15063);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15063 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15064);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15064 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_708_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15066);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15066 */
tmp_708_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_708_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15067);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15067 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15068);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15068 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_708_default_flag == ALT_MAYBE) {
tmp_708_default_flag = TTCN_Default::try_altsteps();
if (tmp_708_default_flag == ALT_YES || tmp_708_default_flag == ALT_BREAK) break;
else if (tmp_708_default_flag == ALT_REPEAT) goto tmp_708;
}
current_location.update_lineno(15056);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15056 */
if (tmp_708_alt_flag_0 == ALT_NO && tmp_708_alt_flag_1 == ALT_NO && tmp_708_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15056 and 15070.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15073);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15073 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__10__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_10_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_10_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__10__nodeC()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15080, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_10_nodeC");
current_location.update_lineno(15083);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15083 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15086);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15086 */
LibItsGeoNetworking__Functions::f__prNonNeighbour();
current_location.update_lineno(15087);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15087 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15090);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15090 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(15100);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15100 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15101 */
{
tmp_709:
alt_status tmp_709_alt_flag_0 = ALT_MAYBE;
alt_status tmp_709_alt_flag_1 = ALT_MAYBE;
alt_status tmp_709_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_709_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15102);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15102 */
tmp_709_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_709_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15107);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15107 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15108);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15108 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15109);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15109 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_709_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15111);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15111 */
tmp_709_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_709_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15112);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15112 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15113);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15113 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_709_default_flag == ALT_MAYBE) {
tmp_709_default_flag = TTCN_Default::try_altsteps();
if (tmp_709_default_flag == ALT_YES || tmp_709_default_flag == ALT_BREAK) break;
else if (tmp_709_default_flag == ALT_REPEAT) goto tmp_709;
}
current_location.update_lineno(15101);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15101 */
if (tmp_709_alt_flag_0 == ALT_NO && tmp_709_alt_flag_1 == ALT_NO && tmp_709_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15101 and 15115.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15118);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15118 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__10__nodeC(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_10_nodeC(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_10_nodeC", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__10__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15125, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_10_nodeD");
current_location.update_lineno(15128);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15128 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15131);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15131 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15132);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15132 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15135);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15135 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15136);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15136 */
{
tmp_710:
alt_status tmp_710_alt_flag_0 = ALT_MAYBE;
alt_status tmp_710_alt_flag_1 = ALT_MAYBE;
alt_status tmp_710_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_710_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15137);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15137 */
tmp_710_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_710_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15142);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15142 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15143);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15143 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_120).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15144);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15144 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_710_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15146);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15146 */
tmp_710_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_710_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15147);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15147 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_105).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15148);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15148 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_710_default_flag == ALT_MAYBE) {
tmp_710_default_flag = TTCN_Default::try_altsteps();
if (tmp_710_default_flag == ALT_YES || tmp_710_default_flag == ALT_BREAK) break;
else if (tmp_710_default_flag == ALT_REPEAT) goto tmp_710;
}
current_location.update_lineno(15136);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15136 */
if (tmp_710_alt_flag_0 == ALT_NO && tmp_710_alt_flag_1 == ALT_NO && tmp_710_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15136 and 15150.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15153);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15153 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__10__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_10_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_10_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__11()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15164, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_11");
current_location.update_lineno(15167);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15167 */
COMPONENT v__nodeB;
current_location.update_lineno(15168);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15168 */
COMPONENT v__nodeD;
current_location.update_lineno(15171);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15171 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(15172);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15172 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15173);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15173 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15174);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15174 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15176);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15176 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastForwardingAlgorithm() != LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced)) {
current_location.update_lineno(15177);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15177 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_258).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15178);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15178 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15179);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15179 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15182);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15182 */
if ((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() < 300)) {
current_location.update_lineno(15183);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15183 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_244).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15184);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15184 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15185);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15185 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15189);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15189 */
LibItsGeoNetworking__Functions::f__cf07Up(LibItsGeoNetworking__Functions::f__cf07Up_p__mainUtComponent_defval);
current_location.update_lineno(15194);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15194 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(15195);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15195 */
v__nodeD = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeD);
current_location.update_lineno(15196);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15196 */
start_f__GEONW__PON__BAA__BV__11__nodeB(v__nodeB);
current_location.update_lineno(15197);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15197 */
start_f__GEONW__PON__BAA__BV__11__nodeD(v__nodeD);
current_location.update_lineno(15200);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15200 */
{
LibCommon__Sync::SyncPointList tmp_713;
tmp_713.set_size(2);
tmp_713[0] = LibCommon__Sync::c__prDone;
tmp_713[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_713);
}
current_location.update_lineno(15203);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15203 */
LibItsGeoNetworking__Functions::f__cf06Down();
}

void start_f__GEONW__PON__BAA__BV__11(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_11(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_11", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__11__nodeB()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15210, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_11_nodeB");
current_location.update_lineno(15213);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15213 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(15216);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15216 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15217);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15217 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(15225);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15225 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15228);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15228 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15229 */
{
tmp_714:
alt_status tmp_714_alt_flag_0 = ALT_MAYBE;
alt_status tmp_714_alt_flag_1 = ALT_MAYBE;
alt_status tmp_714_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_714_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15230);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15230 */
tmp_714_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_714_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15235);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15235 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15236);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15236 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15237);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15237 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_714_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15239);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15239 */
tmp_714_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_714_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15240);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15240 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15241);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15241 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_714_default_flag == ALT_MAYBE) {
tmp_714_default_flag = TTCN_Default::try_altsteps();
if (tmp_714_default_flag == ALT_YES || tmp_714_default_flag == ALT_BREAK) break;
else if (tmp_714_default_flag == ALT_REPEAT) goto tmp_714;
}
current_location.update_lineno(15229);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15229 */
if (tmp_714_alt_flag_0 == ALT_NO && tmp_714_alt_flag_1 == ALT_NO && tmp_714_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15229 and 15243.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15246);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15246 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__11__nodeB(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_11_nodeB(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_11_nodeB", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__PON__BAA__BV__11__nodeD()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15253, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_PON_BAA_BV_11_nodeD");
current_location.update_lineno(15256);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15256 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB));
current_location.update_lineno(15257);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15257 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(15258);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15258 */
TIMER t__toCbf("t_toCbf", (((int2float(LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime()) + ((int2float((LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMinTime() - LibItsGeoNetworking__Functions::f__getGeoBroadcastCbfMaxTime())) / int2float(LibItsGeoNetworking__Functions::f__getCbfMaxCommunicationRange())) * LibItsGeoNetworking__Functions::f__distance(v__longPosVectorNodeB, v__longPosVectorIut))) * 9.5e-1) / 1.0e3));
current_location.update_lineno(15265);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15265 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15266);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15266 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15269);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15269 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(15278);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15278 */
t__toCbf.start();
current_location.update_lineno(15279);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15279 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15280 */
{
tmp_715:
alt_status tmp_715_alt_flag_0 = ALT_MAYBE;
alt_status tmp_715_alt_flag_1 = ALT_MAYBE;
alt_status tmp_715_alt_flag_2 = ALT_MAYBE;
alt_status tmp_715_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_715_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15281);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15281 */
tmp_715_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwBroadcastPacketWithArea(LibItsGeoNetworking__Templates::mw__longPosVectorPosition(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB)), INTEGER_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area1))), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_715_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15286);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15286 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15288);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15288 */
if (t__toCbf.running()) {
current_location.update_lineno(15289);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15289 */
t__toCbf.stop();
current_location.update_lineno(15290);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15290 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_247).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15291);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15291 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
else {
current_location.update_lineno(15294);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15294 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_248).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15295);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15295 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
break;
}
}
if (tmp_715_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15298);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15298 */
tmp_715_alt_flag_1 = t__toCbf.timeout();
if (tmp_715_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15299);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15299 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_249).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15300);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15300 */
goto tmp_715;
}
}
if (tmp_715_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(15302);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15302 */
tmp_715_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_715_alt_flag_2 == ALT_YES) {
current_location.update_lineno(15303);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15303 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_30).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15304);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15304 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_715_default_flag == ALT_MAYBE) {
tmp_715_default_flag = TTCN_Default::try_altsteps();
if (tmp_715_default_flag == ALT_YES || tmp_715_default_flag == ALT_BREAK) break;
else if (tmp_715_default_flag == ALT_REPEAT) goto tmp_715;
}
current_location.update_lineno(15280);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15280 */
if (tmp_715_alt_flag_0 == ALT_NO && tmp_715_alt_flag_1 == ALT_NO && tmp_715_alt_flag_2 == ALT_NO && tmp_715_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15280 and 15306.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15309);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15309 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__PON__BAA__BV__11__nodeD(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BAA_BV_11_nodeD(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_PON_BAA_BV_11_nodeD", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__LOS__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15328, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_LOS_BV_01");
current_location.update_lineno(15331);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15331 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA;
current_location.update_lineno(15332);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15332 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeB;
current_location.update_lineno(15333);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15333 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut;
current_location.update_lineno(15334);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15334 */
LibItsGeoNetworking__TestSystem::GeoNetworkingInd v__msg;
current_location.update_lineno(15335);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15335 */
INTEGER v__packetSize(0);
current_location.update_lineno(15336);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15336 */
INTEGER v__index(0);
current_location.update_lineno(15337);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15337 */
INTEGER v__nbrOfPackets(0);
current_location.update_lineno(15340);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15340 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__LS__REQ__SRC))) {
current_location.update_lineno(15341);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15341 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_59).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15342);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15342 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15343);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15343 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15347);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15347 */
LibItsGeoNetworking__Functions::f__cf01Up();
current_location.update_lineno(15352);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15352 */
v__longPosVectorNodeA = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA);
current_location.update_lineno(15353);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15353 */
v__longPosVectorNodeB = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(15354);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15354 */
v__longPosVectorIut = LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut);
current_location.update_lineno(15355);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15355 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15358);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15358 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeB).gnAddr(), os_3))))) {
current_location.update_lineno(15359);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15359 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15360);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15360 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(15362);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15362 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15363 */
{
tmp_719:
alt_status tmp_719_alt_flag_0 = ALT_MAYBE;
alt_status tmp_719_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_719_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15364);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15364 */
tmp_719_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeB))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), &(v__msg), any_compref, NULL);
if (tmp_719_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15374);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15374 */
LibItsGeoNetworking__TestSystem::GeoNetworkingReq v__req;
current_location.update_lineno(15375);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15375 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15378);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15378 */
v__req.msgOut() = const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingInd&>(v__msg).msgIn();
current_location.update_lineno(15379);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15379 */
{
OCTETSTRING tmp_722;
TTCN_Buffer tmp_723;
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu const& tmp_724 = const_cast< const LibItsGeoNetworking__TestSystem::GeoNetworkingReq&>(v__req).msgOut();
tmp_724.encode(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_descr_, tmp_723, TTCN_EncDec::CT_RAW);
tmp_723.get_string(tmp_722);
v__packetSize = bit2oct(oct2bit(tmp_722)).lengthof();
}
break;
}
}
if (tmp_719_default_flag == ALT_MAYBE) {
tmp_719_default_flag = TTCN_Default::try_altsteps();
if (tmp_719_default_flag == ALT_YES || tmp_719_default_flag == ALT_BREAK) break;
else if (tmp_719_default_flag == ALT_REPEAT) goto tmp_719;
}
current_location.update_lineno(15363);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15363 */
if (tmp_719_alt_flag_0 == ALT_NO && tmp_719_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15363 and 15381.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15384);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15384 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessage(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr()))))) {
current_location.update_lineno(15385);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15385 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15386);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15386 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(15388);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15388 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15389 */
{
tmp_725:
alt_status tmp_725_alt_flag_0 = ALT_MAYBE;
alt_status tmp_725_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_725_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15390);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15390 */
tmp_725_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveLsRequest_instance(INTEGER_template(ANY_VALUE), OCTETSTRING_template(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr().mid()), v__longPosVectorIut);
if (tmp_725_alt_flag_0 == ALT_REPEAT) goto tmp_725;
if (tmp_725_alt_flag_0 == ALT_BREAK) break;
if (tmp_725_alt_flag_0 == ALT_YES) break;
}
if (tmp_725_default_flag == ALT_MAYBE) {
tmp_725_default_flag = TTCN_Default::try_altsteps();
if (tmp_725_default_flag == ALT_YES || tmp_725_default_flag == ALT_BREAK) break;
else if (tmp_725_default_flag == ALT_REPEAT) goto tmp_725;
}
current_location.update_lineno(15389);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15389 */
if (tmp_725_alt_flag_0 == ALT_NO && tmp_725_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15389 and 15396.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15397);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15397 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15401);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15401 */
v__nbrOfPackets = ((LibItsGeoNetworking__Functions::f__getLsPacketBufferSize() / v__packetSize) + 1);
current_location.update_lineno(15402);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15402 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((((cs_0 + TTCN_Runtime::get_testcasename()) + cs_261) + int2str(v__nbrOfPackets)) + cs_262).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15403 */
v__index = 1;
current_location.update_lineno(15403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15403 */
for ( ; ; ) {
current_location.update_lineno(15403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15403 */
if (!(v__index <= v__nbrOfPackets)) break;
current_location.update_lineno(15404);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15404 */
if ((!(LibItsGeoNetworking__Functions::f__utTriggerEvent(LibItsGeoNetworking__Templates::m__generateGeoUnicastMessageWithPayload(const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector&>(v__longPosVectorNodeA).gnAddr(), char2oct((cs_263 + oct2str(int2oct(v__index, 2))))))))) {
current_location.update_lineno(15405);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15405 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15406);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15406 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
current_location.update_lineno(15403);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15403 */
{
INTEGER tmp_728;
++v__index;
}
}
current_location.update_lineno(15410);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15410 */
LibCommon__Time::f__sleepIgnoreDef(5.0e-1);
current_location.update_lineno(15411);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15411 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwLsReplyPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeB), LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorIut)), INTEGER_template(LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber)), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval)));
current_location.update_lineno(15424);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15424 */
v__index = 2;
current_location.update_lineno(15425);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15425 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15426 */
{
tmp_730:
alt_status tmp_730_alt_flag_0 = ALT_MAYBE;
alt_status tmp_730_alt_flag_1 = ALT_MAYBE;
alt_status tmp_730_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_730_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15427);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15427 */
tmp_730_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Functions::f__receiveGeoNetMessageWithPayload(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), LibItsGeoNetworking__Templates::f__adaptPayload__mw(OCTETSTRING_template(char2oct((cs_263 + oct2str(int2oct(v__index, 2))))))), NULL, any_compref, NULL);
if (tmp_730_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15440);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15440 */
if ((v__index < v__nbrOfPackets)) {
current_location.update_lineno(15441);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15441 */
{
INTEGER tmp_731;
++v__index;
}
current_location.update_lineno(15442);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15442 */
goto tmp_730;
}
current_location.update_lineno(15444);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15444 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15445);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15445 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_264).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15446);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15446 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
break;
}
}
if (tmp_730_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15448);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15448 */
tmp_730_alt_flag_1 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_730_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15449);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15449 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_265).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15450);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15450 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_730_default_flag == ALT_MAYBE) {
tmp_730_default_flag = TTCN_Default::try_altsteps();
if (tmp_730_default_flag == ALT_YES || tmp_730_default_flag == ALT_BREAK) break;
else if (tmp_730_default_flag == ALT_REPEAT) goto tmp_730;
}
current_location.update_lineno(15426);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15426 */
if (tmp_730_alt_flag_0 == ALT_NO && tmp_730_alt_flag_1 == ALT_NO && tmp_730_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15426 and 15452.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15455);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15455 */
LibItsGeoNetworking__Functions::f__poNeighbour();
current_location.update_lineno(15456);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15456 */
LibItsGeoNetworking__Functions::f__cf01Down();
}

void start_f__GEONW__CAP__LOS__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_LOS_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_LOS_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__01()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15470, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_01");
current_location.update_lineno(15473);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15473 */
COMPONENT v__nodeB;
current_location.update_lineno(15474);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15474 */
COMPONENT v__nodeC;
current_location.update_lineno(15475);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15475 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__geoNetworkingMsg;
current_location.update_lineno(15476);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15476 */
INTEGER v__packetSize(0);
current_location.update_lineno(15477);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15477 */
INTEGER v__nbrOfPackets(0);
current_location.update_lineno(15478);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15478 */
INTEGER v__payloadSize(LibItsCommon__Functions::f__min(1400, (LibItsGeoNetworking__Functions::f__getUcForwardingPacketBufferSize() / 10)));
current_location.update_lineno(15479);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15479 */
OCTETSTRING v__payload;
current_location.update_lineno(15480);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15480 */
INTEGER c__nbrOfDiscardedMessages(1);
current_location.update_lineno(15481);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15481 */
INTEGER v__sequenceNumberC(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(15484);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15484 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GUC__FWD))) {
current_location.update_lineno(15485);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15485 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_149).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15486);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15486 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15487);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15487 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15491);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15491 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(15496);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15496 */
v__payload = int2oct(0, v__payloadSize);
current_location.update_lineno(15497);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15497 */
v__geoNetworkingMsg = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwUnicastPacket(LibItsGeoNetworking__Templates::m__dummyLongPosVector, LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(LibItsGeoNetworking__Templates::m__dummyLongPosVector.valueof())), INTEGER_template(0), LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwUnicastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
current_location.update_lineno(15503);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15503 */
v__geoNetworkingMsg.gnPacket().packet().payload() = LibItsGeoNetworking__Templates::f__adaptPayload__m(OCTETSTRING_template(v__payload));
current_location.update_lineno(15504);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15504 */
{
OCTETSTRING tmp_736;
TTCN_Buffer tmp_737;
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu const& tmp_738 = v__geoNetworkingMsg.valueof();
tmp_738.encode(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_descr_, tmp_737, TTCN_EncDec::CT_RAW);
tmp_737.get_string(tmp_736);
v__packetSize = bit2oct(oct2bit(tmp_736)).lengthof();
}
current_location.update_lineno(15507);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15507 */
v__nbrOfPackets = (((LibItsGeoNetworking__Functions::f__getUcForwardingPacketBufferSize() / v__packetSize) + 1) + 1);
current_location.update_lineno(15508);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15508 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((((cs_0 + TTCN_Runtime::get_testcasename()) + cs_261) + int2str(v__nbrOfPackets)) + cs_262).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15511);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15511 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(15512);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15512 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(15513);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15513 */
start_f__GEONW__CAP__FPB__BV__01__nodeB(v__nodeB, v__sequenceNumberC, v__nbrOfPackets, 1);
current_location.update_lineno(15514);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15514 */
start_f__GEONW__CAP__FPB__BV__01__nodeC(v__nodeC, v__sequenceNumberC, v__nbrOfPackets, v__geoNetworkingMsg);
current_location.update_lineno(15517);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15517 */
{
LibCommon__Sync::SyncPointList tmp_742;
tmp_742.set_size(2);
tmp_742[0] = LibCommon__Sync::c__prDone;
tmp_742[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_742);
}
current_location.update_lineno(15520);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15520 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__CAP__FPB__BV__01(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_01(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_01", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__01__nodeB(const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const INTEGER& p__nbrOfDiscardedMessages)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15530, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_01_nodeB");
current_location.update_lineno(15537);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15537 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(15538);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15538 */
INTEGER v__expectedSeqNumber(((p__sequenceNumberC + p__nbrOfDiscardedMessages) + 1));
current_location.update_lineno(15539);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15539 */
INTEGER v__nbReceivedMessages(0);
current_location.update_lineno(15542);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15542 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(15543);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15543 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15546);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15546 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(15548);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15548 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15549 */
{
tmp_743:
alt_status tmp_743_alt_flag_0 = ALT_MAYBE;
alt_status tmp_743_alt_flag_1 = ALT_MAYBE;
alt_status tmp_743_alt_flag_2 = ALT_MAYBE;
alt_status tmp_743_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_743_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15550);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15550 */
tmp_743_alt_flag_0 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(v__expectedSeqNumber)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_743_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15560);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15560 */
{
INTEGER tmp_744;
++v__nbReceivedMessages;
}
current_location.update_lineno(15561);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15561 */
{
INTEGER tmp_745;
++v__expectedSeqNumber;
}
current_location.update_lineno(15562);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15562 */
goto tmp_743;
}
}
if (tmp_743_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15564);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15564 */
tmp_743_alt_flag_1 = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_geoNetworkingPort.receive(LibItsGeoNetworking__Templates::mw__geoNwInd(LibItsGeoNetworking__Templates::mw__geoNwPdu(LibItsGeoNetworking__Templates::mw__geoNwUnicastPacket(LibItsGeoNetworking__Templates::mw__shortPosVectorPosition(LibItsGeoNetworking__TypesAndValues::ShortPosVector_template(LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA))), INTEGER_template(ANY_VALUE)), LibItsGeoNetworking__Templates::mw__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::mw__geoNwPdu_p__hopLimit_defval)), NULL, any_compref, NULL);
if (tmp_743_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15574);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15574 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15575);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15575 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_266).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15576);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15576 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_743_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(15578);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15578 */
tmp_743_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_743_alt_flag_2 == ALT_YES) {
current_location.update_lineno(15579);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15579 */
if ((v__nbReceivedMessages == (p__nbrOfPackets - p__nbrOfDiscardedMessages))) {
current_location.update_lineno(15580);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15580 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_267).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15581);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15581 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(15584);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15584 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_268).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15585);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15585 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_743_default_flag == ALT_MAYBE) {
tmp_743_default_flag = TTCN_Default::try_altsteps();
if (tmp_743_default_flag == ALT_YES || tmp_743_default_flag == ALT_BREAK) break;
else if (tmp_743_default_flag == ALT_REPEAT) goto tmp_743;
}
current_location.update_lineno(15549);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15549 */
if (tmp_743_alt_flag_0 == ALT_NO && tmp_743_alt_flag_1 == ALT_NO && tmp_743_alt_flag_2 == ALT_NO && tmp_743_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15549 and 15588.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15591);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15591 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__CAP__FPB__BV__01__nodeB(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const INTEGER& p__nbrOfDiscardedMessages)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_01_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfDiscardedMessages.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_01_nodeB", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__nbrOfPackets.encode_text(text_buf);
p__nbrOfDiscardedMessages.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__01__nodeC(const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNetworkingMsg)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15601, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_01_nodeC");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template p__geoNetworkingMsg_shadow(p__geoNetworkingMsg);
current_location.update_lineno(15608);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15608 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeA(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeA));
current_location.update_lineno(15609);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15609 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15610);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15610 */
INTEGER i(0);
current_location.update_lineno(15613);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15613 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15614);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15614 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber = p__sequenceNumberC;
current_location.update_lineno(15616);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15616 */
p__geoNetworkingMsg_shadow.gnPacket().packet().extendedHeader().geoUnicastHeader().srcPosVector() = v__longPosVectorNodeC;
current_location.update_lineno(15617);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15617 */
p__geoNetworkingMsg_shadow.gnPacket().packet().extendedHeader().geoUnicastHeader().dstPosVector() = LibItsGeoNetworking__Functions::f__longPosVector2ShortPosVector(v__longPosVectorNodeA);
current_location.update_lineno(15618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15618 */
i = 0;
current_location.update_lineno(15618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15618 */
for ( ; ; ) {
current_location.update_lineno(15618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15618 */
if (!(i < p__nbrOfPackets)) break;
current_location.update_lineno(15619);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15619 */
p__geoNetworkingMsg_shadow.gnPacket().packet().extendedHeader().geoUnicastHeader().seqNumber() = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber;
current_location.update_lineno(15620);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15620 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(p__geoNetworkingMsg_shadow));
current_location.update_lineno(15618);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15618 */
{
INTEGER tmp_751;
++i;
}
}
current_location.update_lineno(15622);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15622 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15625);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15625 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15628);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15628 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__CAP__FPB__BV__01__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNetworkingMsg)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_01_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__geoNetworkingMsg.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_01_nodeC", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__nbrOfPackets.encode_text(text_buf);
p__geoNetworkingMsg.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__02()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15639, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_02");
current_location.update_lineno(15642);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15642 */
COMPONENT v__nodeB;
current_location.update_lineno(15643);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15643 */
COMPONENT v__nodeC;
current_location.update_lineno(15644);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15644 */
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template v__geoNetworkingMsg;
current_location.update_lineno(15645);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15645 */
INTEGER v__packetSize(0);
current_location.update_lineno(15646);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15646 */
INTEGER v__nbrOfPackets(0);
current_location.update_lineno(15647);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15647 */
INTEGER c__nbrOfDiscardedMessages(1);
current_location.update_lineno(15648);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15648 */
INTEGER v__sequenceNumberC(LibItsGeoNetworking__Functions::f__getInitialSequenceNumber());
current_location.update_lineno(15649);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15649 */
OCTETSTRING c__defaultPayload(os_4);
current_location.update_lineno(15650);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15650 */
INTEGER c__itsGnMaxSduSize(1398);
current_location.update_lineno(15651);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15651 */
OCTETSTRING v__payload(os_4);
current_location.update_lineno(15654);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15654 */
if ((!(LibItsGeoNetworking__Pics::PICS__GN__GBC__FWD))) {
current_location.update_lineno(15655);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15655 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_175).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15656);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15656 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(15657);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15657 */
TTCN_Runtime::stop_execution();
}
current_location.update_lineno(15661);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15661 */
LibItsGeoNetworking__Functions::f__cf03Up(LibItsGeoNetworking__Functions::f__cf03Up_p__mainUtComponent_defval);
current_location.update_lineno(15666);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15666 */
v__geoNetworkingMsg = LibItsGeoNetworking__Templates::m__geoNwPdu(LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__Templates::m__dummyLongPosVector, INTEGER_template(0), LibItsGeoNetworking__Templates::m__dummyGeoBroadcastArea, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval), LibItsGeoNetworking__Templates::m__geoNwPdu_p__lifeTime_defval, LibItsGeoNetworking__Templates::m__geoNwPdu_p__hopLimit_defval);
for ( ; ; ) {
current_location.update_lineno(15671);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15671 */
if (!(v__payload.lengthof() < 1383)) break;
current_location.update_lineno(15672);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15672 */
{
OCTETSTRING tmp_753;
tmp_753 = (v__payload + os_4);
v__payload = tmp_753;
}
}
current_location.update_lineno(15675);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15675 */
v__geoNetworkingMsg.gnPacket().packet().payload() = LibItsGeoNetworking__Templates::f__adaptPayload__m(OCTETSTRING_template(v__payload));
current_location.update_lineno(15677);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15677 */
{
OCTETSTRING tmp_756;
TTCN_Buffer tmp_757;
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu const& tmp_758 = v__geoNetworkingMsg.valueof();
tmp_758.encode(LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_descr_, tmp_757, TTCN_EncDec::CT_RAW);
tmp_757.get_string(tmp_756);
v__packetSize = bit2oct(oct2bit(tmp_756)).lengthof();
}
current_location.update_lineno(15680);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15680 */
v__nbrOfPackets = ((LibItsGeoNetworking__Functions::f__getBcForwardingPacketBufferSize() / v__packetSize) + 1);
current_location.update_lineno(15683);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15683 */
v__nodeB = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeB);
current_location.update_lineno(15684);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15684 */
v__nodeC = LibItsGeoNetworking__Functions::f__getComponent(LibItsGeoNetworking__TypesAndValues::c__compNodeC);
current_location.update_lineno(15685);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15685 */
start_f__GEONW__CAP__FPB__BV__02__nodeB(v__nodeB, v__sequenceNumberC, v__nbrOfPackets, 1);
current_location.update_lineno(15686);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15686 */
start_f__GEONW__CAP__FPB__BV__02__nodeC(v__nodeC, v__sequenceNumberC, v__nbrOfPackets, v__geoNetworkingMsg);
current_location.update_lineno(15689);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15689 */
{
LibCommon__Sync::SyncPointList tmp_762;
tmp_762.set_size(2);
tmp_762[0] = LibCommon__Sync::c__prDone;
tmp_762[1] = LibCommon__Sync::c__tbDone;
LibCommon__Sync::f__serverSync2ClientsAndStop(tmp_762);
}
current_location.update_lineno(15692);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15692 */
LibItsGeoNetworking__Functions::f__cf03Down();
}

void start_f__GEONW__CAP__FPB__BV__02(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_02(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_02", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__02__nodeB(const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const INTEGER& p__nbrOfDiscardedMessages)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15702, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_02_nodeB");
current_location.update_lineno(15709);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15709 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorIut(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compIut));
current_location.update_lineno(15710);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15710 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15711);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15711 */
INTEGER v__expectedSeqNumber((p__sequenceNumberC + p__nbrOfDiscardedMessages));
current_location.update_lineno(15712);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15712 */
INTEGER v__nbReceivedMessages(0);
current_location.update_lineno(15715);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15715 */
LibItsGeoNetworking__Functions::f__prDefault();
current_location.update_lineno(15716);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15716 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15719);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15719 */
LibItsGeoNetworking__Functions::f__startBeingNeighbour();
current_location.update_lineno(15721);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15721 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.start();
current_location.update_lineno(15722);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15722 */
{
tmp_763:
alt_status tmp_763_alt_flag_0 = ALT_MAYBE;
alt_status tmp_763_alt_flag_1 = ALT_MAYBE;
alt_status tmp_763_alt_flag_2 = ALT_MAYBE;
alt_status tmp_763_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_763_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(15723);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15723 */
tmp_763_alt_flag_0 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(v__expectedSeqNumber));
if (tmp_763_alt_flag_0 == ALT_REPEAT) goto tmp_763;
if (tmp_763_alt_flag_0 == ALT_BREAK) break;
if (tmp_763_alt_flag_0 == ALT_YES) {
current_location.update_lineno(15727);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15727 */
{
INTEGER tmp_764;
++v__nbReceivedMessages;
}
current_location.update_lineno(15728);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15728 */
{
INTEGER tmp_765;
++v__expectedSeqNumber;
}
current_location.update_lineno(15729);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15729 */
goto tmp_763;
}
}
if (tmp_763_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(15731);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15731 */
tmp_763_alt_flag_1 = LibItsGeoNetworking__Functions::a__receiveGeoBroadcast_instance(LibItsGeoNetworking__Templates::mw__longPosVectorPosition__withDelta(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC)), INTEGER_template(ANY_VALUE));
if (tmp_763_alt_flag_1 == ALT_REPEAT) goto tmp_763;
if (tmp_763_alt_flag_1 == ALT_BREAK) break;
if (tmp_763_alt_flag_1 == ALT_YES) {
current_location.update_lineno(15735);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15735 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.stop();
current_location.update_lineno(15736);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15736 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_266).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15737);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15737 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_763_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(15739);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15739 */
tmp_763_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout();
if (tmp_763_alt_flag_2 == ALT_YES) {
current_location.update_lineno(15740);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15740 */
if ((v__nbReceivedMessages == (p__nbrOfPackets - p__nbrOfDiscardedMessages))) {
current_location.update_lineno(15741);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15741 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_267).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15742);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15742 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
}
else {
current_location.update_lineno(15745);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15745 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_0 + TTCN_Runtime::get_testcasename()) + cs_268).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(15746);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15746 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__error);
}
break;
}
}
if (tmp_763_default_flag == ALT_MAYBE) {
tmp_763_default_flag = TTCN_Default::try_altsteps();
if (tmp_763_default_flag == ALT_YES || tmp_763_default_flag == ALT_BREAK) break;
else if (tmp_763_default_flag == ALT_REPEAT) goto tmp_763;
}
current_location.update_lineno(15722);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15722 */
if (tmp_763_alt_flag_0 == ALT_NO && tmp_763_alt_flag_1 == ALT_NO && tmp_763_alt_flag_2 == ALT_NO && tmp_763_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ItsGeoNetworking_TpFunctions.ttcn between lines 15722 and 15749.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(15752);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15752 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__CAP__FPB__BV__02__nodeB(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const INTEGER& p__nbrOfDiscardedMessages)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_02_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfDiscardedMessages.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_02_nodeB", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__nbrOfPackets.encode_text(text_buf);
p__nbrOfDiscardedMessages.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__GEONW__CAP__FPB__BV__02__nodeC(const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNetworkingMsg)
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 15762, TTCN_Location::LOCATION_FUNCTION, "f_GEONW_CAP_FPB_BV_02_nodeC");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template p__geoNetworkingMsg_shadow(p__geoNetworkingMsg);
current_location.update_lineno(15769);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15769 */
LibItsGeoNetworking__TypesAndValues::LongPosVector v__longPosVectorNodeC(LibItsGeoNetworking__Functions::f__getPosition(LibItsGeoNetworking__TypesAndValues::c__compNodeC));
current_location.update_lineno(15770);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15770 */
INTEGER i(0);
current_location.update_lineno(15771);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15771 */
LibItsGeoNetworking__TypesAndValues::Payload v__payload(p__geoNetworkingMsg_shadow.gnPacket().packet().payload().valueof());
current_location.update_lineno(15774);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15774 */
LibItsGeoNetworking__Functions::f__prNeighbour();
current_location.update_lineno(15775);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15775 */
LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber = p__sequenceNumberC;
current_location.update_lineno(15777);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15777 */
p__geoNetworkingMsg_shadow.gnPacket().packet() = LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket(LibItsGeoNetworking__TypesAndValues::LongPosVector_template(v__longPosVectorNodeC), INTEGER_template(0), LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template(LibItsGeoNetworking__Functions::f__getGeoBroadcastArea(LibItsGeoNetworking__TypesAndValues::c__area2)), LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__hopLimit_defval, LibItsGeoNetworking__Templates::m__geoNwBroadcastPacket_p__trafficClass_defval);
current_location.update_lineno(15782);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15782 */
p__geoNetworkingMsg_shadow.gnPacket().packet().payload() = v__payload;
current_location.update_lineno(15784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15784 */
i = 0;
current_location.update_lineno(15784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15784 */
for ( ; ; ) {
current_location.update_lineno(15784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15784 */
if (!(i < p__nbrOfPackets)) break;
current_location.update_lineno(15785);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15785 */
p__geoNetworkingMsg_shadow.gnPacket().packet().extendedHeader().geoBroadcastHeader().seqNumber() = LibItsGeoNetworking__TestSystem::ItsGeoNetworking_component_vc__localSeqNumber;
current_location.update_lineno(15786);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15786 */
LibItsGeoNetworking__Functions::f__sendGeoNetMessage(LibItsGeoNetworking__Templates::m__geoNwReq__linkLayerBroadcast(p__geoNetworkingMsg_shadow));
current_location.update_lineno(15784);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15784 */
{
INTEGER tmp_771;
++i;
}
}
current_location.update_lineno(15788);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15788 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__prDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15791);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15791 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(LibCommon__Sync::c__tbDone, LibCommon__VerdictControl::FncRetCode::e__success);
current_location.update_lineno(15794);
/* ItsGeoNetworking_TpFunctions.ttcn, line 15794 */
LibItsGeoNetworking__Functions::f__poNeighbour();
}

void start_f__GEONW__CAP__FPB__BV__02__nodeC(const COMPONENT& component_reference, const INTEGER& p__sequenceNumberC, const INTEGER& p__nbrOfPackets, const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNetworkingMsg)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_02_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__geoNetworkingMsg.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "ItsGeoNetworking_TpFunctions", "f_GEONW_CAP_FPB_BV_02_nodeC", text_buf);
p__sequenceNumberC.encode_text(text_buf);
p__nbrOfPackets.encode_text(text_buf);
p__geoNetworkingMsg.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "ItsGeoNetworking_TpFunctions");
LibItsGeoNetworking__Functions::module_object.pre_init_module();
module_object.add_function("f_GEONW_FDV_BAH_BV_01", (genericfunc_t)&f__GEONW__FDV__BAH__BV__01, (genericfunc_t)&start_f__GEONW__FDV__BAH__BV__01);
module_object.add_function("f_GEONW_FDV_BAH_BI_02", (genericfunc_t)&f__GEONW__FDV__BAH__BI__02, (genericfunc_t)&start_f__GEONW__FDV__BAH__BI__02);
module_object.add_function("f_GEONW_FDV_COH_BV_01", (genericfunc_t)&f__GEONW__FDV__COH__BV__01, (genericfunc_t)&start_f__GEONW__FDV__COH__BV__01);
module_object.add_function("f_GEONW_FDV_COH_BV_02", (genericfunc_t)&f__GEONW__FDV__COH__BV__02, (genericfunc_t)&start_f__GEONW__FDV__COH__BV__02);
module_object.add_function("f_GEONW_FDV_COH_BV_03", (genericfunc_t)&f__GEONW__FDV__COH__BV__03, (genericfunc_t)&start_f__GEONW__FDV__COH__BV__03);
module_object.add_function("f_GEONW_FDV_COH_BO_04", (genericfunc_t)&f__GEONW__FDV__COH__BO__04, (genericfunc_t)&start_f__GEONW__FDV__COH__BO__04);
module_object.add_function("f_GEONW_FDV_COH_BO_04_nodeB", (genericfunc_t)&f__GEONW__FDV__COH__BO__04__nodeB, (genericfunc_t)&start_f__GEONW__FDV__COH__BO__04__nodeB);
module_object.add_function("f_GEONW_FDV_COH_BO_04_nodeD", (genericfunc_t)&f__GEONW__FDV__COH__BO__04__nodeD, (genericfunc_t)&start_f__GEONW__FDV__COH__BO__04__nodeD);
module_object.add_function("f_GEONW_FDV_BEA_BV_01", (genericfunc_t)&f__GEONW__FDV__BEA__BV__01, (genericfunc_t)&start_f__GEONW__FDV__BEA__BV__01);
module_object.add_function("f_GEONW_FDV_BEA_BV_02", (genericfunc_t)&f__GEONW__FDV__BEA__BV__02, (genericfunc_t)&start_f__GEONW__FDV__BEA__BV__02);
module_object.add_function("f_GEONW_FDV_BEA_BV_03", (genericfunc_t)&f__GEONW__FDV__BEA__BV__03, (genericfunc_t)&start_f__GEONW__FDV__BEA__BV__03);
module_object.add_function("f_GEONW_FDV_BEA_BV_04", (genericfunc_t)&f__GEONW__FDV__BEA__BV__04, (genericfunc_t)&start_f__GEONW__FDV__BEA__BV__04);
module_object.add_function("f_GEONW_FDV_GUC_BV_01", (genericfunc_t)&f__GEONW__FDV__GUC__BV__01, (genericfunc_t)&start_f__GEONW__FDV__GUC__BV__01);
module_object.add_function("f_GEONW_FDV_GBC_BV_01", (genericfunc_t)&f__GEONW__FDV__GBC__BV__01, (genericfunc_t)&start_f__GEONW__FDV__GBC__BV__01);
module_object.add_function("f_GEONW_FDV_GAC_BV_01", (genericfunc_t)&f__GEONW__FDV__GAC__BV__01, (genericfunc_t)&start_f__GEONW__FDV__GAC__BV__01);
module_object.add_function("f_GEONW_FDV_SHB_BV_01", (genericfunc_t)&f__GEONW__FDV__SHB__BV__01, (genericfunc_t)&start_f__GEONW__FDV__SHB__BV__01);
module_object.add_function("f_GEONW_FDV_TSB_BV_01", (genericfunc_t)&f__GEONW__FDV__TSB__BV__01, (genericfunc_t)&start_f__GEONW__FDV__TSB__BV__01);
module_object.add_function("f_GEONW_PON_LOT_BV_01", (genericfunc_t)&f__GEONW__PON__LOT__BV__01, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__01);
module_object.add_function("f_GEONW_PON_LOT_BV_02", (genericfunc_t)&f__GEONW__PON__LOT__BV__02, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__02);
module_object.add_function("f_GEONW_PON_LOT_BV_03_01", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__01, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__01);
module_object.add_function("f_GEONW_PON_LOT_BV_03_02", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__02, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__02);
module_object.add_function("f_GEONW_PON_LOT_BV_03_03", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__03, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__03);
module_object.add_function("f_GEONW_PON_LOT_BV_03_04", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__04, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__04);
module_object.add_function("f_GEONW_PON_LOT_BV_03_05", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__05, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__05);
module_object.add_function("f_GEONW_PON_LOT_BV_03_06", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__06, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__06);
module_object.add_function("f_GEONW_PON_LOT_BV_03_07", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__07, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__07);
module_object.add_function("f_GEONW_PON_LOT_BV_03_08", (genericfunc_t)&f__GEONW__PON__LOT__BV__03__08, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__03__08);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_03_pre_1", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__03__pre__1, (genericfunc_t)&start_f__TP__GEONW__PON__LOT__BV__03__pre__1);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_03_pre_2", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__03__pre__2, (genericfunc_t)&start_f__TP__GEONW__PON__LOT__BV__03__pre__2);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_03_main", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__03__main, (genericfunc_t)&start_f__TP__GEONW__PON__LOT__BV__03__main);
module_object.add_function("f_GEONW_PON_LOT_BV_04", (genericfunc_t)&f__GEONW__PON__LOT__BV__04, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__04);
module_object.add_function("f_GEONW_PON_LOT_BV_05_01", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__01, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__01);
module_object.add_function("f_GEONW_PON_LOT_BV_05_02", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__02, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__02);
module_object.add_function("f_GEONW_PON_LOT_BV_05_03", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__03, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__03);
module_object.add_function("f_GEONW_PON_LOT_BV_05_04", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__04, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__04);
module_object.add_function("f_GEONW_PON_LOT_BV_05_05", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__05, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__05);
module_object.add_function("f_GEONW_PON_LOT_BV_05_06", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__06, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__06);
module_object.add_function("f_GEONW_PON_LOT_BV_05_07", (genericfunc_t)&f__GEONW__PON__LOT__BV__05__07, (genericfunc_t)&start_f__GEONW__PON__LOT__BV__05__07);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_05_pre_1", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__05__pre__1, NULL);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_05_pre_2", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__05__pre__2, (genericfunc_t)&start_f__TP__GEONW__PON__LOT__BV__05__pre__2);
module_object.add_function("f_TP_GEONW_PON_LOT_BV_05_main", (genericfunc_t)&f__TP__GEONW__PON__LOT__BV__05__main, (genericfunc_t)&start_f__TP__GEONW__PON__LOT__BV__05__main);
module_object.add_function("f_GEONW_PON_LPV_BV_01", (genericfunc_t)&f__GEONW__PON__LPV__BV__01, (genericfunc_t)&start_f__GEONW__PON__LPV__BV__01);
module_object.add_function("f_GEONW_PON_SQN_BV_01", (genericfunc_t)&f__GEONW__PON__SQN__BV__01, (genericfunc_t)&start_f__GEONW__PON__SQN__BV__01);
module_object.add_function("f_GEONW_PON_SQN_BV_02", (genericfunc_t)&f__GEONW__PON__SQN__BV__02, (genericfunc_t)&start_f__GEONW__PON__SQN__BV__02);
module_object.add_function("f_GEONW_PON_LOS_BV_01", (genericfunc_t)&f__GEONW__PON__LOS__BV__01, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__01);
module_object.add_function("f_GEONW_PON_LOS_BV_02", (genericfunc_t)&f__GEONW__PON__LOS__BV__02, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__02);
module_object.add_function("f_GEONW_PON_LOS_BV_03", (genericfunc_t)&f__GEONW__PON__LOS__BV__03, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__03);
module_object.add_function("f_GEONW_PON_LOS_BV_04", (genericfunc_t)&f__GEONW__PON__LOS__BV__04, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__04);
module_object.add_function("f_GEONW_PON_LOS_BV_05", (genericfunc_t)&f__GEONW__PON__LOS__BV__05, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__05);
module_object.add_function("f_GEONW_PON_LOS_TI_06", (genericfunc_t)&f__GEONW__PON__LOS__TI__06, (genericfunc_t)&start_f__GEONW__PON__LOS__TI__06);
module_object.add_function("f_GEONW_PON_LOS_BV_07", (genericfunc_t)&f__GEONW__PON__LOS__BV__07, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__07);
module_object.add_function("f_GEONW_PON_LOS_BV_08", (genericfunc_t)&f__GEONW__PON__LOS__BV__08, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__08);
module_object.add_function("f_GEONW_PON_LOS_BO_09", (genericfunc_t)&f__GEONW__PON__LOS__BO__09, (genericfunc_t)&start_f__GEONW__PON__LOS__BO__09);
module_object.add_function("f_GEONW_PON_LOS_BO_09_nodeB", (genericfunc_t)&f__GEONW__PON__LOS__BO__09__nodeB, (genericfunc_t)&start_f__GEONW__PON__LOS__BO__09__nodeB);
module_object.add_function("f_GEONW_PON_LOS_BO_09_nodeD", (genericfunc_t)&f__GEONW__PON__LOS__BO__09__nodeD, (genericfunc_t)&start_f__GEONW__PON__LOS__BO__09__nodeD);
module_object.add_function("f_GEONW_PON_LOS_BV_10", (genericfunc_t)&f__GEONW__PON__LOS__BV__10, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__10);
module_object.add_function("f_GEONW_PON_LOS_BV_10_nodeB", (genericfunc_t)&f__GEONW__PON__LOS__BV__10__nodeB, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__10__nodeB);
module_object.add_function("f_GEONW_PON_LOS_BV_10_nodeC", (genericfunc_t)&f__GEONW__PON__LOS__BV__10__nodeC, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__10__nodeC);
module_object.add_function("f_GEONW_PON_LOS_BV_11", (genericfunc_t)&f__GEONW__PON__LOS__BV__11, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__11);
module_object.add_function("f_GEONW_PON_LOS_BV_11_nodeB", (genericfunc_t)&f__GEONW__PON__LOS__BV__11__nodeB, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__11__nodeB);
module_object.add_function("f_GEONW_PON_LOS_BV_11_nodeC", (genericfunc_t)&f__GEONW__PON__LOS__BV__11__nodeC, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__11__nodeC);
module_object.add_function("f_GEONW_PON_LOS_BV_12", (genericfunc_t)&f__GEONW__PON__LOS__BV__12, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__12);
module_object.add_function("f_GEONW_PON_LOS_BV_13", (genericfunc_t)&f__GEONW__PON__LOS__BV__13, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__13);
module_object.add_function("f_GEONW_PON_LOS_BV_14", (genericfunc_t)&f__GEONW__PON__LOS__BV__14, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__14);
module_object.add_function("f_GEONW_PON_LOS_BV_15", (genericfunc_t)&f__GEONW__PON__LOS__BV__15, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__15);
module_object.add_function("f_GEONW_PON_LOS_BV_16", (genericfunc_t)&f__GEONW__PON__LOS__BV__16, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__16);
module_object.add_function("f_GEONW_PON_LOS_BV_17", (genericfunc_t)&f__GEONW__PON__LOS__BV__17, (genericfunc_t)&start_f__GEONW__PON__LOS__BV__17);
module_object.add_function("f_GEONW_PON_FPB_BV_01", (genericfunc_t)&f__GEONW__PON__FPB__BV__01, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__01);
module_object.add_function("f_GEONW_PON_FPB_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_01_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__01__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__01__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_02", (genericfunc_t)&f__GEONW__PON__FPB__BV__02, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__02);
module_object.add_function("f_GEONW_PON_FPB_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_02_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__02__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__02__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_03", (genericfunc_t)&f__GEONW__PON__FPB__BV__03, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__03);
module_object.add_function("f_GEONW_PON_FPB_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_03_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__03__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__03__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_04", (genericfunc_t)&f__GEONW__PON__FPB__BV__04, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__04);
module_object.add_function("f_GEONW_PON_FPB_BV_04_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__04__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_04_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__04__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_06", (genericfunc_t)&f__GEONW__PON__FPB__BV__06, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__06);
module_object.add_function("f_GEONW_PON_FPB_BV_06_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__06__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_06_nodeD", (genericfunc_t)&f__GEONW__PON__FPB__BV__06__nodeD, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__06__nodeD);
module_object.add_function("f_GEONW_PON_FPB_BV_07", (genericfunc_t)&f__GEONW__PON__FPB__BV__07, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__07);
module_object.add_function("f_GEONW_PON_FPB_BV_07_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__07__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_07_nodeD", (genericfunc_t)&f__GEONW__PON__FPB__BV__07__nodeD, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__07__nodeD);
module_object.add_function("f_GEONW_PON_FPB_BV_08", (genericfunc_t)&f__GEONW__PON__FPB__BV__08, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__08);
module_object.add_function("f_GEONW_PON_FPB_BV_08_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__08__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__08__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_08_nodeD", (genericfunc_t)&f__GEONW__PON__FPB__BV__08__nodeD, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__08__nodeD);
module_object.add_function("f_GEONW_PON_FPB_BV_09", (genericfunc_t)&f__GEONW__PON__FPB__BV__09, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__09);
module_object.add_function("f_GEONW_PON_FPB_BV_09_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__09__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__09__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_09_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__09__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__09__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_10", (genericfunc_t)&f__GEONW__PON__FPB__BV__10, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__10);
module_object.add_function("f_GEONW_PON_FPB_BV_10_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__10__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__10__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_10_nodeD", (genericfunc_t)&f__GEONW__PON__FPB__BV__10__nodeD, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__10__nodeD);
module_object.add_function("f_GEONW_PON_FPB_BV_11_01", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__01, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__01);
module_object.add_function("f_GEONW_PON_FPB_BV_11_01_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__01__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_11_01_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__01__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__01__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_11_02", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__02, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__02);
module_object.add_function("f_GEONW_PON_FPB_BV_11_02_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__02__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_11_02_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__02__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__02__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_11_03", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__03, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__03);
module_object.add_function("f_GEONW_PON_FPB_BV_11_03_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__03__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_11_03_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__03__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__03__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_11_04", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__04, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__04);
module_object.add_function("f_GEONW_PON_FPB_BV_11_04_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__04__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_11_04_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__04__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_11_05", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__05, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__05);
module_object.add_function("f_GEONW_PON_FPB_BV_11_05_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__05__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_11_05_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__11__05__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__11__05__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_12_01", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__01, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__01);
module_object.add_function("f_GEONW_PON_FPB_BV_12_01_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__01__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_12_01_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__01__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__01__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_12_02", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__02, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__02);
module_object.add_function("f_GEONW_PON_FPB_BV_12_02_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__02__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_12_02_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__02__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__02__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_12_03", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__03, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__03);
module_object.add_function("f_GEONW_PON_FPB_BV_12_03_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__03__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_12_03_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__03__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__03__nodeC);
module_object.add_function("f_GEONW_PON_FPB_BV_12_04", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__04, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__04);
module_object.add_function("f_GEONW_PON_FPB_BV_12_04_nodeB", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__04__nodeB);
module_object.add_function("f_GEONW_PON_FPB_BV_12_04_nodeC", (genericfunc_t)&f__GEONW__PON__FPB__BV__12__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__FPB__BV__12__04__nodeC);
module_object.add_function("f_GEONW_PON_GNA_BV_01", (genericfunc_t)&f__GEONW__PON__GNA__BV__01, (genericfunc_t)&start_f__GEONW__PON__GNA__BV__01);
module_object.add_function("f_GEONW_PON_GNA_BV_02", (genericfunc_t)&f__GEONW__PON__GNA__BV__02, (genericfunc_t)&start_f__GEONW__PON__GNA__BV__02);
module_object.add_function("f_GEONW_PON_BEA_TI_01", (genericfunc_t)&f__GEONW__PON__BEA__TI__01, (genericfunc_t)&start_f__GEONW__PON__BEA__TI__01);
module_object.add_function("f_GEONW_PON_BEA_TI_02", (genericfunc_t)&f__GEONW__PON__BEA__TI__02, (genericfunc_t)&start_f__GEONW__PON__BEA__TI__02);
module_object.add_function("f_GEONW_PON_GUC_BV_01", (genericfunc_t)&f__GEONW__PON__GUC__BV__01, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__01);
module_object.add_function("f_GEONW_PON_GUC_BV_02", (genericfunc_t)&f__GEONW__PON__GUC__BV__02, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__02);
module_object.add_function("f_GEONW_PON_GUC_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_02_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__02__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__02__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_02_nodeD", (genericfunc_t)&f__GEONW__PON__GUC__BV__02__nodeD, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__02__nodeD);
module_object.add_function("f_GEONW_PON_GUC_BV_03", (genericfunc_t)&f__GEONW__PON__GUC__BV__03, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__03);
module_object.add_function("f_GEONW_PON_GUC_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_03_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__03__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__03__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BO_04", (genericfunc_t)&f__GEONW__PON__GUC__BO__04, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__04);
module_object.add_function("f_GEONW_PON_GUC_BO_04_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BO__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__04__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BO_04_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BO__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__04__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_05", (genericfunc_t)&f__GEONW__PON__GUC__BV__05, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__05);
module_object.add_function("f_GEONW_PON_GUC_BV_06", (genericfunc_t)&f__GEONW__PON__GUC__BV__06, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__06);
module_object.add_function("f_GEONW_PON_GUC_BV_06_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__06__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_06_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__06__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__06__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_07", (genericfunc_t)&f__GEONW__PON__GUC__BV__07, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__07);
module_object.add_function("f_GEONW_PON_GUC_BV_07_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__07__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_07_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__07__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__07__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_08", (genericfunc_t)&f__GEONW__PON__GUC__BV__08, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__08);
module_object.add_function("f_GEONW_PON_GUC_BV_08_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__08__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__08__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_08_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__08__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__08__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_10", (genericfunc_t)&f__GEONW__PON__GUC__BV__10, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__10);
module_object.add_function("f_GEONW_PON_GUC_BV_10_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__10__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__10__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_10_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__10__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__10__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BV_11", (genericfunc_t)&f__GEONW__PON__GUC__BV__11, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__11);
module_object.add_function("f_GEONW_PON_GUC_BV_11_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BV__11__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__11__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BV_11_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BV__11__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BV__11__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BO_12", (genericfunc_t)&f__GEONW__PON__GUC__BO__12, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__12);
module_object.add_function("f_GEONW_PON_GUC_BO_12_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BO__12__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__12__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BO_12_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BO__12__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__12__nodeC);
module_object.add_function("f_GEONW_PON_GUC_BO_13", (genericfunc_t)&f__GEONW__PON__GUC__BO__13, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__13);
module_object.add_function("f_GEONW_PON_GUC_BO_13_nodeB", (genericfunc_t)&f__GEONW__PON__GUC__BO__13__nodeB, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__13__nodeB);
module_object.add_function("f_GEONW_PON_GUC_BO_13_nodeC", (genericfunc_t)&f__GEONW__PON__GUC__BO__13__nodeC, (genericfunc_t)&start_f__GEONW__PON__GUC__BO__13__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BV_01", (genericfunc_t)&f__GEONW__PON__GBC__BV__01, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__01);
module_object.add_function("f_GEONW_PON_GBC_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_01_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__01__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__01__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_02", (genericfunc_t)&f__GEONW__PON__GBC__BV__02, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__02);
module_object.add_function("f_GEONW_PON_GBC_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_02_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__02__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__02__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_03", (genericfunc_t)&f__GEONW__PON__GBC__BV__03, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__03);
module_object.add_function("f_GEONW_PON_GBC_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_03_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__03__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__03__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BO_04", (genericfunc_t)&f__GEONW__PON__GBC__BO__04, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__04);
module_object.add_function("f_GEONW_PON_GBC_BO_04_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BO__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__04__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BO_04_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BO__04__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__04__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_05", (genericfunc_t)&f__GEONW__PON__GBC__BV__05, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__05);
module_object.add_function("f_GEONW_PON_GBC_BV_05_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__05__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_05_nodeC", (genericfunc_t)&f__GEONW__PON__GBC__BV__05__nodeC, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__05__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BV_05_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__05__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__05__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BO_06", (genericfunc_t)&f__GEONW__PON__GBC__BO__06, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__06);
module_object.add_function("f_GEONW_PON_GBC_BO_06_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BO__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__06__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BO_06_nodeC", (genericfunc_t)&f__GEONW__PON__GBC__BO__06__nodeC, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__06__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BO_06_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BO__06__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__06__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_07", (genericfunc_t)&f__GEONW__PON__GBC__BV__07, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__07);
module_object.add_function("f_GEONW_PON_GBC_BV_07_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__07__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_07_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__07__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__07__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_08", (genericfunc_t)&f__GEONW__PON__GBC__BV__08, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__08);
module_object.add_function("f_GEONW_PON_GBC_BV_08_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__08__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__08__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_08_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__08__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__08__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_09", (genericfunc_t)&f__GEONW__PON__GBC__BV__09, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__09);
module_object.add_function("f_GEONW_PON_GBC_BO_10", (genericfunc_t)&f__GEONW__PON__GBC__BO__10, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__10);
module_object.add_function("f_GEONW_PON_GBC_BO_10_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BO__10__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__10__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BO_10_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BO__10__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__10__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_11", (genericfunc_t)&f__GEONW__PON__GBC__BV__11, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__11);
module_object.add_function("f_GEONW_PON_GBC_BV_12", (genericfunc_t)&f__GEONW__PON__GBC__BV__12, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__12);
module_object.add_function("f_GEONW_PON_GBC_BV_12_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__12__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__12__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_12_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__12__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__12__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BO_19", (genericfunc_t)&f__GEONW__PON__GBC__BO__19, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__19);
module_object.add_function("f_GEONW_PON_GBC_BO_19_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BO__19__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__19__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BO_19_nodeC", (genericfunc_t)&f__GEONW__PON__GBC__BO__19__nodeC, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__19__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BO_19_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BO__19__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BO__19__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_20", (genericfunc_t)&f__GEONW__PON__GBC__BV__20, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__20);
module_object.add_function("f_GEONW_PON_GBC_BV_20_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__20__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__20__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_20_nodeC", (genericfunc_t)&f__GEONW__PON__GBC__BV__20__nodeC, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__20__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BV_20_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__20__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__20__nodeD);
module_object.add_function("f_GEONW_PON_GBC_BV_21", (genericfunc_t)&f__GEONW__PON__GBC__BV__21, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__21);
module_object.add_function("f_GEONW_PON_GBC_BV_21_nodeB", (genericfunc_t)&f__GEONW__PON__GBC__BV__21__nodeB, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__21__nodeB);
module_object.add_function("f_GEONW_PON_GBC_BV_21_nodeC", (genericfunc_t)&f__GEONW__PON__GBC__BV__21__nodeC, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__21__nodeC);
module_object.add_function("f_GEONW_PON_GBC_BV_21_nodeD", (genericfunc_t)&f__GEONW__PON__GBC__BV__21__nodeD, (genericfunc_t)&start_f__GEONW__PON__GBC__BV__21__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BV_01", (genericfunc_t)&f__GEONW__PON__TSB__BV__01, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__01);
module_object.add_function("f_GEONW_PON_TSB_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BV_01_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BV__01__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__01__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BV_02", (genericfunc_t)&f__GEONW__PON__TSB__BV__02, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__02);
module_object.add_function("f_GEONW_PON_TSB_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BV_02_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BV__02__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__02__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BO_03", (genericfunc_t)&f__GEONW__PON__TSB__BO__03, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__03);
module_object.add_function("f_GEONW_PON_TSB_BO_03_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BO__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__03__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BO_03_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BO__03__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__03__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BV_04", (genericfunc_t)&f__GEONW__PON__TSB__BV__04, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__04);
module_object.add_function("f_GEONW_PON_TSB_BV_04_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BV__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__04__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BV_04_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BV__04__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__04__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BO_05", (genericfunc_t)&f__GEONW__PON__TSB__BO__05, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__05);
module_object.add_function("f_GEONW_PON_TSB_BO_05_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BO__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__05__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BO_05_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BO__05__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__05__nodeD);
module_object.add_function("f_GEONW_PON_TSB_BV_06", (genericfunc_t)&f__GEONW__PON__TSB__BV__06, (genericfunc_t)&start_f__GEONW__PON__TSB__BV__06);
module_object.add_function("f_GEONW_PON_TSB_BO_07", (genericfunc_t)&f__GEONW__PON__TSB__BO__07, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__07);
module_object.add_function("f_GEONW_PON_TSB_BO_07_nodeB", (genericfunc_t)&f__GEONW__PON__TSB__BO__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__07__nodeB);
module_object.add_function("f_GEONW_PON_TSB_BO_07_nodeD", (genericfunc_t)&f__GEONW__PON__TSB__BO__07__nodeD, (genericfunc_t)&start_f__GEONW__PON__TSB__BO__07__nodeD);
module_object.add_function("f_GEONW_PON_SHB_BV_01", (genericfunc_t)&f__GEONW__PON__SHB__BV__01, (genericfunc_t)&start_f__GEONW__PON__SHB__BV__01);
module_object.add_function("f_GEONW_PON_SHB_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__SHB__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__SHB__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_SHB_BV_01_nodeD", (genericfunc_t)&f__GEONW__PON__SHB__BV__01__nodeD, (genericfunc_t)&start_f__GEONW__PON__SHB__BV__01__nodeD);
module_object.add_function("f_GEONW_PON_SHB_BV_02", (genericfunc_t)&f__GEONW__PON__SHB__BV__02, (genericfunc_t)&start_f__GEONW__PON__SHB__BV__02);
module_object.add_function("f_GEONW_PON_GAC_BV_01", (genericfunc_t)&f__GEONW__PON__GAC__BV__01, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__01);
module_object.add_function("f_GEONW_PON_GAC_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_01_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BV__01__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__01__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_02", (genericfunc_t)&f__GEONW__PON__GAC__BV__02, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__02);
module_object.add_function("f_GEONW_PON_GAC_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_02_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BV__02__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__02__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_03", (genericfunc_t)&f__GEONW__PON__GAC__BV__03, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__03);
module_object.add_function("f_GEONW_PON_GAC_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_03_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BV__03__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__03__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_04", (genericfunc_t)&f__GEONW__PON__GAC__BV__04, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__04);
module_object.add_function("f_GEONW_PON_GAC_BV_04_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__04__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_04_nodeC", (genericfunc_t)&f__GEONW__PON__GAC__BV__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__04__nodeC);
module_object.add_function("f_GEONW_PON_GAC_BV_04_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BV__04__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__04__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BO_05", (genericfunc_t)&f__GEONW__PON__GAC__BO__05, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__05);
module_object.add_function("f_GEONW_PON_GAC_BO_05_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BO__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__05__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BO_05_nodeC", (genericfunc_t)&f__GEONW__PON__GAC__BO__05__nodeC, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__05__nodeC);
module_object.add_function("f_GEONW_PON_GAC_BO_05_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BO__05__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__05__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_06", (genericfunc_t)&f__GEONW__PON__GAC__BV__06, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__06);
module_object.add_function("f_GEONW_PON_GAC_BV_06_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__06__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_06_nodeC", (genericfunc_t)&f__GEONW__PON__GAC__BV__06__nodeC, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__06__nodeC);
module_object.add_function("f_GEONW_PON_GAC_BO_07", (genericfunc_t)&f__GEONW__PON__GAC__BO__07, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__07);
module_object.add_function("f_GEONW_PON_GAC_BO_07_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BO__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__07__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BO_07_nodeC", (genericfunc_t)&f__GEONW__PON__GAC__BO__07__nodeC, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__07__nodeC);
module_object.add_function("f_GEONW_PON_GAC_BV_08", (genericfunc_t)&f__GEONW__PON__GAC__BV__08, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__08);
module_object.add_function("f_GEONW_PON_GAC_BO_09", (genericfunc_t)&f__GEONW__PON__GAC__BO__09, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__09);
module_object.add_function("f_GEONW_PON_GAC_BO_09_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BO__09__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__09__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BO_09_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BO__09__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__09__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_10", (genericfunc_t)&f__GEONW__PON__GAC__BV__10, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__10);
module_object.add_function("f_GEONW_PON_GAC_BO_11", (genericfunc_t)&f__GEONW__PON__GAC__BO__11, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__11);
module_object.add_function("f_GEONW_PON_GAC_BO_11_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BO__11__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__11__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BO_11_nodeC", (genericfunc_t)&f__GEONW__PON__GAC__BO__11__nodeC, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__11__nodeC);
module_object.add_function("f_GEONW_PON_GAC_BO_11_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BO__11__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BO__11__nodeD);
module_object.add_function("f_GEONW_PON_GAC_BV_13", (genericfunc_t)&f__GEONW__PON__GAC__BV__13, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__13);
module_object.add_function("f_GEONW_PON_GAC_BV_13_nodeB", (genericfunc_t)&f__GEONW__PON__GAC__BV__13__nodeB, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__13__nodeB);
module_object.add_function("f_GEONW_PON_GAC_BV_13_nodeD", (genericfunc_t)&f__GEONW__PON__GAC__BV__13__nodeD, (genericfunc_t)&start_f__GEONW__PON__GAC__BV__13__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_01", (genericfunc_t)&f__GEONW__PON__BCA__BV__01, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__01);
module_object.add_function("f_GEONW_PON_BCA_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_01_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__01__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__01__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_01_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__01__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__01__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_02", (genericfunc_t)&f__GEONW__PON__BCA__BV__02, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__02);
module_object.add_function("f_GEONW_PON_BCA_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_02_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__02__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__02__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_02_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__02__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__02__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_03", (genericfunc_t)&f__GEONW__PON__BCA__BV__03, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__03);
module_object.add_function("f_GEONW_PON_BCA_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_03_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__03__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__03__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_03_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__03__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__03__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BO_04", (genericfunc_t)&f__GEONW__PON__BCA__BO__04, (genericfunc_t)&start_f__GEONW__PON__BCA__BO__04);
module_object.add_function("f_GEONW_PON_BCA_BO_04_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BO__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BO__04__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BO_04_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BO__04__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BO__04__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BO_04_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BO__04__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BO__04__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_05", (genericfunc_t)&f__GEONW__PON__BCA__BV__05, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__05);
module_object.add_function("f_GEONW_PON_BCA_BV_05_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__05__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_05_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__05__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__05__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_05_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__05__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__05__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_06", (genericfunc_t)&f__GEONW__PON__BCA__BV__06, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__06);
module_object.add_function("f_GEONW_PON_BCA_BV_06_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__06__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_06_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__06__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__06__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_06_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__06__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__06__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_07", (genericfunc_t)&f__GEONW__PON__BCA__BV__07, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__07);
module_object.add_function("f_GEONW_PON_BCA_BV_07_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__07__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_07_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__07__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__07__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_07_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__07__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__07__nodeD);
module_object.add_function("f_GEONW_PON_BCA_BV_08", (genericfunc_t)&f__GEONW__PON__BCA__BV__08, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__08);
module_object.add_function("f_GEONW_PON_BCA_BV_08_nodeB", (genericfunc_t)&f__GEONW__PON__BCA__BV__08__nodeB, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__08__nodeB);
module_object.add_function("f_GEONW_PON_BCA_BV_08_nodeC", (genericfunc_t)&f__GEONW__PON__BCA__BV__08__nodeC, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__08__nodeC);
module_object.add_function("f_GEONW_PON_BCA_BV_08_nodeD", (genericfunc_t)&f__GEONW__PON__BCA__BV__08__nodeD, (genericfunc_t)&start_f__GEONW__PON__BCA__BV__08__nodeD);
module_object.add_function("f_GEONW_PON_BAA_BV_01", (genericfunc_t)&f__GEONW__PON__BAA__BV__01, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__01);
module_object.add_function("f_GEONW_PON_BAA_BV_01_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__01__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_01_nodeF", (genericfunc_t)&f__GEONW__PON__BAA__BV__01__nodeF, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__01__nodeF);
module_object.add_function("f_GEONW_PON_BAA_BV_02", (genericfunc_t)&f__GEONW__PON__BAA__BV__02, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__02);
module_object.add_function("f_GEONW_PON_BAA_BV_02_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__02__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_02_nodeE", (genericfunc_t)&f__GEONW__PON__BAA__BV__02__nodeE, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__02__nodeE);
module_object.add_function("f_GEONW_PON_BAA_BV_03", (genericfunc_t)&f__GEONW__PON__BAA__BV__03, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__03);
module_object.add_function("f_GEONW_PON_BAA_BV_03_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__03__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__03__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_03_nodeF", (genericfunc_t)&f__GEONW__PON__BAA__BV__03__nodeF, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__03__nodeF);
module_object.add_function("f_GEONW_PON_BAA_BV_04", (genericfunc_t)&f__GEONW__PON__BAA__BV__04, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__04);
module_object.add_function("f_GEONW_PON_BAA_BV_04_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__04__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__04__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_04_nodeE", (genericfunc_t)&f__GEONW__PON__BAA__BV__04__nodeE, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__04__nodeE);
module_object.add_function("f_GEONW_PON_BAA_BV_05", (genericfunc_t)&f__GEONW__PON__BAA__BV__05, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__05);
module_object.add_function("f_GEONW_PON_BAA_BV_05_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__05__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__05__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_05_nodeE", (genericfunc_t)&f__GEONW__PON__BAA__BV__05__nodeE, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__05__nodeE);
module_object.add_function("f_GEONW_PON_BAA_BV_06", (genericfunc_t)&f__GEONW__PON__BAA__BV__06, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__06);
module_object.add_function("f_GEONW_PON_BAA_BV_06_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__06__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__06__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_06_nodeE", (genericfunc_t)&f__GEONW__PON__BAA__BV__06__nodeE, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__06__nodeE);
module_object.add_function("f_GEONW_PON_BAA_BV_07", (genericfunc_t)&f__GEONW__PON__BAA__BV__07, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__07);
module_object.add_function("f_GEONW_PON_BAA_BV_07_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__07__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__07__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_07_nodeC", (genericfunc_t)&f__GEONW__PON__BAA__BV__07__nodeC, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__07__nodeC);
module_object.add_function("f_GEONW_PON_BAA_BV_07_nodeD", (genericfunc_t)&f__GEONW__PON__BAA__BV__07__nodeD, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__07__nodeD);
module_object.add_function("f_GEONW_PON_BAA_BO_08", (genericfunc_t)&f__GEONW__PON__BAA__BO__08, (genericfunc_t)&start_f__GEONW__PON__BAA__BO__08);
module_object.add_function("f_GEONW_PON_BAA_BO_08_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BO__08__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BO__08__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BO_08_nodeC", (genericfunc_t)&f__GEONW__PON__BAA__BO__08__nodeC, (genericfunc_t)&start_f__GEONW__PON__BAA__BO__08__nodeC);
module_object.add_function("f_GEONW_PON_BAA_BO_08_nodeD", (genericfunc_t)&f__GEONW__PON__BAA__BO__08__nodeD, (genericfunc_t)&start_f__GEONW__PON__BAA__BO__08__nodeD);
module_object.add_function("f_GEONW_PON_BAA_BV_09", (genericfunc_t)&f__GEONW__PON__BAA__BV__09, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__09);
module_object.add_function("f_GEONW_PON_BAA_BV_09_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__09__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__09__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_09_nodeE", (genericfunc_t)&f__GEONW__PON__BAA__BV__09__nodeE, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__09__nodeE);
module_object.add_function("f_GEONW_PON_BAA_BV_10", (genericfunc_t)&f__GEONW__PON__BAA__BV__10, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__10);
module_object.add_function("f_GEONW_PON_BAA_BV_10_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__10__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__10__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_10_nodeC", (genericfunc_t)&f__GEONW__PON__BAA__BV__10__nodeC, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__10__nodeC);
module_object.add_function("f_GEONW_PON_BAA_BV_10_nodeD", (genericfunc_t)&f__GEONW__PON__BAA__BV__10__nodeD, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__10__nodeD);
module_object.add_function("f_GEONW_PON_BAA_BV_11", (genericfunc_t)&f__GEONW__PON__BAA__BV__11, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__11);
module_object.add_function("f_GEONW_PON_BAA_BV_11_nodeB", (genericfunc_t)&f__GEONW__PON__BAA__BV__11__nodeB, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__11__nodeB);
module_object.add_function("f_GEONW_PON_BAA_BV_11_nodeD", (genericfunc_t)&f__GEONW__PON__BAA__BV__11__nodeD, (genericfunc_t)&start_f__GEONW__PON__BAA__BV__11__nodeD);
module_object.add_function("f_GEONW_CAP_LOS_BV_01", (genericfunc_t)&f__GEONW__CAP__LOS__BV__01, (genericfunc_t)&start_f__GEONW__CAP__LOS__BV__01);
module_object.add_function("f_GEONW_CAP_FPB_BV_01", (genericfunc_t)&f__GEONW__CAP__FPB__BV__01, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__01);
module_object.add_function("f_GEONW_CAP_FPB_BV_01_nodeB", (genericfunc_t)&f__GEONW__CAP__FPB__BV__01__nodeB, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__01__nodeB);
module_object.add_function("f_GEONW_CAP_FPB_BV_01_nodeC", (genericfunc_t)&f__GEONW__CAP__FPB__BV__01__nodeC, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__01__nodeC);
module_object.add_function("f_GEONW_CAP_FPB_BV_02", (genericfunc_t)&f__GEONW__CAP__FPB__BV__02, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__02);
module_object.add_function("f_GEONW_CAP_FPB_BV_02_nodeB", (genericfunc_t)&f__GEONW__CAP__FPB__BV__02__nodeB, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__02__nodeB);
module_object.add_function("f_GEONW_CAP_FPB_BV_02_nodeC", (genericfunc_t)&f__GEONW__CAP__FPB__BV__02__nodeC, (genericfunc_t)&start_f__GEONW__CAP__FPB__BV__02__nodeC);
}

static void post_init_module()
{
TTCN_Location current_location("ItsGeoNetworking_TpFunctions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "ItsGeoNetworking_TpFunctions");
LibItsGeoNetworking__Functions::module_object.post_init_module();
}

static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments)
{
if (!strcmp(function_name, "f_GEONW_FDV_BAH_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BAH_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BAH__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_BAH_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_BAH_BI_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BAH_BI_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BAH__BI__02();
TTCN_Runtime::function_finished("f_GEONW_FDV_BAH_BI_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BV__02();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BV__03();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BO_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BO_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BO__04();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BO_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BO_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BO_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BO__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BO_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_COH_BO_04_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_COH_BO_04_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__COH__BO__04__nodeD();
TTCN_Runtime::function_finished("f_GEONW_FDV_COH_BO_04_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_BEA_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BEA_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BEA__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_BEA_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_BEA_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BEA_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BEA__BV__02();
TTCN_Runtime::function_finished("f_GEONW_FDV_BEA_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_BEA_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BEA_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BEA__BV__03();
TTCN_Runtime::function_finished("f_GEONW_FDV_BEA_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_BEA_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_BEA_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__BEA__BV__04();
TTCN_Runtime::function_finished("f_GEONW_FDV_BEA_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_GUC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_GUC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__GUC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_GUC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_GBC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_GBC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__GBC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_GBC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_GAC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_GAC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__GAC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_GAC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_SHB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_SHB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__SHB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_SHB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_FDV_TSB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_FDV_TSB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__FDV__TSB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_FDV_TSB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__01();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__02();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__03();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__04();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__05();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__06();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__07();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_03_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_03_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__03__08();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_03_08");
return TRUE;
} else if (!strcmp(function_name, "f_TP_GEONW_PON_LOT_BV_03_pre_1")) {
CHARSTRING p__nodeName;
p__nodeName.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_pre_1(");
p__nodeName.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__TP__GEONW__PON__LOT__BV__03__pre__1(p__nodeName);
TTCN_Runtime::function_finished("f_TP_GEONW_PON_LOT_BV_03_pre_1");
return TRUE;
} else if (!strcmp(function_name, "f_TP_GEONW_PON_LOT_BV_03_pre_2")) {
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template p__packet;
p__packet.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_pre_2(");
p__packet.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__TP__GEONW__PON__LOT__BV__03__pre__2(p__packet);
TTCN_Runtime::function_finished("f_TP_GEONW_PON_LOT_BV_03_pre_2");
return TRUE;
} else if (!strcmp(function_name, "f_TP_GEONW_PON_LOT_BV_03_main")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector_template p__longPosVectorNode;
p__longPosVectorNode.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_03_main(");
p__longPosVectorNode.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__TP__GEONW__PON__LOT__BV__03__main(p__longPosVectorNode);
TTCN_Runtime::function_finished("f_TP_GEONW_PON_LOT_BV_03_main");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__01();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__02();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__03();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__04();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__05();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__06();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOT_BV_05_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOT_BV_05_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOT__BV__05__07();
TTCN_Runtime::function_finished("f_GEONW_PON_LOT_BV_05_07");
return TRUE;
} else if (!strcmp(function_name, "f_TP_GEONW_PON_LOT_BV_05_pre_2")) {
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template p__packet;
p__packet.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_05_pre_2(");
p__packet.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__TP__GEONW__PON__LOT__BV__05__pre__2(p__packet);
TTCN_Runtime::function_finished("f_TP_GEONW_PON_LOT_BV_05_pre_2");
return TRUE;
} else if (!strcmp(function_name, "f_TP_GEONW_PON_LOT_BV_05_main")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector_template p__longPosVectorNodeB;
LibItsGeoNetworking__TypesAndValues::LongPosVector_template p__obsoleteLongPosVectorNodeB;
p__longPosVectorNodeB.decode_text(function_arguments);
p__obsoleteLongPosVectorNodeB.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_TP_GEONW_PON_LOT_BV_05_main(");
p__longPosVectorNodeB.log();
TTCN_Logger::log_event_str(", ");
p__obsoleteLongPosVectorNodeB.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__TP__GEONW__PON__LOT__BV__05__main(p__longPosVectorNodeB, p__obsoleteLongPosVectorNodeB);
TTCN_Runtime::function_finished("f_TP_GEONW_PON_LOT_BV_05_main");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LPV_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LPV_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LPV__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_LPV_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SQN_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SQN_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SQN__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_SQN_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SQN_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SQN_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SQN__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_SQN_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__05();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_TI_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_TI_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__TI__06();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_TI_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BO_09")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BO_09().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BO__09();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BO_09");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BO_09_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BO_09_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BO__09__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BO_09_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BO_09_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BO_09_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BO__09__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BO_09_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__10();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_10_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_10_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__10__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_10_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_10_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_10_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__10__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_10_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_11")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_11().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__11();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_11");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_11_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_11_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__11__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_11_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_11_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_11_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__11__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_11_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_12")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_12().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__12();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_12");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_13")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_13().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__13();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_13");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_14")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_14().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__14();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_14");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_15")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_15().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__15();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_15");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_16")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_16().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__16();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_16");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_LOS_BV_17")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_LOS_BV_17().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__LOS__BV__17();
TTCN_Runtime::function_finished("f_GEONW_PON_LOS_BV_17");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_01_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_01_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__01__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_01_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_02_nodeB")) {
INTEGER p__sequenceNumberC;
p__sequenceNumberC.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_02_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__02__nodeB(p__sequenceNumberC);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_02_nodeC")) {
INTEGER p__sequenceNumberC;
p__sequenceNumberC.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_02_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__02__nodeC(p__sequenceNumberC);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_02_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_03_nodeB")) {
INTEGER p__sequenceNumberC;
INTEGER p__messageCount;
p__sequenceNumberC.decode_text(function_arguments);
p__messageCount.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_03_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__messageCount.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__03__nodeB(p__sequenceNumberC, p__messageCount);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_03_nodeC")) {
INTEGER p__sequenceNumberC;
INTEGER p__messageCount;
p__sequenceNumberC.decode_text(function_arguments);
p__messageCount.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_03_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__messageCount.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__03__nodeC(p__sequenceNumberC, p__messageCount);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_03_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_04_nodeB")) {
INTEGER p__packetLifetime;
p__packetLifetime.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_04_nodeB(");
p__packetLifetime.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__04__nodeB(p__packetLifetime);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_04_nodeC")) {
INTEGER p__packetLifetime;
p__packetLifetime.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_04_nodeC(");
p__packetLifetime.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__04__nodeC(p__packetLifetime);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_06_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_06_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__06__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_06_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_06_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__06__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_06_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_07_nodeB")) {
INTEGER p__messageCount;
p__messageCount.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_07_nodeB(");
p__messageCount.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__07__nodeB(p__messageCount);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_07_nodeD")) {
INTEGER p__messageCount;
p__messageCount.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_FPB_BV_07_nodeD(");
p__messageCount.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__07__nodeD(p__messageCount);
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_07_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_08_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_08_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__08__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_08_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_08_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_08_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__08__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_08_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_09")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_09().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__09();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_09");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_09_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_09_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__09__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_09_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_09_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_09_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__09__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_09_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__10();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_10_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_10_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__10__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_10_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_10_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_10_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__10__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_10_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__01();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_01_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_01_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__01__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_01_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__02();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_02_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_02_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__02__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_02_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__03();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_03_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_03_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__03__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_03_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__04();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_04_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_04_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__04__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__05();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_11_05_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_11_05_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__11__05__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_11_05_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__01();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_01_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_01_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__01__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_01_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__02();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_02_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_02_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__02__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_02_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__03();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_03_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_03_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__03__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_03_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__04();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_FPB_BV_12_04_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_FPB_BV_12_04_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__FPB__BV__12__04__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_FPB_BV_12_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GNA_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GNA_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GNA__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_GNA_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GNA_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GNA_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GNA__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_GNA_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BEA_TI_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BEA_TI_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BEA__TI__01();
TTCN_Runtime::function_finished("f_GEONW_PON_BEA_TI_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BEA_TI_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BEA_TI_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BEA__TI__02();
TTCN_Runtime::function_finished("f_GEONW_PON_BEA_TI_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_02_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_02_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__02__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_02_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_02_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_02_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__02__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_02_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_03_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_03_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__03__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_03_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__04();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_04_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_04_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__04__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__05();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_06_nodeB")) {
INTEGER p__distanceToNodeA;
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__distanceToNodeA.decode_text(function_arguments);
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_06_nodeB(");
p__distanceToNodeA.log();
TTCN_Logger::log_event_str(", ");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__06__nodeB(p__distanceToNodeA, p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_06_nodeC")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_06_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__06__nodeC(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_06_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_07_nodeB")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_07_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__07__nodeB(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_07_nodeC")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_07_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__07__nodeC(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_07_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_08_nodeB")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_08_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__08__nodeB(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_08_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_08_nodeC")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_08_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__08__nodeC(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_08_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__10();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_10_nodeB")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_10_nodeB(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__10__nodeB(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_10_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_10_nodeC")) {
LibItsGeoNetworking__TypesAndValues::LongPosVector p__longPosVectorNodeA;
p__longPosVectorNodeA.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GUC_BV_10_nodeC(");
p__longPosVectorNodeA.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__10__nodeC(p__longPosVectorNodeA);
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_10_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_11")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_11().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__11();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_11");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_11_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_11_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__11__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_11_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BV_11_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BV_11_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BV__11__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BV_11_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_12")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_12().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__12();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_12");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_12_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_12_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__12__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_12_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_12_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_12_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__12__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_12_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_13")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_13().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__13();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_13");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_13_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_13_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__13__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_13_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GUC_BO_13_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GUC_BO_13_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GUC__BO__13__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GUC_BO_13_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_01_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_01_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__01__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_01_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_02_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_02_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__02__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_02_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_03_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_03_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__03__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_03_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__04();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_04_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_04_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__04__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_04_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__05();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_05_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_05_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__05__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_05_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_05_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_05_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__05__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_05_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__06();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_06_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_06_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__06__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_06_nodeC")) {
INTEGER p__sequenceNumber;
p__sequenceNumber.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06_nodeC(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__06__nodeC(p__sequenceNumber);
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_06_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_06_nodeD")) {
INTEGER p__sequenceNumber;
p__sequenceNumber.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_06_nodeD(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__06__nodeD(p__sequenceNumber);
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_06_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_07_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_07_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__07__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_07_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_07_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__07__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_07_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_08_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_08_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__08__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_08_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_08_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_08_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__08__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_08_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_09")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_09().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__09();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_09");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__10();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_10_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_10_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__10__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_10_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_10_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_10_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__10__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_10_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_11")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_11().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__11();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_11");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_12")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_12().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__12();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_12");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_12_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_12_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__12__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_12_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_12_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_12_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__12__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_12_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_19")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BO_19().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__19();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_19");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_19_nodeB")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeB(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__19__nodeB(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_19_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_19_nodeC")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeC(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__19__nodeC(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_19_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BO_19_nodeD")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GBC_BO_19_nodeD(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BO__19__nodeD(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BO_19_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_20")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_20().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__20();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_20");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_20_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_20_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__20__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_20_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_20_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_20_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__20__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_20_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_20_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_20_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__20__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_20_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_21")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_21().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__21();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_21");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_21_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_21_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__21__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_21_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_21_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_21_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__21__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_21_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GBC_BV_21_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GBC_BV_21_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GBC__BV__21__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GBC_BV_21_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_01_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_01_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__01__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_01_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_02_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_02_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__02__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_02_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__03();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_03_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_03_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__03__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_03_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_04_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_04_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__04__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_04_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__05();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_05_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_05_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__05__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_05_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__07();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_07_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_07_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__07__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_TSB_BO_07_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_TSB_BO_07_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__TSB__BO__07__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_TSB_BO_07_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SHB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SHB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SHB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_SHB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SHB_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SHB_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SHB__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_SHB_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SHB_BV_01_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SHB_BV_01_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SHB__BV__01__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_SHB_BV_01_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_SHB_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_SHB_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__SHB__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_SHB_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_01_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_01_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__01__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_01_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_02_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_02_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__02__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_02_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_03_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_03_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__03__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_03_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_04_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_04_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__04__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_04_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_04_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__04__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_04_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__05();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_05_nodeC")) {
INTEGER p__sequenceNumber;
p__sequenceNumber.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05_nodeC(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__05__nodeC(p__sequenceNumber);
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_05_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_05_nodeD")) {
INTEGER p__sequenceNumber;
p__sequenceNumber.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_05_nodeD(");
p__sequenceNumber.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__05__nodeD(p__sequenceNumber);
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_05_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_06_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_06_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__06__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_06_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_06_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__06__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_06_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__07();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_07_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_07_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__07__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_07_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_07_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__07__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_07_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_09")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_09().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__09();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_09");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_09_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_09_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__09__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_09_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_09_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_09_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__09__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_09_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__10();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_11")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BO_11().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__11();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_11");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_11_nodeB")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeB(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__11__nodeB(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_11_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_11_nodeC")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeC(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__11__nodeC(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_11_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BO_11_nodeD")) {
INTEGER p__distanceTooBig;
p__distanceTooBig.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_GAC_BO_11_nodeD(");
p__distanceTooBig.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BO__11__nodeD(p__distanceTooBig);
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BO_11_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_13")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_13().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__13();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_13");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_13_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_13_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__13__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_13_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_GAC_BV_13_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_GAC_BV_13_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__GAC__BV__13__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_GAC_BV_13_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_01_nodeC")) {
INTEGER p__sequenceNumberC;
p__sequenceNumberC.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__01__nodeC(p__sequenceNumberC);
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_01_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_01_nodeD")) {
INTEGER p__sequenceNumberC;
p__sequenceNumberC.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_PON_BCA_BV_01_nodeD(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__01__nodeD(p__sequenceNumberC);
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_01_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_02_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_02_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__02__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_02_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_02_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_02_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__02__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_02_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_03_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_03_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__03__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_03_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_03_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_03_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__03__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_03_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BO_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BO_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BO__04();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BO_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BO_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BO_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BO__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BO_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BO_04_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BO_04_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BO__04__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BO_04_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BO_04_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BO_04_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BO__04__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BO_04_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__05();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_05_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_05_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__05__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_05_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_05_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_05_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__05__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_05_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_06_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_06_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__06__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_06_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_06_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__06__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_06_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_06_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_06_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__06__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_06_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_07_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_07_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__07__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_07_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_07_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__07__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_07_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_07_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_07_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__07__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_07_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__08();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_08_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_08_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__08__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_08_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_08_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_08_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__08__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_08_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BCA_BV_08_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BCA_BV_08_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BCA__BV__08__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BCA_BV_08_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__01();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_01_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_01_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__01__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_01_nodeF")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_01_nodeF().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__01__nodeF();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_01_nodeF");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__02();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_02_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_02_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__02__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_02_nodeE")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_02_nodeE().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__02__nodeE();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_02_nodeE");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_03")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_03().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__03();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_03");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_03_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_03_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__03__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_03_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_03_nodeF")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_03_nodeF().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__03__nodeF();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_03_nodeF");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_04")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_04().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__04();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_04");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_04_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_04_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__04__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_04_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_04_nodeE")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_04_nodeE().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__04__nodeE();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_04_nodeE");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_05")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_05().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__05();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_05");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_05_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_05_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__05__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_05_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_05_nodeE")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_05_nodeE().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__05__nodeE();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_05_nodeE");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_06")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_06().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__06();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_06");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_06_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_06_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__06__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_06_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_06_nodeE")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_06_nodeE().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__06__nodeE();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_06_nodeE");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_07")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_07().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__07();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_07");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_07_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_07_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__07__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_07_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_07_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_07_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__07__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_07_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_07_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_07_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__07__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_07_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BO_08")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BO_08().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BO__08();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BO_08");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BO_08_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BO_08_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BO__08__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BO_08_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BO_08_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BO_08_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BO__08__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BO_08_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BO_08_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BO_08_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BO__08__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BO_08_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_09")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_09().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__09();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_09");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_09_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_09_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__09__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_09_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_09_nodeE")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_09_nodeE().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__09__nodeE();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_09_nodeE");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_10")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_10().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__10();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_10");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_10_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_10_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__10__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_10_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_10_nodeC")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_10_nodeC().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__10__nodeC();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_10_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_10_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_10_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__10__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_10_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_11")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_11().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__11();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_11");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_11_nodeB")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_11_nodeB().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__11__nodeB();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_11_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_PON_BAA_BV_11_nodeD")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_PON_BAA_BV_11_nodeD().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__PON__BAA__BV__11__nodeD();
TTCN_Runtime::function_finished("f_GEONW_PON_BAA_BV_11_nodeD");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_LOS_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_CAP_LOS_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__LOS__BV__01();
TTCN_Runtime::function_finished("f_GEONW_CAP_LOS_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_01")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_CAP_FPB_BV_01().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__01();
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_01");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_01_nodeB")) {
INTEGER p__sequenceNumberC;
INTEGER p__nbrOfPackets;
INTEGER p__nbrOfDiscardedMessages;
p__sequenceNumberC.decode_text(function_arguments);
p__nbrOfPackets.decode_text(function_arguments);
p__nbrOfDiscardedMessages.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_01_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfDiscardedMessages.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__01__nodeB(p__sequenceNumberC, p__nbrOfPackets, p__nbrOfDiscardedMessages);
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_01_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_01_nodeC")) {
INTEGER p__sequenceNumberC;
INTEGER p__nbrOfPackets;
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template p__geoNetworkingMsg;
p__sequenceNumberC.decode_text(function_arguments);
p__nbrOfPackets.decode_text(function_arguments);
p__geoNetworkingMsg.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_01_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__geoNetworkingMsg.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__01__nodeC(p__sequenceNumberC, p__nbrOfPackets, p__geoNetworkingMsg);
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_01_nodeC");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_02")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_GEONW_CAP_FPB_BV_02().");
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__02();
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_02");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_02_nodeB")) {
INTEGER p__sequenceNumberC;
INTEGER p__nbrOfPackets;
INTEGER p__nbrOfDiscardedMessages;
p__sequenceNumberC.decode_text(function_arguments);
p__nbrOfPackets.decode_text(function_arguments);
p__nbrOfDiscardedMessages.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_02_nodeB(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfDiscardedMessages.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__02__nodeB(p__sequenceNumberC, p__nbrOfPackets, p__nbrOfDiscardedMessages);
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_02_nodeB");
return TRUE;
} else if (!strcmp(function_name, "f_GEONW_CAP_FPB_BV_02_nodeC")) {
INTEGER p__sequenceNumberC;
INTEGER p__nbrOfPackets;
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template p__geoNetworkingMsg;
p__sequenceNumberC.decode_text(function_arguments);
p__nbrOfPackets.decode_text(function_arguments);
p__geoNetworkingMsg.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_GEONW_CAP_FPB_BV_02_nodeC(");
p__sequenceNumberC.log();
TTCN_Logger::log_event_str(", ");
p__nbrOfPackets.log();
TTCN_Logger::log_event_str(", ");
p__geoNetworkingMsg.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__GEONW__CAP__FPB__BV__02__nodeC(p__sequenceNumberC, p__nbrOfPackets, p__geoNetworkingMsg);
TTCN_Runtime::function_finished("f_GEONW_CAP_FPB_BV_02_nodeC");
return TRUE;
} else return FALSE;
}


} /* end of namespace */
