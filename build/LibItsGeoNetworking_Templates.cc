// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "LibItsGeoNetworking_Templates.hh"

namespace LibItsGeoNetworking__Templates {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();

/* Literal string constants */

static const unsigned char bs_0_bits[] = { 1 };
static const BITSTRING bs_0(1, bs_0_bits);
static const unsigned char os_0_octets[] = { 0, 0, 0, 0, 0, 0, 0, 0 },
os_3_octets[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
os_2_octets[] = { 68, 69, 70, 65, 85, 76, 84, 95, 80, 65, 89, 76, 79, 65, 68 };
static const OCTETSTRING os_1(0, NULL),
os_0(8, os_0_octets),
os_3(10, os_3_octets),
os_2(15, os_2_octets);
static const unsigned char module_checksum[] = { 0x60, 0x12, 0x74, 0x3c, 0xa7, 0x07, 0xe2, 0x12, 0x85, 0x64, 0xb4, 0x88, 0x14, 0x78, 0x22, 0x4c };

/* Global variable definitions */

static LibItsCommon__TypesAndValues::UtInitialize_template template_m__gnInitialize;
const LibItsCommon__TypesAndValues::UtInitialize_template& m__gnInitialize = template_m__gnInitialize;
static LibItsGeoNetworking__TypesAndValues::SCF const_m__trafficClass_p__scf_defval;
const LibItsGeoNetworking__TypesAndValues::SCF& m__trafficClass_p__scf_defval = const_m__trafficClass_p__scf_defval;
static LibItsGeoNetworking__TypesAndValues::ChannelOffload const_m__trafficClass_p__ChOff_defval;
const LibItsGeoNetworking__TypesAndValues::ChannelOffload& m__trafficClass_p__ChOff_defval = const_m__trafficClass_p__ChOff_defval;
static LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template template_m__generateShbMessage;
const LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template& m__generateShbMessage = template_m__generateShbMessage;
static LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template template_m__generateTsbMessage;
const LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template& m__generateTsbMessage = template_m__generateTsbMessage;
static LibItsCommon__TypesAndValues::UtChangePosition_template template_m__changePosition;
const LibItsCommon__TypesAndValues::UtChangePosition_template& m__changePosition = template_m__changePosition;
static LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template template_m__stopBeaconing;
const LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template& m__stopBeaconing = template_m__stopBeaconing;
static LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template template_m__stopPassBeaconing;
const LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template& m__stopPassBeaconing = template_m__stopPassBeaconing;
static LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template template_m__stopBeaconingMultipleNeighbour;
const LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template& m__stopBeaconingMultipleNeighbour = template_m__stopBeaconingMultipleNeighbour;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_m__geoNwPdu_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& m__geoNwPdu_p__lifeTime_defval = template_m__geoNwPdu_p__lifeTime_defval;
static INTEGER_template template_m__geoNwPdu_p__hopLimit_defval;
const INTEGER_template& m__geoNwPdu_p__hopLimit_defval = template_m__geoNwPdu_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_mw__geoNwPdu_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& mw__geoNwPdu_p__lifeTime_defval = template_mw__geoNwPdu_p__lifeTime_defval;
static INTEGER_template template_mw__geoNwPdu_p__hopLimit_defval;
const INTEGER_template& mw__geoNwPdu_p__hopLimit_defval = template_mw__geoNwPdu_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template template_mw__geoNwSecPdu_p__packet_defval;
const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& mw__geoNwSecPdu_p__packet_defval = template_mw__geoNwSecPdu_p__packet_defval;
static LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template template_mw__geoNwAnyPacket;
const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& mw__geoNwAnyPacket = template_mw__geoNwAnyPacket;
static INTEGER_template template_m__geoNwUnicastPacket_p__hopLimit_defval;
const INTEGER_template& m__geoNwUnicastPacket_p__hopLimit_defval = template_m__geoNwUnicastPacket_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::TrafficClass_template template_m__geoNwUnicastPacket_p__trafficClass_defval;
const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& m__geoNwUnicastPacket_p__trafficClass_defval = template_m__geoNwUnicastPacket_p__trafficClass_defval;
static INTEGER_template template_mw__geoNwUnicastPacketWithHl_p__hopLimit_defval;
const INTEGER_template& mw__geoNwUnicastPacketWithHl_p__hopLimit_defval = template_mw__geoNwUnicastPacketWithHl_p__hopLimit_defval;
static INTEGER_template template_m__geoNwAnycastPacket_p__hopLimit_defval;
const INTEGER_template& m__geoNwAnycastPacket_p__hopLimit_defval = template_m__geoNwAnycastPacket_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::TrafficClass_template template_m__geoNwAnycastPacket_p__trafficClass_defval;
const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& m__geoNwAnycastPacket_p__trafficClass_defval = template_m__geoNwAnycastPacket_p__trafficClass_defval;
static INTEGER_template template_mw__geoNwAnycastPacketWithAreaAndHl_p__maxHopLimit_defval;
const INTEGER_template& mw__geoNwAnycastPacketWithAreaAndHl_p__maxHopLimit_defval = template_mw__geoNwAnycastPacketWithAreaAndHl_p__maxHopLimit_defval;
static INTEGER_template template_m__geoNwBroadcastPacket_p__hopLimit_defval;
const INTEGER_template& m__geoNwBroadcastPacket_p__hopLimit_defval = template_m__geoNwBroadcastPacket_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::TrafficClass_template template_m__geoNwBroadcastPacket_p__trafficClass_defval;
const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& m__geoNwBroadcastPacket_p__trafficClass_defval = template_m__geoNwBroadcastPacket_p__trafficClass_defval;
static INTEGER_template template_mw__geoNwBroadcastPacketWithAreaAndHl_p__maxHopLimit_defval;
const INTEGER_template& mw__geoNwBroadcastPacketWithAreaAndHl_p__maxHopLimit_defval = template_mw__geoNwBroadcastPacketWithAreaAndHl_p__maxHopLimit_defval;
static INTEGER_template template_mw__geoNwBroadcastPacketWithHlAndFlags_p__seqNumber_defval;
const INTEGER_template& mw__geoNwBroadcastPacketWithHlAndFlags_p__seqNumber_defval = template_mw__geoNwBroadcastPacketWithHlAndFlags_p__seqNumber_defval;
static INTEGER_template template_mw__geoNwBroadcastPacketWithHlAndFlags_p__hopLimit_defval;
const INTEGER_template& mw__geoNwBroadcastPacketWithHlAndFlags_p__hopLimit_defval = template_mw__geoNwBroadcastPacketWithHlAndFlags_p__hopLimit_defval;
static BITSTRING_template template_mw__geoNwBroadcastPacketWithHlAndFlags_p__flags_defval;
const BITSTRING_template& mw__geoNwBroadcastPacketWithHlAndFlags_p__flags_defval = template_mw__geoNwBroadcastPacketWithHlAndFlags_p__flags_defval;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_mw__geoNwBeaconPacket_p__sourceLongPosVec_defval;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& mw__geoNwBeaconPacket_p__sourceLongPosVec_defval = template_mw__geoNwBeaconPacket_p__sourceLongPosVec_defval;
static LibItsGeoNetworking__TypesAndValues::NextHeader_template template_mw__geoNwBeaconPacket_p__nextHeader_defval;
const LibItsGeoNetworking__TypesAndValues::NextHeader_template& mw__geoNwBeaconPacket_p__nextHeader_defval = template_mw__geoNwBeaconPacket_p__nextHeader_defval;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_mw__geoNwShbPacket_p__sourceLongPosVec_defval;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& mw__geoNwShbPacket_p__sourceLongPosVec_defval = template_mw__geoNwShbPacket_p__sourceLongPosVec_defval;
static INTEGER_template template_mw__geoNwShbPacket_p__hopLimit_defval;
const INTEGER_template& mw__geoNwShbPacket_p__hopLimit_defval = template_mw__geoNwShbPacket_p__hopLimit_defval;
static INTEGER_template template_m__geoNwTsbPacket_p__hopLimit_defval;
const INTEGER_template& m__geoNwTsbPacket_p__hopLimit_defval = template_m__geoNwTsbPacket_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::TrafficClass_template template_m__geoNwTsbPacket_p__trafficClass_defval;
const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& m__geoNwTsbPacket_p__trafficClass_defval = template_m__geoNwTsbPacket_p__trafficClass_defval;
static INTEGER_template template_mw__geoNwTsbPacket_p__seqNumber_defval;
const INTEGER_template& mw__geoNwTsbPacket_p__seqNumber_defval = template_mw__geoNwTsbPacket_p__seqNumber_defval;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_mw__geoNwTsbPacket_p__sourceLongPosVec_defval;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& mw__geoNwTsbPacket_p__sourceLongPosVec_defval = template_mw__geoNwTsbPacket_p__sourceLongPosVec_defval;
static INTEGER_template template_mw__geoNwTsbPacketWithHl_p__seqNumber_defval;
const INTEGER_template& mw__geoNwTsbPacketWithHl_p__seqNumber_defval = template_mw__geoNwTsbPacketWithHl_p__seqNumber_defval;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_mw__geoNwTsbPacketWithHl_p__sourceLongPosVec_defval;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& mw__geoNwTsbPacketWithHl_p__sourceLongPosVec_defval = template_mw__geoNwTsbPacketWithHl_p__sourceLongPosVec_defval;
static INTEGER_template template_mw__geoNwTsbPacketWithHl_p__hopLimit_defval;
const INTEGER_template& mw__geoNwTsbPacketWithHl_p__hopLimit_defval = template_mw__geoNwTsbPacketWithHl_p__hopLimit_defval;
static INTEGER_template template_mw__geoNwTsbPacketWithNextHeader_p__seqNumber_defval;
const INTEGER_template& mw__geoNwTsbPacketWithNextHeader_p__seqNumber_defval = template_mw__geoNwTsbPacketWithNextHeader_p__seqNumber_defval;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_mw__geoNwTsbPacketWithNextHeader_p__sourceLongPosVec_defval;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& mw__geoNwTsbPacketWithNextHeader_p__sourceLongPosVec_defval = template_mw__geoNwTsbPacketWithNextHeader_p__sourceLongPosVec_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_m__basicHeader_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& m__basicHeader_p__lifeTime_defval = template_m__basicHeader_p__lifeTime_defval;
static INTEGER_template template_m__basicHeader_p__hopLimit_defval;
const INTEGER_template& m__basicHeader_p__hopLimit_defval = template_m__basicHeader_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_mw__basicHeader_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& mw__basicHeader_p__lifeTime_defval = template_mw__basicHeader_p__lifeTime_defval;
static INTEGER_template template_mw__basicHeader_p__hopLimit_defval;
const INTEGER_template& mw__basicHeader_p__hopLimit_defval = template_mw__basicHeader_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_m__securedBasicHeader_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& m__securedBasicHeader_p__lifeTime_defval = template_m__securedBasicHeader_p__lifeTime_defval;
static INTEGER_template template_m__securedBasicHeader_p__hopLimit_defval;
const INTEGER_template& m__securedBasicHeader_p__hopLimit_defval = template_m__securedBasicHeader_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_mw__securedBasicHeader_p__lifeTime_defval;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& mw__securedBasicHeader_p__lifeTime_defval = template_mw__securedBasicHeader_p__lifeTime_defval;
static INTEGER_template template_mw__securedBasicHeader_p__hopLimit_defval;
const INTEGER_template& mw__securedBasicHeader_p__hopLimit_defval = template_mw__securedBasicHeader_p__hopLimit_defval;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_m__defaultLifetime;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& m__defaultLifetime = template_m__defaultLifetime;
static LibItsGeoNetworking__TypesAndValues::Lifetime_template template_mw__lifetime0;
const LibItsGeoNetworking__TypesAndValues::Lifetime_template& mw__lifetime0 = template_mw__lifetime0;
static LibItsGeoNetworking__TypesAndValues::SCF_template template_mw__trafficClass_p__scf_defval;
const LibItsGeoNetworking__TypesAndValues::SCF_template& mw__trafficClass_p__scf_defval = template_mw__trafficClass_p__scf_defval;
static LibItsGeoNetworking__TypesAndValues::ChannelOffload_template template_mw__trafficClass_p__ChOff_defval;
const LibItsGeoNetworking__TypesAndValues::ChannelOffload_template& mw__trafficClass_p__ChOff_defval = template_mw__trafficClass_p__ChOff_defval;
static LibItsGeoNetworking__TypesAndValues::GN__Address_template template_mw__gnAddressAny;
const LibItsGeoNetworking__TypesAndValues::GN__Address_template& mw__gnAddressAny = template_mw__gnAddressAny;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__geoUnicastHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__geoUnicastHeaderType = template_m__geoUnicastHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__geoUnicastHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__geoUnicastHeaderType = template_mw__geoUnicastHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__geoBroadcastHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__geoBroadcastHeaderType = template_mw__geoBroadcastHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__geoAnycastHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__geoAnycastHeaderType = template_mw__geoAnycastHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__lsRequestHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__lsRequestHeaderType = template_m__lsRequestHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__lsRequestHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__lsRequestHeaderType = template_mw__lsRequestHeaderType;
static LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template template_mw__lsReplyHeaderAny;
const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& mw__lsReplyHeaderAny = template_mw__lsReplyHeaderAny;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__lsReplyHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__lsReplyHeaderType = template_m__lsReplyHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__beaconHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__beaconHeaderType = template_m__beaconHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__beaconHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__beaconHeaderType = template_mw__beaconHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__shbHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__shbHeaderType = template_m__shbHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_m__tsbHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& m__tsbHeaderType = template_m__tsbHeaderType;
static LibItsGeoNetworking__TypesAndValues::HeaderTST_template template_mw__tsbHeaderType;
const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& mw__tsbHeaderType = template_mw__tsbHeaderType;
static LibItsGeoNetworking__TypesAndValues::GN__Address_template template_m__dummyGnAddr;
const LibItsGeoNetworking__TypesAndValues::GN__Address_template& m__dummyGnAddr = template_m__dummyGnAddr;
static LibItsGeoNetworking__TypesAndValues::LongPosVector_template template_m__dummyLongPosVector;
const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& m__dummyLongPosVector = template_m__dummyLongPosVector;
static LibItsGeoNetworking__TypesAndValues::Area_template template_m__dummyArea;
const LibItsGeoNetworking__TypesAndValues::Area_template& m__dummyArea = template_m__dummyArea;
static LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template template_m__dummyGeoBroadcastArea;
const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& m__dummyGeoBroadcastArea = template_m__dummyGeoBroadcastArea;
static const size_t num_namespaces = 0;
TTCN_Module module_object("LibItsGeoNetworking_Templates", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

LibItsGeoNetworking__TestSystem::GeoNetworkingReq_template m__geoNwReq__linkLayerBroadcast(const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNwMsg)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 43, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwReq_linkLayerBroadcast");
LibItsGeoNetworking__TestSystem::GeoNetworkingReq_template ret_val;
ret_val.msgOut() = p__geoNwMsg;
ret_val.macDestinationAddress() = LibItsExternal__TypesAndValues::c__llBroadcast;
return ret_val;
}

LibItsGeoNetworking__TestSystem::GeoNetworkingReq_template m__geoNwReq__withLinkLayerDestination(const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNwMsg, const OCTETSTRING_template& p__llDestinationAdress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 55, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwReq_withLinkLayerDestination");
LibItsGeoNetworking__TestSystem::GeoNetworkingReq_template ret_val(m__geoNwReq__linkLayerBroadcast(p__geoNwMsg));
ret_val.macDestinationAddress() = p__llDestinationAdress;
return ret_val;
}

LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template mw__geoNwInd(const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNwMsg)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 66, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwInd");
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template ret_val;
ret_val.msgIn() = p__geoNwMsg;
ret_val.macDestinationAddress() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template mw__geoNwInd__withLinkLayerDestination(const LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template& p__geoNwMsg, const OCTETSTRING_template& p__llDestinationAdress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 78, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwInd_withLinkLayerDestination");
LibItsGeoNetworking__TestSystem::GeoNetworkingInd_template ret_val(mw__geoNwInd(p__geoNwMsg));
ret_val.macDestinationAddress() = p__llDestinationAdress;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoUnicastMessage(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__destinationGnAddr)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 98, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoUnicastMessage");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GenerateGeoUnicastMessage_template& tmp_0 = ret_val.geoUnicast();
tmp_0.gnAddress() = p__destinationGnAddr;
tmp_0.lifetime() = LibItsGeoNetworking__TypesAndValues::c__lifetime;
tmp_0.trafficClass() = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_1 = tmp_0.payload();
tmp_1.decodedPayload() = OMIT_VALUE;
tmp_1.rawPayload() = os_1;
}
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoUnicastMessageWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__destinationGnAddr, const LibItsGeoNetworking__TypesAndValues::TrafficClass& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 113, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoUnicastMessageWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoUnicastMessage(p__destinationGnAddr));
ret_val.geoUnicast().trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoUnicastMessageWithLifetime(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__destinationGnAddr, const INTEGER& p__lifetime)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 128, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoUnicastMessageWithLifetime");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoUnicastMessage(p__destinationGnAddr));
ret_val.geoUnicast().lifetime() = p__lifetime;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoUnicastMessageWithPayload(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__destinationGnAddr, const OCTETSTRING& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 143, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoUnicastMessageWithPayload");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoUnicastMessage(p__destinationGnAddr));
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_2 = ret_val.geoUnicast().payload();
tmp_2.decodedPayload() = OMIT_VALUE;
tmp_2.rawPayload() = p__payload;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoUnicastMessageWithLifetimeWithPayload(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__destinationGnAddr, const INTEGER& p__lifetime, const OCTETSTRING& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 159, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoUnicastMessageWithLifetimeWithPayload");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoUnicastMessageWithLifetime(p__destinationGnAddr, p__lifetime));
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_3 = ret_val.geoUnicast().payload();
tmp_3.decodedPayload() = OMIT_VALUE;
tmp_3.rawPayload() = p__payload;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoBroadcastMessage(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 173, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoBroadcastMessage");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GenerateGeoBroadcastMessage_template& tmp_4 = ret_val.geoBroadcast();
tmp_4.shape() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoArea&>(p__geoArea).shape();
tmp_4.lifetime() = LibItsGeoNetworking__TypesAndValues::c__lifetime;
tmp_4.trafficClass() = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
tmp_4.reserved() = LibCommon__BasicTypesAndValues::c__uInt24Zero;
tmp_4.area() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoArea&>(p__geoArea).area();
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_5 = tmp_4.payload();
tmp_5.decodedPayload() = OMIT_VALUE;
tmp_5.rawPayload() = os_1;
}
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoBroadcastMessageWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea, const LibItsGeoNetworking__TypesAndValues::TrafficClass& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 191, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoBroadcastMessageWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoBroadcastMessage(p__geoArea));
ret_val.geoBroadcast().trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoBroadcastMessageWithLifetime(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea, const INTEGER& p__lifetime)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 205, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoBroadcastMessageWithLifetime");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoBroadcastMessage(p__geoArea));
ret_val.geoBroadcast().lifetime() = p__lifetime;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoBroadcastMessageWithPayload(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea, const OCTETSTRING& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 220, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoBroadcastMessageWithPayload");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoBroadcastMessage(p__geoArea));
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_6 = ret_val.geoBroadcast().payload();
tmp_6.decodedPayload() = OMIT_VALUE;
tmp_6.rawPayload() = p__payload;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoAnycastMessage(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 233, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoAnycastMessage");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GenerateGeoBroadcastMessage_template& tmp_7 = ret_val.geoAnycast();
tmp_7.shape() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoArea&>(p__geoArea).shape();
tmp_7.lifetime() = LibItsGeoNetworking__TypesAndValues::c__lifetime;
tmp_7.trafficClass() = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
tmp_7.reserved() = LibCommon__BasicTypesAndValues::c__uInt24Zero;
tmp_7.area() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoArea&>(p__geoArea).area();
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_8 = tmp_7.payload();
tmp_8.decodedPayload() = OMIT_VALUE;
tmp_8.rawPayload() = os_1;
}
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoAnycastMessageWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea, const LibItsGeoNetworking__TypesAndValues::TrafficClass& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 252, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoAnycastMessageWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoAnycastMessage(p__geoArea));
ret_val.geoAnycast().trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateGeoAnycastMessageWithPayload(const LibItsGeoNetworking__TypesAndValues::GeoArea& p__geoArea, const OCTETSTRING& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 267, TTCN_Location::LOCATION_TEMPLATE, "m_generateGeoAnycastMessageWithPayload");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateGeoAnycastMessage(p__geoArea));
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_9 = ret_val.geoAnycast().payload();
tmp_9.decodedPayload() = OMIT_VALUE;
tmp_9.rawPayload() = p__payload;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::TrafficClass_template m__trafficClass(const LibItsGeoNetworking__TypesAndValues::SCF& p__scf, const LibItsGeoNetworking__TypesAndValues::ChannelOffload& p__ChOff)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 280, TTCN_Location::LOCATION_TEMPLATE, "m_trafficClass");
LibItsGeoNetworking__TypesAndValues::TrafficClass_template ret_val;
ret_val.scf() = p__scf;
ret_val.channelOffload() = p__ChOff;
ret_val.tcId() = 0;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateShbMessageWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::TrafficClass& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 301, TTCN_Location::LOCATION_TEMPLATE, "m_generateShbMessageWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateShbMessage);
ret_val.shb().trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateShbMessageWithPayload(const OCTETSTRING& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 314, TTCN_Location::LOCATION_TEMPLATE, "m_generateShbMessageWithPayload");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateShbMessage);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_12 = ret_val.shb().payload();
tmp_12.decodedPayload() = OMIT_VALUE;
tmp_12.rawPayload() = p__payload;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateTsbMessageWithLifetime(const INTEGER& p__lifetime)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 338, TTCN_Location::LOCATION_TEMPLATE, "m_generateTsbMessageWithLifetime");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateTsbMessage);
ret_val.tsb().lifetime() = p__lifetime;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template m__generateTsbMessageWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::TrafficClass& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 350, TTCN_Location::LOCATION_TEMPLATE, "m_generateTsbMessageWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::UtGnTrigger_template ret_val(m__generateTsbMessage);
ret_val.tsb().trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template m__startBeaconing(const LibItsGeoNetworking__TypesAndValues::BeaconHeader_template& p__beaconHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 375, TTCN_Location::LOCATION_TEMPLATE, "m_startBeaconing");
LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template ret_val;
ret_val.startBeaconing().beaconPacket() = m__geoNwPdu(m__geoNwBeaconPacket(p__beaconHeader.srcPosVector()), m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template m__startPassBeaconing(const LibItsGeoNetworking__TypesAndValues::BeaconHeader_template& p__beaconHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 396, TTCN_Location::LOCATION_TEMPLATE, "m_startPassBeaconing");
LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template ret_val;
ret_val.startPassBeaconing().beaconHeader() = p__beaconHeader;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template m__startBeaconingMultipleNeighbour(const LibItsGeoNetworking__TypesAndValues::BeaconHeader_template& p__beaconHeader, const INTEGER& p__numberOfNeighbour)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 417, TTCN_Location::LOCATION_TEMPLATE, "m_startBeaconingMultipleNeighbour");
LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::AcStartBeaconingMultipleNeighbour_template& tmp_15 = ret_val.startBeaconingMultipleNeighbour();
tmp_15.beaconPacket() = m__geoNwPdu(m__geoNwBeaconPacket(p__beaconHeader.srcPosVector()), m__geoNwPdu_p__lifeTime_defval, INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1));
tmp_15.numberOfNeighbour() = p__numberOfNeighbour;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template m__getLongPosVector(const LibItsGeoNetworking__TypesAndValues::GN__Address& p__gnAddress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 441, TTCN_Location::LOCATION_TEMPLATE, "m_getLongPosVector");
LibItsGeoNetworking__TypesAndValues::AcGnPrimitive_template ret_val;
ret_val.getLongPosVector().gnAddress() = p__gnAddress;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::AcGnResponse_template mw__getLongPosVectorAny(const LibItsGeoNetworking__TypesAndValues::GN__Address_template& p__gnAddress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 451, TTCN_Location::LOCATION_TEMPLATE, "mw_getLongPosVectorAny");
LibItsGeoNetworking__TypesAndValues::AcGnResponse_template ret_val;
ret_val.getLongPosVector() = mw__longPosVectorAny(p__gnAddress);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template m__geoNwPdu(const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet, const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 467, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwPdu");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template ret_val;
ret_val.basicHeader() = m__basicHeader(p__lifeTime, p__hopLimit);
{
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template& tmp_16 = ret_val.gnPacket();
tmp_16.packet() = p__packet;
tmp_16.securedMsg() = OMIT_VALUE;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template mw__geoNwPdu(const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet, const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 485, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwPdu");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template ret_val;
ret_val.basicHeader() = mw__basicHeader(p__lifeTime, p__hopLimit);
{
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template& tmp_17 = ret_val.gnPacket();
tmp_17.packet() = p__packet;
tmp_17.securedMsg() = ANY_OR_OMIT;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template mw__geoNwSecPdu(const LibItsSecurity__TypesAndValues::SecuredMessage_template& p__secMsg, const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 502, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwSecPdu");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template ret_val;
ret_val.basicHeader() = mw__securedBasicHeader(mw__securedBasicHeader_p__lifeTime_defval, mw__securedBasicHeader_p__hopLimit_defval);
{
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template& tmp_18 = ret_val.gnPacket();
tmp_18.packet() = p__packet;
tmp_18.securedMsg() = p__secMsg;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template m__geoNwSecPdu(const LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& p__packet, const LibItsSecurity__TypesAndValues::SecuredMessage_template& p__secMsg)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 518, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwSecPdu");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPdu_template ret_val;
ret_val.basicHeader() = m__securedBasicHeader(m__securedBasicHeader_p__lifeTime_defval, m__securedBasicHeader_p__hopLimit_defval);
{
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template& tmp_19 = ret_val.gnPacket();
tmp_19.packet() = p__packet;
tmp_19.securedMsg() = p__secMsg;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template m__geoNwPacket(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 538, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwPacket");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& tmp_20 = ret_val.packet();
tmp_20.commonHeader() = p__commonHeader;
tmp_20.extendedHeader() = p__extHeader;
tmp_20.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
}
ret_val.securedMsg() = OMIT_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template m__geoNwPacketNoPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 557, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwPacketNoPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(m__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = OMIT_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template m__geoNwPacketWithOctetstringPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader, const OCTETSTRING_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 574, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwPacketWithOctetstringPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(m__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = f__adaptPayload__m(p__payload);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template m__geoNwPacketWithPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader, const LibItsGeoNetworking__TypesAndValues::Payload_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 592, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwPacketWithPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(m__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = p__payload;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template mw__geoNwPacket(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 607, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwPacket");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template& tmp_21 = ret_val.packet();
tmp_21.commonHeader() = p__commonHeader;
tmp_21.extendedHeader() = p__extHeader;
tmp_21.payload() = ANY_OR_OMIT;
}
ret_val.securedMsg() = ANY_OR_OMIT;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template mw__geoNwPduAnyPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 626, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwPduAnyPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(mw__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template mw__geoNwPduWithOctetstringPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader, const OCTETSTRING_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 643, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwPduWithOctetstringPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(mw__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = f__adaptPayload__mw(p__payload);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template mw__geoNwPduWithPayload(const LibItsGeoNetworking__TypesAndValues::CommonHeader_template& p__commonHeader, const LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template& p__extHeader, const LibItsGeoNetworking__TypesAndValues::Payload_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 661, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwPduWithPayload");
LibItsGeoNetworking__TypesAndValues::GeoNetworkingPacket_template ret_val(mw__geoNwPacket(p__commonHeader, p__extHeader));
ret_val.packet().payload() = p__payload;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwAnyPacket__withPayload(const LibItsGeoNetworking__TypesAndValues::Payload_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 689, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwAnyPacket_withPayload");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::HeaderTST_template(ANY_VALUE));
ret_val.extendedHeader() = ANY_OR_OMIT;
ret_val.payload() = p__payload;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwUnicastPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber, const INTEGER_template& p__hopLimit, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 712, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwUnicastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__geoUnicastHeaderType, p__trafficClass, p__hopLimit);
ret_val.extendedHeader() = m__geoUnicastHeader(p__sourceLongPosVec, p__destinationShortPosVec, p__seqNumber);
ret_val.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwUnicastPacket(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 738, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwUnicastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoUnicastHeaderType);
ret_val.extendedHeader() = mw__geoUnicastHeader(p__destinationShortPosVec, p__seqNumber);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwUnicastPacketWithHl(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 760, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwUnicastPacketWithHl");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwUnicastPacket(p__destinationShortPosVec, p__seqNumber));
ret_val.commonHeader() = mw__commonHeaderWithHopLimit(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoUnicastHeaderType, p__hopLimit);
ret_val.extendedHeader() = mw__geoUnicastHeader(p__destinationShortPosVec, p__seqNumber);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwUnicastPacketWithSourcePv(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__srcLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 783, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwUnicastPacketWithSourcePv");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwUnicastPacket(p__destinationShortPosVec, p__seqNumber));
ret_val.extendedHeader() = mw__geoUnicastHeaderWithSourcePv(p__destinationShortPosVec, p__seqNumber, p__srcLongPosVec);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwUnicastPacketWithNextHeader(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 801, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwUnicastPacketWithNextHeader");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwUnicastPacket(p__destinationShortPosVec, p__seqNumber));
ret_val.commonHeader().nextHeader() = p__nextHeader;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwAnycastPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea, const INTEGER_template& p__hopLimit, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 823, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwAnycastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__geoAnycastHeaderType(p__anycastArea.geoAnycastSubType()), p__trafficClass, p__hopLimit);
ret_val.extendedHeader() = m__geoAnycastHeader(p__sourceLongPosVec, p__seqNumber, p__anycastArea);
ret_val.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwAnycastPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 849, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwAnycastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoAnycastHeaderType);
ret_val.extendedHeader() = mw__geoAnycastHeader(p__sourceLongPosVec, p__seqNumber);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwAnycastPacketWithArea(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 870, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwAnycastPacketWithArea");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoAnycastHeaderTypeWithSubType(p__anycastArea.geoAnycastSubType()));
ret_val.extendedHeader() = mw__geoAnycastHeaderWithArea(p__sourceLongPosVec, p__seqNumber, p__anycastArea);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwAnycastPacketWithAreaAndHl(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea, const INTEGER_template& p__maxHopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 894, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwAnycastPacketWithAreaAndHl");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwAnycastPacketWithArea(p__sourceLongPosVec, p__seqNumber, p__anycastArea));
ret_val.commonHeader() = mw__commonHeaderWithHopLimit(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoAnycastHeaderTypeWithSubType(p__anycastArea.geoAnycastSubType()), p__maxHopLimit);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwAnycastPacketWithAreaWithNextHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 914, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwAnycastPacketWithAreaWithNextHeader");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwAnycastPacketWithArea(p__sourceLongPosVec, p__seqNumber, p__anycastArea));
ret_val.commonHeader().nextHeader() = p__nextHeader;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwBroadcastPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea, const INTEGER_template& p__hopLimit, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 937, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwBroadcastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__geoBroadcastHeaderType(p__broadcastArea.geoBroadcastSubType()), p__trafficClass, p__hopLimit);
ret_val.extendedHeader() = m__geoBroadcastHeader(p__sourceLongPosVec, p__seqNumber, p__broadcastArea);
ret_val.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 963, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoBroadcastHeaderType);
ret_val.extendedHeader() = mw__geoBroadcastHeader(p__sourceLongPosVec, p__seqNumber);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithNextHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 984, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithNextHeader");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacket(p__sourceLongPosVec, p__seqNumber));
ret_val.commonHeader() = mw__commonHeader(p__nextHeader, mw__geoBroadcastHeaderType);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithNextHeaderAndPayload(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::Payload_template& p__payload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1002, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithNextHeaderAndPayload");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacketWithNextHeader(p__sourceLongPosVec, p__seqNumber, p__nextHeader));
ret_val.payload() = p__payload;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithArea(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1017, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithArea");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacket(p__sourceLongPosVec, p__seqNumber));
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoBroadcastHeaderTypeWithSubType(p__broadcastArea.geoBroadcastSubType()));
ret_val.extendedHeader() = mw__geoBroadcastHeaderWithArea(p__sourceLongPosVec, p__seqNumber, p__broadcastArea);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithAreaAndHl(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea, const INTEGER_template& p__maxHopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1040, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithAreaAndHl");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacketWithArea(p__sourceLongPosVec, p__seqNumber, p__broadcastArea));
ret_val.commonHeader() = mw__commonHeaderWithHopLimit(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoBroadcastHeaderTypeWithSubType(p__broadcastArea.geoBroadcastSubType()), p__maxHopLimit);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithHlAndFlags(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const INTEGER_template& p__hopLimit, const BITSTRING_template& p__flags)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1060, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithHlAndFlags");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacket(p__sourceLongPosVec, p__seqNumber));
ret_val.commonHeader() = mw__commonHeaderWithHopLimitAndFlags(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), mw__geoBroadcastHeaderType, p__hopLimit, p__flags);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBroadcastPacketWithAreaWithNextHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1080, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBroadcastPacketWithAreaWithNextHeader");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwBroadcastPacketWithArea(p__sourceLongPosVec, p__seqNumber, p__broadcastArea));
ret_val.commonHeader().nextHeader() = p__nextHeader;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwLsRequestPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GN__Address_template& p__gnAddress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1101, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwLsRequestPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any), m__lsRequestHeaderType, m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
ret_val.extendedHeader() = m__lsRequestHeader(p__sourceLongPosVec, p__seqNumber, p__gnAddress);
ret_val.payload() = OMIT_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwLsRequestPacket(const INTEGER_template& p__seqNumber, const OCTETSTRING_template& p__mid)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1123, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwLsRequestPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any), m__lsRequestHeaderType);
ret_val.extendedHeader() = mw__lsRequestHeader(p__seqNumber, p__mid);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_22 = ret_val.payload();
tmp_22.decodedPayload() = OMIT_VALUE;
tmp_22.rawPayload() = os_1;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwLsReplyPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1147, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwLsReplyPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any), m__lsReplyHeaderType, m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
ret_val.extendedHeader() = m__lsReplyHeader(p__sourceLongPosVec, p__destinationLongPosVec, p__seqNumber);
ret_val.payload() = OMIT_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwLsReplyPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1169, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwLsReplyPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any), m__lsReplyHeaderType);
ret_val.extendedHeader() = mw__lsReplyHeader(p__sourceLongPosVec, p__destinationLongPosVec);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_23 = ret_val.payload();
tmp_23.decodedPayload() = OMIT_VALUE;
tmp_23.rawPayload() = os_1;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwBeaconPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1194, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwBeaconPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__TypesAndValues::NextHeader::e__any), m__beaconHeaderType, m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__hopLimit1));
ret_val.extendedHeader() = m__beaconHeader(p__sourceLongPosVec);
ret_val.payload() = OMIT_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwBeaconPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1215, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwBeaconPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader__noPayload(p__nextHeader, m__beaconHeaderType);
ret_val.extendedHeader() = mw__beaconHeader(p__sourceLongPosVec);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_24 = ret_val.payload();
tmp_24.set_type(VALUE_LIST, 2);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_25 = tmp_24.list_item(0);
tmp_25.decodedPayload() = OMIT_VALUE;
tmp_25.rawPayload() = os_1;
}
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_26 = tmp_24.list_item(1);
tmp_26.decodedPayload() = ANY_OR_OMIT;
tmp_26.rawPayload() = os_3;
}
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwShbPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1244, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwShbPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__shbHeaderType, m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval), INTEGER_template(LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit));
ret_val.extendedHeader() = m__shbHeader(p__sourceLongPosVec);
ret_val.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwShbPacket(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1264, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwShbPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeaderWithHopLimit(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__shbHeaderType, p__hopLimit);
ret_val.extendedHeader() = mw__shbHeader(p__sourceLongPosVec);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template m__geoNwTsbPacket(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__hopLimit, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1287, TTCN_Location::LOCATION_TEMPLATE, "m_geoNwTsbPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = m__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__tsbHeaderType, p__trafficClass, p__hopLimit);
ret_val.extendedHeader() = m__tsbHeader(p__seqNumber, p__sourceLongPosVec);
ret_val.payload() = f__adaptPayload__m(OCTETSTRING_template(os_2));
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwTsbPacket(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1311, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwTsbPacket");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val;
ret_val.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__tsbHeaderType);
ret_val.extendedHeader() = mw__tsbHeader(p__seqNumber, p__sourceLongPosVec);
ret_val.payload() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwTsbPacketWithHl(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1329, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwTsbPacketWithHl");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwTsbPacket(p__seqNumber, p__sourceLongPosVec));
ret_val.commonHeader() = mw__commonHeaderWithHopLimit(LibItsGeoNetworking__TypesAndValues::NextHeader_template(LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER), m__tsbHeaderType, p__hopLimit);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template mw__geoNwTsbPacketWithNextHeader(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1347, TTCN_Location::LOCATION_TEMPLATE, "mw_geoNwTsbPacketWithNextHeader");
LibItsGeoNetworking__TypesAndValues::GnNonSecuredPacket_template ret_val(mw__geoNwTsbPacket(p__seqNumber, p__sourceLongPosVec));
ret_val.commonHeader().nextHeader() = p__nextHeader;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::BasicHeader_template m__basicHeader(const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1371, TTCN_Location::LOCATION_TEMPLATE, "m_basicHeader");
LibItsGeoNetworking__TypesAndValues::BasicHeader_template ret_val;
ret_val.version() = LibItsGeoNetworking__TypesAndValues::c__geoNwProtocolVersion;
ret_val.nextHeader() = LibItsGeoNetworking__TypesAndValues::BasicNextHeader::e__commonHeader;
ret_val.reserved() = 0;
ret_val.lifeTime() = p__lifeTime;
ret_val.routerHopLimit() = p__hopLimit;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::BasicHeader_template mw__basicHeader(const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1388, TTCN_Location::LOCATION_TEMPLATE, "mw_basicHeader");
LibItsGeoNetworking__TypesAndValues::BasicHeader_template ret_val;
ret_val.version() = LibItsGeoNetworking__TypesAndValues::c__geoNwProtocolVersion;
ret_val.nextHeader() = ANY_VALUE;
ret_val.reserved() = ANY_VALUE;
ret_val.lifeTime() = p__lifeTime;
ret_val.routerHopLimit() = p__hopLimit;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::BasicHeader_template m__securedBasicHeader(const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1405, TTCN_Location::LOCATION_TEMPLATE, "m_securedBasicHeader");
LibItsGeoNetworking__TypesAndValues::BasicHeader_template ret_val;
ret_val.version() = LibItsGeoNetworking__TypesAndValues::c__geoNwProtocolVersion;
ret_val.nextHeader() = LibItsGeoNetworking__TypesAndValues::BasicNextHeader::e__securedPacket;
ret_val.reserved() = 0;
ret_val.lifeTime() = p__lifeTime;
ret_val.routerHopLimit() = p__hopLimit;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::BasicHeader_template mw__securedBasicHeader(const LibItsGeoNetworking__TypesAndValues::Lifetime_template& p__lifeTime, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1422, TTCN_Location::LOCATION_TEMPLATE, "mw_securedBasicHeader");
LibItsGeoNetworking__TypesAndValues::BasicHeader_template ret_val;
ret_val.version() = LibItsGeoNetworking__TypesAndValues::c__geoNwProtocolVersion;
ret_val.nextHeader() = LibItsGeoNetworking__TypesAndValues::BasicNextHeader::e__securedPacket;
ret_val.reserved() = ANY_VALUE;
ret_val.lifeTime() = p__lifeTime;
ret_val.routerHopLimit() = p__hopLimit;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::Lifetime_template m__lifetimeBase1s(const INTEGER_template& p__multiplier)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1444, TTCN_Location::LOCATION_TEMPLATE, "m_lifetimeBase1s");
LibItsGeoNetworking__TypesAndValues::Lifetime_template ret_val;
ret_val.multiplier() = p__multiplier;
ret_val.ltBase() = LibItsGeoNetworking__TypesAndValues::LtBase::e__1s;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template m__commonHeader(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1471, TTCN_Location::LOCATION_TEMPLATE, "m_commonHeader");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val;
ret_val.nextHeader() = p__nextHeader;
ret_val.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
ret_val.headerTST() = p__headerTypeSubType;
ret_val.trafficClass() = p__trafficClass;
ret_val.flags() = LibCommon__DataStrings::c__8ZeroBits;
ret_val.plLength() = 0;
ret_val.maxHopLimit() = p__hopLimit;
ret_val.reserved2() = 0;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template mw__commonHeader(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1492, TTCN_Location::LOCATION_TEMPLATE, "mw_commonHeader");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val;
ret_val.nextHeader() = p__nextHeader;
ret_val.reserved() = ANY_VALUE;
ret_val.headerTST() = p__headerTypeSubType;
ret_val.trafficClass() = ANY_VALUE;
ret_val.flags() = ANY_VALUE;
ret_val.plLength() = ANY_VALUE;
ret_val.maxHopLimit() = ANY_VALUE;
ret_val.reserved2() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template mw__commonHeader__noPayload(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1511, TTCN_Location::LOCATION_TEMPLATE, "mw_commonHeader_noPayload");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val(mw__commonHeader(p__nextHeader, p__headerTypeSubType));
ret_val.plLength() = 0;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template mw__commonHeaderWithHopLimit(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType, const INTEGER_template& p__hopLimit)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1525, TTCN_Location::LOCATION_TEMPLATE, "mw_commonHeaderWithHopLimit");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val(mw__commonHeader(p__nextHeader, p__headerTypeSubType));
ret_val.maxHopLimit() = p__hopLimit;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template mw__commonHeaderWithHopLimitAndFlags(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType, const INTEGER_template& p__hopLimit, const BITSTRING_template& p__flags)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1542, TTCN_Location::LOCATION_TEMPLATE, "mw_commonHeaderWithHopLimitAndFlags");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val(mw__commonHeaderWithHopLimit(p__nextHeader, p__headerTypeSubType, p__hopLimit));
ret_val.flags() = p__flags;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::CommonHeader_template mw__commonHeaderWithTrafficClass(const LibItsGeoNetworking__TypesAndValues::NextHeader_template& p__nextHeader, const LibItsGeoNetworking__TypesAndValues::HeaderTST_template& p__headerTypeSubType, const LibItsGeoNetworking__TypesAndValues::TrafficClass_template& p__trafficClass)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1558, TTCN_Location::LOCATION_TEMPLATE, "mw_commonHeaderWithTrafficClass");
LibItsGeoNetworking__TypesAndValues::CommonHeader_template ret_val(mw__commonHeader(p__nextHeader, p__headerTypeSubType));
ret_val.trafficClass() = p__trafficClass;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::TrafficClass_template mw__trafficClass(const LibItsGeoNetworking__TypesAndValues::SCF_template& p__scf, const LibItsGeoNetworking__TypesAndValues::ChannelOffload_template& p__ChOff)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1570, TTCN_Location::LOCATION_TEMPLATE, "mw_trafficClass");
LibItsGeoNetworking__TypesAndValues::TrafficClass_template ret_val;
ret_val.scf() = p__scf;
ret_val.channelOffload() = p__ChOff;
ret_val.tcId() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GN__Address_template mw__gnAddress(const LibItsGeoNetworking__TypesAndValues::StationType_template& p__stationType, const INTEGER_template& p__stationCountryCode)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1591, TTCN_Location::LOCATION_TEMPLATE, "mw_gnAddress");
LibItsGeoNetworking__TypesAndValues::GN__Address_template ret_val;
ret_val.typeOfAddress() = ANY_VALUE;
ret_val.stationType() = p__stationType;
ret_val.stationCountryCode() = p__stationCountryCode;
ret_val.mid() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::LongPosVector_template mw__longPosVectorAny(const LibItsGeoNetworking__TypesAndValues::GN__Address_template& p__gnAddress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1605, TTCN_Location::LOCATION_TEMPLATE, "mw_longPosVectorAny");
LibItsGeoNetworking__TypesAndValues::LongPosVector_template ret_val;
ret_val.gnAddr() = p__gnAddress;
ret_val.timestamp() = ANY_VALUE;
ret_val.latitude() = ANY_VALUE;
ret_val.longitude() = ANY_VALUE;
ret_val.pai() = ANY_VALUE;
ret_val.speed() = ANY_VALUE;
ret_val.heading() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::LongPosVector_template mw__longPosVectorPosition(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1621, TTCN_Location::LOCATION_TEMPLATE, "mw_longPosVectorPosition");
LibItsGeoNetworking__TypesAndValues::LongPosVector_template ret_val;
ret_val.gnAddr() = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector_template&>(p__longPosVector).gnAddr();
ret_val.timestamp() = ANY_VALUE;
ret_val.latitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector_template&>(p__longPosVector).latitude();
ret_val.longitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector_template&>(p__longPosVector).longitude();
ret_val.pai() = ANY_VALUE;
ret_val.speed() = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector_template&>(p__longPosVector).speed();
ret_val.heading() = const_cast< const LibItsGeoNetworking__TypesAndValues::LongPosVector_template&>(p__longPosVector).heading();
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::LongPosVector_template mw__longPosVectorPosition__withDelta(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__longPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1637, TTCN_Location::LOCATION_TEMPLATE, "mw_longPosVectorPosition_withDelta");
LibItsGeoNetworking__TypesAndValues::LongPosVector_template ret_val(mw__longPosVectorPosition(p__longPosVector));
ret_val.latitude() = f__getDelta32(p__longPosVector.latitude().valueof(), LibItsGeoNetworking__Pixits::PX__POS__DELTA);
ret_val.longitude() = f__getDelta32(p__longPosVector.longitude().valueof(), LibItsGeoNetworking__Pixits::PX__POS__DELTA);
ret_val.speed() = ANY_VALUE;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ShortPosVector_template mw__shortPosVectorPosition(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__shortPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1649, TTCN_Location::LOCATION_TEMPLATE, "mw_shortPosVectorPosition");
LibItsGeoNetworking__TypesAndValues::ShortPosVector_template ret_val;
ret_val.gnAddr() = const_cast< const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template&>(p__shortPosVector).gnAddr();
ret_val.timestamp() = ANY_VALUE;
ret_val.latitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template&>(p__shortPosVector).latitude();
ret_val.longitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template&>(p__shortPosVector).longitude();
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ShortPosVector_template mw__shortPosVectorPosition__withDelta(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__shortPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1662, TTCN_Location::LOCATION_TEMPLATE, "mw_shortPosVectorPosition_withDelta");
LibItsGeoNetworking__TypesAndValues::ShortPosVector_template ret_val(mw__shortPosVectorPosition(p__shortPosVector));
ret_val.latitude() = f__getDelta32(p__shortPosVector.latitude().valueof(), LibItsGeoNetworking__Pixits::PX__POS__DELTA);
ret_val.longitude() = f__getDelta32(p__shortPosVector.longitude().valueof(), LibItsGeoNetworking__Pixits::PX__POS__DELTA);
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ShortPosVector_template mw__shortPosVectorPosition__anyPos(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__shortPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1673, TTCN_Location::LOCATION_TEMPLATE, "mw_shortPosVectorPosition_anyPos");
LibItsGeoNetworking__TypesAndValues::ShortPosVector_template ret_val(mw__shortPosVectorPosition(p__shortPosVector));
ret_val.latitude() = ANY_VALUE;
ret_val.longitude() = ANY_VALUE;
return ret_val;
}

INTEGER_template f__getDelta32(const INTEGER& p__value, const INTEGER& p__delta)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1680, TTCN_Location::LOCATION_FUNCTION, "f_getDelta32");
current_location.update_lineno(1681);
/* LibItsGeoNetworking_Templates.ttcn, line 1681 */
if ((p__value == LibCommon__BasicTypesAndValues::c__int32Min)) {
current_location.update_lineno(1682);
/* LibItsGeoNetworking_Templates.ttcn, line 1682 */
{
INTEGER_template tmp_27;
tmp_27.set_type(VALUE_RANGE);
tmp_27.set_min(p__value);
tmp_27.set_max((p__value + p__delta));
return tmp_27;
}
}
current_location.update_lineno(1684);
/* LibItsGeoNetworking_Templates.ttcn, line 1684 */
if ((p__value == LibCommon__BasicTypesAndValues::c__int32Max)) {
current_location.update_lineno(1685);
/* LibItsGeoNetworking_Templates.ttcn, line 1685 */
{
INTEGER_template tmp_28;
tmp_28.set_type(VALUE_RANGE);
tmp_28.set_min((p__value - p__delta));
tmp_28.set_max(p__value);
return tmp_28;
}
}
current_location.update_lineno(1687);
/* LibItsGeoNetworking_Templates.ttcn, line 1687 */
{
INTEGER_template tmp_29;
tmp_29.set_type(VALUE_RANGE);
tmp_29.set_min((p__value - p__delta));
tmp_29.set_max((p__value + p__delta));
return tmp_29;
}
}

INTEGER_template f__getDelta15(const INTEGER& p__value, const INTEGER& p__delta)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1690, TTCN_Location::LOCATION_FUNCTION, "f_getDelta15");
current_location.update_lineno(1691);
/* LibItsGeoNetworking_Templates.ttcn, line 1691 */
if ((p__value == LibCommon__BasicTypesAndValues::c__int15Min)) {
current_location.update_lineno(1692);
/* LibItsGeoNetworking_Templates.ttcn, line 1692 */
{
INTEGER_template tmp_30;
tmp_30.set_type(VALUE_RANGE);
tmp_30.set_min(p__value);
tmp_30.set_max((p__value + p__delta));
return tmp_30;
}
}
current_location.update_lineno(1694);
/* LibItsGeoNetworking_Templates.ttcn, line 1694 */
if ((p__value == LibCommon__BasicTypesAndValues::c__int15Max)) {
current_location.update_lineno(1695);
/* LibItsGeoNetworking_Templates.ttcn, line 1695 */
{
INTEGER_template tmp_31;
tmp_31.set_type(VALUE_RANGE);
tmp_31.set_min((p__value - p__delta));
tmp_31.set_max(p__value);
return tmp_31;
}
}
current_location.update_lineno(1697);
/* LibItsGeoNetworking_Templates.ttcn, line 1697 */
{
INTEGER_template tmp_32;
tmp_32.set_type(VALUE_RANGE);
tmp_32.set_min((p__value - p__delta));
tmp_32.set_max((p__value + p__delta));
return tmp_32;
}
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__geoUnicastHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1710, TTCN_Location::LOCATION_TEMPLATE, "m_geoUnicastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoUnicastHeader_template& tmp_33 = ret_val.geoUnicastHeader();
tmp_33.seqNumber() = p__seqNumber;
tmp_33.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_33.srcPosVector() = p__sourceLongPosVec;
tmp_33.dstPosVector() = p__destinationLongPosVec;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoUnicastHeader(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1729, TTCN_Location::LOCATION_TEMPLATE, "mw_geoUnicastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoUnicastHeader_template& tmp_34 = ret_val.geoUnicastHeader();
tmp_34.seqNumber() = p__seqNumber;
tmp_34.reserved() = ANY_VALUE;
tmp_34.srcPosVector() = ANY_VALUE;
tmp_34.dstPosVector() = p__destinationShortPosVec;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoUnicastHeaderWithSourcePv(const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationShortPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__srcLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1748, TTCN_Location::LOCATION_TEMPLATE, "mw_geoUnicastHeaderWithSourcePv");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val(mw__geoUnicastHeader(p__destinationShortPosVec, p__seqNumber));
ret_val.geoUnicastHeader().srcPosVector() = p__srcLongPosVec;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__geoBroadcastHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1788, TTCN_Location::LOCATION_TEMPLATE, "m_geoBroadcastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_37 = ret_val.geoBroadcastHeader();
tmp_37.seqNumber() = p__seqNumber;
tmp_37.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_37.srcPosVector() = p__sourceLongPosVec;
tmp_37.geoAreaPosLatitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().geoAreaPosLatitude();
tmp_37.geoAreaPosLongitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().geoAreaPosLongitude();
tmp_37.distanceA() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().distanceA();
tmp_37.distanceB() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().distanceB();
tmp_37.angle() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().angle();
tmp_37.reserved2() = LibCommon__BasicTypesAndValues::c__uInt24Zero;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoBroadcastHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1812, TTCN_Location::LOCATION_TEMPLATE, "mw_geoBroadcastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_38 = ret_val.geoBroadcastHeader();
tmp_38.seqNumber() = p__seqNumber;
tmp_38.reserved() = ANY_VALUE;
tmp_38.srcPosVector() = p__sourceLongPosVec;
tmp_38.geoAreaPosLatitude() = ANY_VALUE;
tmp_38.geoAreaPosLongitude() = ANY_VALUE;
tmp_38.distanceA() = ANY_VALUE;
tmp_38.distanceB() = ANY_VALUE;
tmp_38.angle() = ANY_VALUE;
tmp_38.reserved2() = ANY_VALUE;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoBroadcastHeaderWithArea(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template& p__broadcastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1837, TTCN_Location::LOCATION_TEMPLATE, "mw_geoBroadcastHeaderWithArea");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val(mw__geoBroadcastHeader(p__sourceLongPosVec, p__seqNumber));
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_39 = ret_val.geoBroadcastHeader();
tmp_39.geoAreaPosLatitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().geoAreaPosLatitude();
tmp_39.geoAreaPosLongitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().geoAreaPosLongitude();
tmp_39.distanceA() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().distanceA();
tmp_39.distanceB() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().distanceB();
tmp_39.angle() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoBroadcastArea_template&>(p__broadcastArea).geoBroadcastArea().angle();
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::HeaderTST_template m__geoBroadcastHeaderType(const LibItsGeoNetworking__TypesAndValues::HeaderSubTypeGeoBroadcast_template& p__headerSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1855, TTCN_Location::LOCATION_TEMPLATE, "m_geoBroadcastHeaderType");
LibItsGeoNetworking__TypesAndValues::HeaderTST_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoBroadcastHeaderType_template& tmp_40 = ret_val.geoBroadcastHdr();
tmp_40.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoBroadcast;
tmp_40.headerSubType() = p__headerSubType;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::HeaderTST_template mw__geoBroadcastHeaderTypeWithSubType(const LibItsGeoNetworking__TypesAndValues::HeaderSubTypeGeoBroadcast_template& p__headerSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1879, TTCN_Location::LOCATION_TEMPLATE, "mw_geoBroadcastHeaderTypeWithSubType");
LibItsGeoNetworking__TypesAndValues::HeaderTST_template ret_val(mw__geoBroadcastHeaderType);
ret_val.geoBroadcastHdr().headerSubType() = p__headerSubType;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__geoAnycastHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1897, TTCN_Location::LOCATION_TEMPLATE, "m_geoAnycastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_42 = ret_val.geoAnycastHeader();
tmp_42.seqNumber() = p__seqNumber;
tmp_42.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_42.srcPosVector() = p__sourceLongPosVec;
tmp_42.geoAreaPosLatitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().geoAreaPosLatitude();
tmp_42.geoAreaPosLongitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().geoAreaPosLongitude();
tmp_42.distanceA() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().distanceA();
tmp_42.distanceB() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().distanceB();
tmp_42.angle() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().angle();
tmp_42.reserved2() = LibCommon__BasicTypesAndValues::c__uInt24Zero;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoAnycastHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1921, TTCN_Location::LOCATION_TEMPLATE, "mw_geoAnycastHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_43 = ret_val.geoAnycastHeader();
tmp_43.seqNumber() = p__seqNumber;
tmp_43.reserved() = ANY_VALUE;
tmp_43.srcPosVector() = p__sourceLongPosVec;
tmp_43.geoAreaPosLatitude() = ANY_VALUE;
tmp_43.geoAreaPosLongitude() = ANY_VALUE;
tmp_43.distanceA() = ANY_VALUE;
tmp_43.distanceB() = ANY_VALUE;
tmp_43.angle() = ANY_VALUE;
tmp_43.reserved2() = ANY_VALUE;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__geoAnycastHeaderWithArea(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template& p__anycastArea)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1946, TTCN_Location::LOCATION_TEMPLATE, "mw_geoAnycastHeaderWithArea");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val(mw__geoAnycastHeader(p__sourceLongPosVec, p__seqNumber));
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeader_template& tmp_44 = ret_val.geoAnycastHeader();
tmp_44.geoAreaPosLatitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().geoAreaPosLatitude();
tmp_44.geoAreaPosLongitude() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().geoAreaPosLongitude();
tmp_44.distanceA() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().distanceA();
tmp_44.distanceB() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().distanceB();
tmp_44.angle() = const_cast< const LibItsGeoNetworking__TypesAndValues::GeoAnycastArea_template&>(p__anycastArea).geoAnycastArea().angle();
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::HeaderTST_template m__geoAnycastHeaderType(const LibItsGeoNetworking__TypesAndValues::HeaderSubTypeGeoAnycast_template& p__headerSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1964, TTCN_Location::LOCATION_TEMPLATE, "m_geoAnycastHeaderType");
LibItsGeoNetworking__TypesAndValues::HeaderTST_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeaderType_template& tmp_45 = ret_val.geoAnycastHdr();
tmp_45.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoAnycast;
tmp_45.headerSubType() = p__headerSubType;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::HeaderTST_template mw__geoAnycastHeaderTypeWithSubType(const LibItsGeoNetworking__TypesAndValues::HeaderSubTypeGeoAnycast_template& p__headerSubType)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 1988, TTCN_Location::LOCATION_TEMPLATE, "mw_geoAnycastHeaderTypeWithSubType");
LibItsGeoNetworking__TypesAndValues::HeaderTST_template ret_val(mw__geoAnycastHeaderType);
ret_val.geoAnycastHdr().headerSubType() = p__headerSubType;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__lsRequestHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::GN__Address_template& p__gnAddress)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2006, TTCN_Location::LOCATION_TEMPLATE, "m_lsRequestHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::LSRequestHeader_template& tmp_47 = ret_val.lsRequestHeader();
tmp_47.seqNumber() = p__seqNumber;
tmp_47.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_47.srcPosVector() = p__sourceLongPosVec;
tmp_47.gnAddress() = p__gnAddress;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__lsRequestHeader(const INTEGER_template& p__seqNumber, const OCTETSTRING_template& p__mid)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2024, TTCN_Location::LOCATION_TEMPLATE, "mw_lsRequestHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::LSRequestHeader_template& tmp_48 = ret_val.lsRequestHeader();
tmp_48.seqNumber() = p__seqNumber;
tmp_48.reserved() = ANY_VALUE;
tmp_48.srcPosVector() = ANY_VALUE;
tmp_48.gnAddress() = mw__gnAddressMid(p__mid);
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__lsReplyHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationLongPosVec, const INTEGER_template& p__seqNumber)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2066, TTCN_Location::LOCATION_TEMPLATE, "m_lsReplyHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::LSReplyHeader_template& tmp_51 = ret_val.lsReplyHeader();
tmp_51.seqNumber() = p__seqNumber;
tmp_51.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_51.srcPosVector() = p__sourceLongPosVec;
tmp_51.dstPosVector() = p__destinationLongPosVec;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__lsReplyHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec, const LibItsGeoNetworking__TypesAndValues::ShortPosVector_template& p__destinationLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2097, TTCN_Location::LOCATION_TEMPLATE, "mw_lsReplyHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val(mw__lsReplyHeaderAny);
{
LibItsGeoNetworking__TypesAndValues::LSReplyHeader_template& tmp_53 = ret_val.lsReplyHeader();
tmp_53.srcPosVector() = p__sourceLongPosVec;
tmp_53.dstPosVector() = p__destinationLongPosVec;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__beaconHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2126, TTCN_Location::LOCATION_TEMPLATE, "m_beaconHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
ret_val.beaconHeader().srcPosVector() = p__sourceLongPosVec;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__beaconHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2138, TTCN_Location::LOCATION_TEMPLATE, "mw_beaconHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
ret_val.beaconHeader().srcPosVector() = p__sourceLongPosVec;
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__shbHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2174, TTCN_Location::LOCATION_TEMPLATE, "m_shbHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::SHBHeader_template& tmp_57 = ret_val.shbHeader();
tmp_57.srcPosVector() = p__sourceLongPosVec;
tmp_57.reserved() = 0;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__shbHeader(const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2187, TTCN_Location::LOCATION_TEMPLATE, "mw_shbHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::SHBHeader_template& tmp_58 = ret_val.shbHeader();
tmp_58.srcPosVector() = p__sourceLongPosVec;
tmp_58.reserved() = ANY_VALUE;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template m__tsbHeader(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__srcPosVector)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2215, TTCN_Location::LOCATION_TEMPLATE, "m_tsbHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::TSBHeader_template& tmp_60 = ret_val.tsbHeader();
tmp_60.seqNumber() = p__seqNumber;
tmp_60.reserved() = LibCommon__BasicTypesAndValues::c__uInt8Zero;
tmp_60.srcPosVector() = p__srcPosVector;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template mw__tsbHeader(const INTEGER_template& p__seqNumber, const LibItsGeoNetworking__TypesAndValues::LongPosVector_template& p__sourceLongPosVec)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2231, TTCN_Location::LOCATION_TEMPLATE, "mw_tsbHeader");
LibItsGeoNetworking__TypesAndValues::ExtendedHeader_template ret_val;
{
LibItsGeoNetworking__TypesAndValues::TSBHeader_template& tmp_61 = ret_val.tsbHeader();
tmp_61.seqNumber() = p__seqNumber;
tmp_61.reserved() = ANY_VALUE;
tmp_61.srcPosVector() = p__sourceLongPosVec;
}
return ret_val;
}

LibItsGeoNetworking__TypesAndValues::GN__Address_template mw__gnAddressMid(const OCTETSTRING_template& p__mid)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2272, TTCN_Location::LOCATION_TEMPLATE, "mw_gnAddressMid");
LibItsGeoNetworking__TypesAndValues::GN__Address_template ret_val;
ret_val.typeOfAddress() = ANY_VALUE;
ret_val.stationType() = ANY_VALUE;
ret_val.stationCountryCode() = ANY_VALUE;
ret_val.mid() = p__mid;
return ret_val;
}

OCTETSTRING f__adaptPayloadForUtInd__m(const LibItsGeoNetworking__TypesAndValues::Payload_template& p__gnPayload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2329, TTCN_Location::LOCATION_FUNCTION, "f_adaptPayloadForUtInd_m");
current_location.update_lineno(2331);
/* LibItsGeoNetworking_Templates.ttcn, line 2331 */
if ((LibItsGeoNetworking__Pixits::PX__BTP__IN__UT__IND == FALSE)) {
current_location.update_lineno(2332);
/* LibItsGeoNetworking_Templates.ttcn, line 2332 */
{
boolean tmp_64;
tmp_64 = (LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpA);
if (!tmp_64) tmp_64 = (LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpB);
if (tmp_64) {
current_location.update_lineno(2333);
/* LibItsGeoNetworking_Templates.ttcn, line 2333 */
{
boolean tmp_67;
{
boolean tmp_65 = p__gnPayload.is_bound();
if(tmp_65) {
switch (p__gnPayload.get_selection()) {
case UNINITIALIZED_TEMPLATE:
tmp_65 = false;
break;
case ANY_VALUE:
tmp_65 = false;
break;
case SPECIFIC_VALUE: {
if(tmp_65) {
const LibItsGeoNetworking__TypesAndValues::DecodedPayload_template& tmp_66 = p__gnPayload.decodedPayload();
tmp_65 = tmp_66.is_present(TRUE);
}
break;}
default:
tmp_65 = false;
break;
}
}
tmp_67 = tmp_65;
}
if (tmp_67) {
current_location.update_lineno(2334);
/* LibItsGeoNetworking_Templates.ttcn, line 2334 */
{
OCTETSTRING tmp_68;
TTCN_Buffer tmp_69;
LibItsBtp__TypesAndValues::BtpPayload const& tmp_70 = p__gnPayload.decodedPayload().btpPacket().payload().valueof();
tmp_70.encode(LibItsBtp__TypesAndValues::BtpPayload_descr_, tmp_69, TTCN_EncDec::CT_RAW);
tmp_69.get_string(tmp_68);
return bit2oct(oct2bit(tmp_68));
}
}
}
current_location.update_lineno(2337);
/* LibItsGeoNetworking_Templates.ttcn, line 2337 */
return p__gnPayload.rawPayload().valueof();
}
}
}
current_location.update_lineno(2341);
/* LibItsGeoNetworking_Templates.ttcn, line 2341 */
{
OCTETSTRING tmp_71;
TTCN_Buffer tmp_72;
LibItsGeoNetworking__TypesAndValues::Payload const& tmp_73 = p__gnPayload.valueof();
tmp_73.encode(LibItsGeoNetworking__TypesAndValues::Payload_descr_, tmp_72, TTCN_EncDec::CT_RAW);
tmp_72.get_string(tmp_71);
return bit2oct(oct2bit(tmp_71));
}
}

LibItsGeoNetworking__TypesAndValues::Payload_template f__adaptPayload__m(const OCTETSTRING_template& p__finalPayload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2344, TTCN_Location::LOCATION_FUNCTION, "f_adaptPayload_m");
current_location.update_lineno(2345);
/* LibItsGeoNetworking_Templates.ttcn, line 2345 */
LibItsGeoNetworking__TypesAndValues::Payload_template v__payload;
current_location.update_lineno(2347);
/* LibItsGeoNetworking_Templates.ttcn, line 2347 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__any)) {
current_location.update_lineno(2349);
/* LibItsGeoNetworking_Templates.ttcn, line 2349 */
v__payload.decodedPayload() = OMIT_VALUE;
v__payload.rawPayload() = p__finalPayload;
current_location.update_lineno(2351);
/* LibItsGeoNetworking_Templates.ttcn, line 2351 */
return v__payload;
}
current_location.update_lineno(2354);
/* LibItsGeoNetworking_Templates.ttcn, line 2354 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__ipv6)) {
current_location.update_lineno(2356);
/* LibItsGeoNetworking_Templates.ttcn, line 2356 */
v__payload.decodedPayload().ipv6Packet() = LibItsIpv6OverGeoNetworking__Templates::m__ipv6Packet(OCTETSTRING_template(LibItsIpv6OverGeoNetworking__TypesAndValues::c__unspecified), OCTETSTRING_template(LibItsIpv6OverGeoNetworking__TypesAndValues::c__allNodesMca), INTEGER_template(LibItsIpv6OverGeoNetworking__TypesAndValues::c__noNextHdr), LibItsIpv6OverGeoNetworking__Templates::m__octetstringPayload(p__finalPayload));
v__payload.rawPayload() = os_1;
current_location.update_lineno(2358);
/* LibItsGeoNetworking_Templates.ttcn, line 2358 */
return v__payload;
}
current_location.update_lineno(2361);
/* LibItsGeoNetworking_Templates.ttcn, line 2361 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpA)) {
current_location.update_lineno(2362);
/* LibItsGeoNetworking_Templates.ttcn, line 2362 */
{
LibItsBtp__TypesAndValues::BtpPayload_template tmp_77;
tmp_77.decodedPayload() = OMIT_VALUE;
tmp_77.rawPayload() = p__finalPayload;
v__payload.decodedPayload().btpPacket() = LibItsBtp__Templates::m__btpA(tmp_77);
}
v__payload.rawPayload() = os_1;
current_location.update_lineno(2369);
/* LibItsGeoNetworking_Templates.ttcn, line 2369 */
return v__payload;
}
current_location.update_lineno(2372);
/* LibItsGeoNetworking_Templates.ttcn, line 2372 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpB)) {
current_location.update_lineno(2373);
/* LibItsGeoNetworking_Templates.ttcn, line 2373 */
{
LibItsBtp__TypesAndValues::BtpPayload_template tmp_79;
tmp_79.decodedPayload() = OMIT_VALUE;
tmp_79.rawPayload() = p__finalPayload;
v__payload.decodedPayload().btpPacket() = LibItsBtp__Templates::m__btpB(tmp_79);
}
v__payload.rawPayload() = os_1;
current_location.update_lineno(2380);
/* LibItsGeoNetworking_Templates.ttcn, line 2380 */
return v__payload;
}
current_location.update_lineno(2383);
/* LibItsGeoNetworking_Templates.ttcn, line 2383 */
return v__payload;
}

LibItsGeoNetworking__TypesAndValues::Payload_template f__adaptPayload__mw(const OCTETSTRING_template& p__finalPayload)
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 2386, TTCN_Location::LOCATION_FUNCTION, "f_adaptPayload_mw");
current_location.update_lineno(2387);
/* LibItsGeoNetworking_Templates.ttcn, line 2387 */
LibItsGeoNetworking__TypesAndValues::Payload_template v__payload;
current_location.update_lineno(2389);
/* LibItsGeoNetworking_Templates.ttcn, line 2389 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__any)) {
current_location.update_lineno(2391);
/* LibItsGeoNetworking_Templates.ttcn, line 2391 */
v__payload.rawPayload() = p__finalPayload;
current_location.update_lineno(2392);
/* LibItsGeoNetworking_Templates.ttcn, line 2392 */
return v__payload;
}
current_location.update_lineno(2395);
/* LibItsGeoNetworking_Templates.ttcn, line 2395 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__ipv6)) {
current_location.update_lineno(2397);
/* LibItsGeoNetworking_Templates.ttcn, line 2397 */
v__payload.rawPayload() = ANY_VALUE;
current_location.update_lineno(2398);
/* LibItsGeoNetworking_Templates.ttcn, line 2398 */
return v__payload;
}
current_location.update_lineno(2401);
/* LibItsGeoNetworking_Templates.ttcn, line 2401 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpA)) {
current_location.update_lineno(2403);
/* LibItsGeoNetworking_Templates.ttcn, line 2403 */
v__payload.rawPayload() = ANY_VALUE;
current_location.update_lineno(2404);
/* LibItsGeoNetworking_Templates.ttcn, line 2404 */
return v__payload;
}
current_location.update_lineno(2407);
/* LibItsGeoNetworking_Templates.ttcn, line 2407 */
if ((LibItsGeoNetworking__Pixits::PX__GN__UPPER__LAYER == LibItsGeoNetworking__TypesAndValues::NextHeader::e__btpB)) {
current_location.update_lineno(2409);
/* LibItsGeoNetworking_Templates.ttcn, line 2409 */
v__payload.rawPayload() = ANY_VALUE;
current_location.update_lineno(2411);
/* LibItsGeoNetworking_Templates.ttcn, line 2411 */
return v__payload;
}
current_location.update_lineno(2414);
/* LibItsGeoNetworking_Templates.ttcn, line 2414 */
return v__payload;
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsGeoNetworking_Templates");
LibItsBtp__Templates::module_object.pre_init_module();
LibItsIpv6OverGeoNetworking__Templates::module_object.pre_init_module();
LibItsGeoNetworking__Pixits::module_object.pre_init_module();
module_object.add_function("f_getDelta32", (genericfunc_t)&f__getDelta32, NULL);
module_object.add_function("f_getDelta15", (genericfunc_t)&f__getDelta15, NULL);
module_object.add_function("f_adaptPayloadForUtInd_m", (genericfunc_t)&f__adaptPayloadForUtInd__m, NULL);
module_object.add_function("f_adaptPayload_m", (genericfunc_t)&f__adaptPayload__m, NULL);
module_object.add_function("f_adaptPayload_mw", (genericfunc_t)&f__adaptPayload__mw, NULL);
}

static void post_init_module()
{
TTCN_Location current_location("LibItsGeoNetworking_Templates.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsGeoNetworking_Templates");
LibItsBtp__Templates::module_object.post_init_module();
LibItsIpv6OverGeoNetworking__Templates::module_object.post_init_module();
LibItsGeoNetworking__Pixits::module_object.post_init_module();
current_location.update_lineno(90);
/* LibItsGeoNetworking_Templates.ttcn, line 90 */
template_m__gnInitialize.hashedId8() = os_0;
const_m__trafficClass_p__scf_defval = LibItsGeoNetworking__TypesAndValues::SCF::e__scfEnable;
const_m__trafficClass_p__ChOff_defval = LibItsGeoNetworking__TypesAndValues::ChannelOffload::e__choffDisabled;
current_location.update_lineno(289);
/* LibItsGeoNetworking_Templates.ttcn, line 289 */
{
LibItsGeoNetworking__TypesAndValues::GenerateSHBMessage_template& tmp_10 = template_m__generateShbMessage.shb();
tmp_10.trafficClass() = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_11 = tmp_10.payload();
tmp_11.decodedPayload() = OMIT_VALUE;
tmp_11.rawPayload() = os_1;
}
}
current_location.update_lineno(325);
/* LibItsGeoNetworking_Templates.ttcn, line 325 */
{
LibItsGeoNetworking__TypesAndValues::GenerateTSBMessage_template& tmp_13 = template_m__generateTsbMessage.tsb();
tmp_13.nbHops() = 10;
tmp_13.lifetime() = LibItsGeoNetworking__TypesAndValues::c__lifetime;
tmp_13.trafficClass() = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
{
LibItsGeoNetworking__TypesAndValues::Payload_template& tmp_14 = tmp_13.payload();
tmp_14.decodedPayload() = OMIT_VALUE;
tmp_14.rawPayload() = os_1;
}
}
current_location.update_lineno(361);
/* LibItsGeoNetworking_Templates.ttcn, line 361 */
template_m__changePosition.latitude() = 1000;
template_m__changePosition.longitude() = 0;
template_m__changePosition.elevation() = 0;
current_location.update_lineno(387);
/* LibItsGeoNetworking_Templates.ttcn, line 387 */
template_m__stopBeaconing.stopBeaconing() = NULL_VALUE;
current_location.update_lineno(407);
/* LibItsGeoNetworking_Templates.ttcn, line 407 */
template_m__stopPassBeaconing.stopPassBeaconing() = NULL_VALUE;
current_location.update_lineno(431);
/* LibItsGeoNetworking_Templates.ttcn, line 431 */
template_m__stopBeaconingMultipleNeighbour.stopBeaconingMultipleNeighbour() = NULL_VALUE;
template_m__defaultLifetime.multiplier() = LibItsGeoNetworking__TypesAndValues::c__defaultLifetime;
template_m__defaultLifetime.ltBase() = LibItsGeoNetworking__TypesAndValues::LtBase::e__100s;
template_m__geoNwPdu_p__lifeTime_defval = m__defaultLifetime;
template_m__geoNwPdu_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_mw__geoNwPdu_p__lifeTime_defval = ANY_VALUE;
template_mw__geoNwPdu_p__hopLimit_defval = ANY_VALUE;
template_mw__geoNwSecPdu_p__packet_defval = ANY_VALUE;
current_location.update_lineno(676);
/* LibItsGeoNetworking_Templates.ttcn, line 676 */
template_mw__geoNwAnyPacket.commonHeader() = mw__commonHeader(LibItsGeoNetworking__TypesAndValues::NextHeader_template(ANY_VALUE), LibItsGeoNetworking__TypesAndValues::HeaderTST_template(ANY_VALUE));
template_mw__geoNwAnyPacket.extendedHeader() = ANY_OR_OMIT;
template_mw__geoNwAnyPacket.payload() = ANY_OR_OMIT;
template_m__geoNwUnicastPacket_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_m__geoNwUnicastPacket_p__trafficClass_defval = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
template_mw__geoNwUnicastPacketWithHl_p__hopLimit_defval = ANY_VALUE;
template_m__geoNwAnycastPacket_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_m__geoNwAnycastPacket_p__trafficClass_defval = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
template_mw__geoNwAnycastPacketWithAreaAndHl_p__maxHopLimit_defval = ANY_VALUE;
template_m__geoNwBroadcastPacket_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_m__geoNwBroadcastPacket_p__trafficClass_defval = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
template_mw__geoNwBroadcastPacketWithAreaAndHl_p__maxHopLimit_defval = ANY_VALUE;
template_mw__geoNwBroadcastPacketWithHlAndFlags_p__seqNumber_defval = ANY_VALUE;
template_mw__geoNwBroadcastPacketWithHlAndFlags_p__hopLimit_defval = ANY_VALUE;
template_mw__geoNwBroadcastPacketWithHlAndFlags_p__flags_defval = ANY_VALUE;
template_mw__geoNwBeaconPacket_p__sourceLongPosVec_defval = ANY_VALUE;
template_mw__geoNwBeaconPacket_p__nextHeader_defval = LibItsGeoNetworking__TypesAndValues::NextHeader::e__any;
template_mw__geoNwShbPacket_p__sourceLongPosVec_defval = ANY_VALUE;
template_mw__geoNwShbPacket_p__hopLimit_defval = ANY_VALUE;
template_m__geoNwTsbPacket_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_m__geoNwTsbPacket_p__trafficClass_defval = m__trafficClass(m__trafficClass_p__scf_defval, m__trafficClass_p__ChOff_defval);
template_mw__geoNwTsbPacket_p__seqNumber_defval = ANY_VALUE;
template_mw__geoNwTsbPacket_p__sourceLongPosVec_defval = ANY_VALUE;
template_mw__geoNwTsbPacketWithHl_p__seqNumber_defval = ANY_VALUE;
template_mw__geoNwTsbPacketWithHl_p__sourceLongPosVec_defval = ANY_VALUE;
template_mw__geoNwTsbPacketWithHl_p__hopLimit_defval = ANY_VALUE;
template_mw__geoNwTsbPacketWithNextHeader_p__seqNumber_defval = ANY_VALUE;
template_mw__geoNwTsbPacketWithNextHeader_p__sourceLongPosVec_defval = ANY_VALUE;
template_m__basicHeader_p__lifeTime_defval = m__defaultLifetime;
template_m__basicHeader_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_mw__basicHeader_p__lifeTime_defval = ANY_VALUE;
template_mw__basicHeader_p__hopLimit_defval = ANY_VALUE;
template_m__securedBasicHeader_p__lifeTime_defval = m__defaultLifetime;
template_m__securedBasicHeader_p__hopLimit_defval = LibItsGeoNetworking__TypesAndValues::c__defaultHopLimit;
template_mw__securedBasicHeader_p__lifeTime_defval = ANY_VALUE;
template_mw__securedBasicHeader_p__hopLimit_defval = ANY_VALUE;
current_location.update_lineno(1436);
/* LibItsGeoNetworking_Templates.ttcn, line 1436 */
current_location.update_lineno(1454);
/* LibItsGeoNetworking_Templates.ttcn, line 1454 */
template_mw__lifetime0.multiplier() = 0;
template_mw__lifetime0.ltBase() = ANY_VALUE;
template_mw__trafficClass_p__scf_defval = ANY_VALUE;
template_mw__trafficClass_p__ChOff_defval = ANY_VALUE;
current_location.update_lineno(1579);
/* LibItsGeoNetworking_Templates.ttcn, line 1579 */
template_mw__gnAddressAny.typeOfAddress() = ANY_VALUE;
template_mw__gnAddressAny.stationType() = ANY_VALUE;
template_mw__gnAddressAny.stationCountryCode() = ANY_VALUE;
template_mw__gnAddressAny.mid() = ANY_VALUE;
current_location.update_lineno(1761);
/* LibItsGeoNetworking_Templates.ttcn, line 1761 */
{
LibItsGeoNetworking__TypesAndValues::GeoUnicastHeaderType_template& tmp_35 = template_m__geoUnicastHeaderType.geoUnicastHdr();
tmp_35.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoUnicast;
tmp_35.headerSubType() = LibCommon__BasicTypesAndValues::c__uInt4Zero;
}
current_location.update_lineno(1771);
/* LibItsGeoNetworking_Templates.ttcn, line 1771 */
{
LibItsGeoNetworking__TypesAndValues::GeoUnicastHeaderType_template& tmp_36 = template_mw__geoUnicastHeaderType.geoUnicastHdr();
tmp_36.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoUnicast;
tmp_36.headerSubType() = LibCommon__BasicTypesAndValues::c__uInt4Zero;
}
current_location.update_lineno(1867);
/* LibItsGeoNetworking_Templates.ttcn, line 1867 */
{
LibItsGeoNetworking__TypesAndValues::GeoBroadcastHeaderType_template& tmp_41 = template_mw__geoBroadcastHeaderType.geoBroadcastHdr();
tmp_41.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoBroadcast;
tmp_41.headerSubType() = ANY_VALUE;
}
current_location.update_lineno(1976);
/* LibItsGeoNetworking_Templates.ttcn, line 1976 */
{
LibItsGeoNetworking__TypesAndValues::GeoAnycastHeaderType_template& tmp_46 = template_mw__geoAnycastHeaderType.geoAnycastHdr();
tmp_46.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__geoAnycast;
tmp_46.headerSubType() = ANY_VALUE;
}
current_location.update_lineno(2039);
/* LibItsGeoNetworking_Templates.ttcn, line 2039 */
{
LibItsGeoNetworking__TypesAndValues::LsHeaderType_template& tmp_49 = template_m__lsRequestHeaderType.lsHdr();
tmp_49.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__locationService;
tmp_49.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeLs::e__lsRequest;
}
current_location.update_lineno(2049);
/* LibItsGeoNetworking_Templates.ttcn, line 2049 */
{
LibItsGeoNetworking__TypesAndValues::LsHeaderType_template& tmp_50 = template_mw__lsRequestHeaderType.lsHdr();
tmp_50.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__locationService;
tmp_50.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeLs::e__lsRequest;
}
current_location.update_lineno(2082);
/* LibItsGeoNetworking_Templates.ttcn, line 2082 */
{
LibItsGeoNetworking__TypesAndValues::LSReplyHeader_template& tmp_52 = template_mw__lsReplyHeaderAny.lsReplyHeader();
tmp_52.seqNumber() = ANY_VALUE;
tmp_52.reserved() = ANY_VALUE;
tmp_52.srcPosVector() = ANY_VALUE;
tmp_52.dstPosVector() = ANY_VALUE;
}
current_location.update_lineno(2111);
/* LibItsGeoNetworking_Templates.ttcn, line 2111 */
{
LibItsGeoNetworking__TypesAndValues::LsHeaderType_template& tmp_54 = template_m__lsReplyHeaderType.lsHdr();
tmp_54.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__locationService;
tmp_54.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeLs::e__lsReply;
}
current_location.update_lineno(2149);
/* LibItsGeoNetworking_Templates.ttcn, line 2149 */
{
LibItsGeoNetworking__TypesAndValues::BeaconHeaderType_template& tmp_55 = template_m__beaconHeaderType.beaconHdr();
tmp_55.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__beacon;
tmp_55.headerSubType() = LibCommon__BasicTypesAndValues::c__uInt4Zero;
}
current_location.update_lineno(2159);
/* LibItsGeoNetworking_Templates.ttcn, line 2159 */
{
LibItsGeoNetworking__TypesAndValues::BeaconHeaderType_template& tmp_56 = template_mw__beaconHeaderType.beaconHdr();
tmp_56.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__beacon;
tmp_56.headerSubType() = ANY_VALUE;
}
current_location.update_lineno(2199);
/* LibItsGeoNetworking_Templates.ttcn, line 2199 */
{
LibItsGeoNetworking__TypesAndValues::TsbHeaderType_template& tmp_59 = template_m__shbHeaderType.tsbHdr();
tmp_59.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__topologicallyScopedBroadcast;
tmp_59.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeTSB::e__singleHop;
}
current_location.update_lineno(2245);
/* LibItsGeoNetworking_Templates.ttcn, line 2245 */
{
LibItsGeoNetworking__TypesAndValues::TsbHeaderType_template& tmp_62 = template_m__tsbHeaderType.tsbHdr();
tmp_62.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__topologicallyScopedBroadcast;
tmp_62.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeTSB::e__multiHop;
}
current_location.update_lineno(2255);
/* LibItsGeoNetworking_Templates.ttcn, line 2255 */
{
LibItsGeoNetworking__TypesAndValues::TsbHeaderType_template& tmp_63 = template_mw__tsbHeaderType.tsbHdr();
tmp_63.headerType() = LibItsGeoNetworking__TypesAndValues::HeaderType::e__topologicallyScopedBroadcast;
tmp_63.headerSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeTSB::e__multiHop;
}
current_location.update_lineno(2284);
/* LibItsGeoNetworking_Templates.ttcn, line 2284 */
template_m__dummyGnAddr.typeOfAddress() = LibItsGeoNetworking__TypesAndValues::TypeOfAddress::e__manual;
template_m__dummyGnAddr.stationType() = LibItsGeoNetworking__TypesAndValues::StationType::e__passengerCar;
template_m__dummyGnAddr.stationCountryCode() = LibCommon__BasicTypesAndValues::c__uInt10Zero;
template_m__dummyGnAddr.mid() = LibCommon__DataStrings::c__6ZeroBytes;
current_location.update_lineno(2294);
/* LibItsGeoNetworking_Templates.ttcn, line 2294 */
template_m__dummyLongPosVector.gnAddr() = m__dummyGnAddr;
template_m__dummyLongPosVector.timestamp() = LibCommon__BasicTypesAndValues::c__uInt32Zero;
template_m__dummyLongPosVector.latitude() = LibCommon__BasicTypesAndValues::c__uInt32Zero;
template_m__dummyLongPosVector.longitude() = LibCommon__BasicTypesAndValues::c__uInt32Zero;
template_m__dummyLongPosVector.pai() = bs_0;
template_m__dummyLongPosVector.speed() = LibCommon__BasicTypesAndValues::c__uInt16Zero;
template_m__dummyLongPosVector.heading() = LibCommon__BasicTypesAndValues::c__uInt16Zero;
current_location.update_lineno(2307);
/* LibItsGeoNetworking_Templates.ttcn, line 2307 */
template_m__dummyArea.geoAreaPosLatitude() = LibCommon__BasicTypesAndValues::c__uInt32Zero;
template_m__dummyArea.geoAreaPosLongitude() = LibCommon__BasicTypesAndValues::c__uInt32Zero;
template_m__dummyArea.distanceA() = LibCommon__BasicTypesAndValues::c__uInt16Zero;
template_m__dummyArea.distanceB() = LibCommon__BasicTypesAndValues::c__uInt16Zero;
template_m__dummyArea.angle() = LibCommon__BasicTypesAndValues::c__uInt16Zero;
current_location.update_lineno(2318);
/* LibItsGeoNetworking_Templates.ttcn, line 2318 */
template_m__dummyGeoBroadcastArea.geoBroadcastSubType() = LibItsGeoNetworking__TypesAndValues::HeaderSubTypeGeoBroadcast::e__geoBroadcastRect;
template_m__dummyGeoBroadcastArea.geoBroadcastArea() = m__dummyArea;
}


} /* end of namespace */
