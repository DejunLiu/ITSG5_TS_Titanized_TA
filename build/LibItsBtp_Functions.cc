// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "LibItsBtp_Functions.hh"

namespace LibItsBtp__Functions {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments);

/* Literal string constants */

static const CHARSTRING cs_1(4, "*** "),
cs_2(58, ": INFO: Received unhandled/unknown UT message from IUT ***"),
cs_0(5, "error");
static const unsigned char module_checksum[] = { 0x6a, 0x6a, 0x66, 0x4d, 0xd6, 0x27, 0x4f, 0xdb, 0xbc, 0xa1, 0xc7, 0x6f, 0xe9, 0x2b, 0xa1, 0x53 };

/* Class definitions for internal use */

class a__default_Default : public Default_Base {
public:
a__default_Default();
alt_status call_altstep();
};

class a__utDefault_Default : public Default_Base {
public:
a__utDefault_Default();
alt_status call_altstep();
};


/* Global variable definitions */

static const size_t num_namespaces = 0;
TTCN_Module module_object("LibItsBtp_Functions", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, start_ptc_function, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Member functions of C++ classes */

a__default_Default::a__default_Default()
 : Default_Base("a_default")
{
}

alt_status a__default_Default::call_altstep()
{
return a__default_instance();
}

a__utDefault_Default::a__utDefault_Default()
 : Default_Base("a_utDefault")
{
}

alt_status a__utDefault_Default::call_altstep()
{
return a__utDefault_instance();
}


/* Bodies of functions, altsteps and testcases */

void f__utInitializeIut(const LibItsCommon__TypesAndValues::UtInitialize_template& p__init)
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 35, TTCN_Location::LOCATION_FUNCTION, "f_utInitializeIut");
current_location.update_lineno(36);
/* LibItsBtp_Functions.ttcn, line 36 */
LibItsCommon__TypesAndValues::UtInitializeResult v__UtInitializeResult;
current_location.update_lineno(37);
/* LibItsBtp_Functions.ttcn, line 37 */
v__UtInitializeResult.utInitializeResult() = TRUE;
current_location.update_lineno(39);
/* LibItsBtp_Functions.ttcn, line 39 */
LibItsBtp__TestSystem::ItsBtp_component_utPort.send(p__init);
current_location.update_lineno(40);
/* LibItsBtp_Functions.ttcn, line 40 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.start();
current_location.update_lineno(41);
/* LibItsBtp_Functions.ttcn, line 41 */
{
tmp_1:
alt_status tmp_1_alt_flag_0 = ALT_MAYBE;
alt_status tmp_1_alt_flag_1 = ALT_MAYBE;
alt_status tmp_1_alt_flag_2 = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_1_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(42);
/* LibItsBtp_Functions.ttcn, line 42 */
tmp_1_alt_flag_0 = LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(LibItsCommon__TypesAndValues::UtInitializeResult_template(v__UtInitializeResult), NULL, any_compref, NULL);
if (tmp_1_alt_flag_0 == ALT_YES) {
current_location.update_lineno(43);
/* LibItsBtp_Functions.ttcn, line 43 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.stop();
current_location.update_lineno(44);
/* LibItsBtp_Functions.ttcn, line 44 */
TTCN_Logger::log_str(TTCN_USER, "*** f_utInitializeIut: INFO: IUT initialized ***");
break;
}
}
if (tmp_1_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(46);
/* LibItsBtp_Functions.ttcn, line 46 */
tmp_1_alt_flag_1 = LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(any_compref, NULL);
if (tmp_1_alt_flag_1 == ALT_YES) {
current_location.update_lineno(47);
/* LibItsBtp_Functions.ttcn, line 47 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.stop();
current_location.update_lineno(48);
/* LibItsBtp_Functions.ttcn, line 48 */
TTCN_Logger::log_str(TTCN_USER, "*** LibItsBtp_Functions.f_utInitializeIut: INFO: IUT could not be initialized ***");
current_location.update_lineno(49);
/* LibItsBtp_Functions.ttcn, line 49 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(cs_0, LibCommon__VerdictControl::FncRetCode::e__error);
break;
}
}
if (tmp_1_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(51);
/* LibItsBtp_Functions.ttcn, line 51 */
tmp_1_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.timeout();
if (tmp_1_alt_flag_2 == ALT_YES) {
current_location.update_lineno(52);
/* LibItsBtp_Functions.ttcn, line 52 */
TTCN_Logger::log_str(TTCN_USER, "********************************************* f_utInitializeIut: INFO: IUT could not be initialized in time ***");
current_location.update_lineno(53);
/* LibItsBtp_Functions.ttcn, line 53 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(cs_0, LibCommon__VerdictControl::FncRetCode::e__timeout);
break;
}
}
TTCN_Snapshot::else_branch_reached();
{
current_location.update_lineno(57);
/* LibItsBtp_Functions.ttcn, line 57 */
goto tmp_1;
}
}
}
}

void start_f__utInitializeIut(const COMPONENT& component_reference, const LibItsCommon__TypesAndValues::UtInitialize_template& p__init)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_utInitializeIut(");
p__init.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_utInitializeIut", text_buf);
p__init.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__utTriggerEvent(const LibItsBtp__TypesAndValues::UtBtpTrigger_template& p__event)
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 67, TTCN_Location::LOCATION_FUNCTION, "f_utTriggerEvent");
current_location.update_lineno(68);
/* LibItsBtp_Functions.ttcn, line 68 */
LibItsBtp__TypesAndValues::UtBtpTriggerResult v__UtBtpTriggerResult;
current_location.update_lineno(69);
/* LibItsBtp_Functions.ttcn, line 69 */
v__UtBtpTriggerResult.utBtpTriggerResult() = TRUE;
current_location.update_lineno(71);
/* LibItsBtp_Functions.ttcn, line 71 */
LibItsBtp__TestSystem::ItsBtp_component_utPort.send(p__event);
current_location.update_lineno(73);
/* LibItsBtp_Functions.ttcn, line 73 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.start();
current_location.update_lineno(74);
/* LibItsBtp_Functions.ttcn, line 74 */
{
tmp_3:
alt_status tmp_3_alt_flag_0 = ALT_MAYBE;
alt_status tmp_3_alt_flag_1 = ALT_MAYBE;
alt_status tmp_3_alt_flag_2 = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_3_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(75);
/* LibItsBtp_Functions.ttcn, line 75 */
tmp_3_alt_flag_0 = LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(LibItsBtp__TypesAndValues::UtBtpTriggerResult_template(v__UtBtpTriggerResult), NULL, any_compref, NULL);
if (tmp_3_alt_flag_0 == ALT_YES) {
current_location.update_lineno(76);
/* LibItsBtp_Functions.ttcn, line 76 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.stop();
break;
}
}
if (tmp_3_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(78);
/* LibItsBtp_Functions.ttcn, line 78 */
tmp_3_alt_flag_1 = LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(any_compref, NULL);
if (tmp_3_alt_flag_1 == ALT_YES) {
current_location.update_lineno(79);
/* LibItsBtp_Functions.ttcn, line 79 */
LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.stop();
break;
}
}
if (tmp_3_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(81);
/* LibItsBtp_Functions.ttcn, line 81 */
tmp_3_alt_flag_2 = LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.timeout();
if (tmp_3_alt_flag_2 == ALT_YES) break;
}
TTCN_Snapshot::else_branch_reached();
{
current_location.update_lineno(85);
/* LibItsBtp_Functions.ttcn, line 85 */
goto tmp_3;
}
}
}
}

void start_f__utTriggerEvent(const COMPONENT& component_reference, const LibItsBtp__TypesAndValues::UtBtpTrigger_template& p__event)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_utTriggerEvent(");
p__event.log();
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_utTriggerEvent", text_buf);
p__event.encode_text(text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cfUp()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 97, TTCN_Location::LOCATION_FUNCTION, "f_cfUp");
current_location.update_lineno(99);
/* LibItsBtp_Functions.ttcn, line 99 */
TTCN_Runtime::map_port(self, LibItsBtp__TestSystem::ItsBtp_component_utPort.get_name(), SYSTEM_COMPREF, "utPort");
current_location.update_lineno(100);
/* LibItsBtp_Functions.ttcn, line 100 */
TTCN_Runtime::map_port(self, LibItsBtp__TestSystem::ItsBtp_component_btpPort.get_name(), SYSTEM_COMPREF, "btpPort");
current_location.update_lineno(101);
/* LibItsBtp_Functions.ttcn, line 101 */
LibCommon__Sync::f__connect4SelfOrClientSync();
}

void start_f__cfUp(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cfUp(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_cfUp", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__cfDown()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 108, TTCN_Location::LOCATION_FUNCTION, "f_cfDown");
current_location.update_lineno(110);
/* LibItsBtp_Functions.ttcn, line 110 */
TTCN_Runtime::unmap_port(self, LibItsBtp__TestSystem::ItsBtp_component_utPort.get_name(), SYSTEM_COMPREF, "utPort");
current_location.update_lineno(111);
/* LibItsBtp_Functions.ttcn, line 111 */
TTCN_Runtime::unmap_port(self, LibItsBtp__TestSystem::ItsBtp_component_btpPort.get_name(), SYSTEM_COMPREF, "btpPort");
current_location.update_lineno(112);
/* LibItsBtp_Functions.ttcn, line 112 */
LibCommon__Sync::f__disconnect4SelfOrClientSync();
}

void start_f__cfDown(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_cfDown(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_cfDown", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

alt_status a__default_instance()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 123, TTCN_Location::LOCATION_ALTSTEP, "a_default");
alt_status ret_val = ALT_NO;
current_location.update_lineno(124);
/* LibItsBtp_Functions.ttcn, line 124 */
switch (LibItsBtp__TestSystem::ItsBtp_component_btpPort.receive(LibItsBtp__Templates::mw__btpInd(LibItsBtp__Templates::mw__btpA(INTEGER_template(2002), INTEGER_template(ANY_VALUE), LibItsBtp__TypesAndValues::BtpPayload_template(ANY_OR_OMIT))), NULL, any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(125);
/* LibItsBtp_Functions.ttcn, line 125 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: DENM/BTP message received and discarded ***");
current_location.update_lineno(126);
/* LibItsBtp_Functions.ttcn, line 126 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(129);
/* LibItsBtp_Functions.ttcn, line 129 */
switch (LibItsBtp__TestSystem::ItsBtp_component_btpPort.receive(LibItsBtp__Templates::mw__btpInd(LibItsBtp__Templates::mw__btpA(INTEGER_template(2001), INTEGER_template(ANY_VALUE), LibItsBtp__TypesAndValues::BtpPayload_template(ANY_OR_OMIT))), NULL, any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(130);
/* LibItsBtp_Functions.ttcn, line 130 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: CAM/BTP message  received and discarded ***");
current_location.update_lineno(131);
/* LibItsBtp_Functions.ttcn, line 131 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(134);
/* LibItsBtp_Functions.ttcn, line 134 */
switch (LibItsBtp__TestSystem::ItsBtp_component_btpPort.receive(LibItsBtp__Templates::mw__btpInd(LibItsBtp__Templates::mw__btpB(INTEGER_template(2002), INTEGER_template(ANY_VALUE), LibItsBtp__TypesAndValues::BtpPayload_template(ANY_OR_OMIT))), NULL, any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(135);
/* LibItsBtp_Functions.ttcn, line 135 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: DENM/BTP message  received and discarded ***");
current_location.update_lineno(136);
/* LibItsBtp_Functions.ttcn, line 136 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(139);
/* LibItsBtp_Functions.ttcn, line 139 */
switch (LibItsBtp__TestSystem::ItsBtp_component_btpPort.receive(LibItsBtp__Templates::mw__btpInd(LibItsBtp__Templates::mw__btpB(INTEGER_template(2001), INTEGER_template(ANY_VALUE), LibItsBtp__TypesAndValues::BtpPayload_template(ANY_OR_OMIT))), NULL, any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(140);
/* LibItsBtp_Functions.ttcn, line 140 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: CAM/BTP message  received and discarded ***");
current_location.update_lineno(141);
/* LibItsBtp_Functions.ttcn, line 141 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(143);
/* LibItsBtp_Functions.ttcn, line 143 */
switch (LibItsBtp__TestSystem::ItsBtp_component_btpPort.receive(any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(144);
/* LibItsBtp_Functions.ttcn, line 144 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: ERROR: Received an unexpected message ***");
current_location.update_lineno(145);
/* LibItsBtp_Functions.ttcn, line 145 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(cs_0, LibCommon__VerdictControl::FncRetCode::e__error);
}
return ALT_YES;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(147);
/* LibItsBtp_Functions.ttcn, line 147 */
switch (LibItsCommon__TestSystem::ItsBaseComponent_component_tc__wait.timeout()) {
case ALT_YES:
{
current_location.update_lineno(148);
/* LibItsBtp_Functions.ttcn, line 148 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: INCONC: Timeout while awaiting reaction of the IUT prior to Upper Tester action ***");
current_location.update_lineno(149);
/* LibItsBtp_Functions.ttcn, line 149 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(cs_0, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
return ALT_YES;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(151);
/* LibItsBtp_Functions.ttcn, line 151 */
switch (LibItsCommon__TestSystem::ItsBaseComponent_component_tc__ac.timeout()) {
case ALT_YES:
{
current_location.update_lineno(152);
/* LibItsBtp_Functions.ttcn, line 152 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: INCONC: Timeout while awaiting the reception of a message ***");
current_location.update_lineno(153);
/* LibItsBtp_Functions.ttcn, line 153 */
LibCommon__Sync::f__selfOrClientSyncAndVerdict(cs_0, LibCommon__VerdictControl::FncRetCode::e__timeout);
}
return ALT_YES;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(155);
/* LibItsBtp_Functions.ttcn, line 155 */
switch (LibCommon__Sync::a__shutdown_instance()) {
case ALT_YES:
{
current_location.update_lineno(156);
/* LibItsBtp_Functions.ttcn, line 156 */
f__poDefault();
current_location.update_lineno(157);
/* LibItsBtp_Functions.ttcn, line 157 */
f__cfDown();
current_location.update_lineno(158);
/* LibItsBtp_Functions.ttcn, line 158 */
TTCN_Logger::log_str(TTCN_USER, "*** a_default: INFO: TEST COMPONENT NOW STOPPING ITSELF! ***");
current_location.update_lineno(159);
/* LibItsBtp_Functions.ttcn, line 159 */
TTCN_Runtime::stop_execution();
}
case ALT_REPEAT:
return ALT_REPEAT;
case ALT_BREAK:
return ALT_BREAK;
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__default()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__default_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_default.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__default()
{
return new a__default_Default();
}

alt_status a__utDefault_instance()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 166, TTCN_Location::LOCATION_ALTSTEP, "a_utDefault");
current_location.update_lineno(167);
/* LibItsBtp_Functions.ttcn, line 167 */
LibItsBtp__TypesAndValues::UtBtpEventInd v__ind;
alt_status ret_val = ALT_NO;
current_location.update_lineno(168);
/* LibItsBtp_Functions.ttcn, line 168 */
switch (LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(LibItsBtp__TypesAndValues::UtBtpEventInd_template(ANY_VALUE), &(v__ind), any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(170);
/* LibItsBtp_Functions.ttcn, line 170 */
LibItsBtp__TestSystem::ItsBtp_component_vc__utEvents[LibItsBtp__TestSystem::ItsBtp_component_vc__utEvents.lengthof()] = v__ind;
current_location.update_lineno(171);
/* LibItsBtp_Functions.ttcn, line 171 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
current_location.update_lineno(173);
/* LibItsBtp_Functions.ttcn, line 173 */
switch (LibItsBtp__TestSystem::ItsBtp_component_utPort.receive(any_compref, NULL)) {
case ALT_YES:
{
current_location.update_lineno(174);
/* LibItsBtp_Functions.ttcn, line 174 */
try {
TTCN_Logger::begin_event(TTCN_USER);
((cs_1 + TTCN_Runtime::get_testcasename()) + cs_2).log();
TTCN_Logger::end_event();
} catch (...) {
TTCN_Logger::finish_event();
throw;
}
current_location.update_lineno(175);
/* LibItsBtp_Functions.ttcn, line 175 */
return ALT_REPEAT;
}
case ALT_MAYBE:
ret_val = ALT_MAYBE;
default:
break;
}
return ret_val;
}

void a__utDefault()
{
altstep_begin:
boolean block_flag = FALSE;
alt_status altstep_flag = ALT_UNCHECKED, default_flag = ALT_UNCHECKED;
for ( ; ; ) {
TTCN_Snapshot::take_new(block_flag);
if (altstep_flag != ALT_NO) {
altstep_flag = a__utDefault_instance();
if (altstep_flag == ALT_YES || altstep_flag == ALT_BREAK) return;
else if (altstep_flag == ALT_REPEAT) goto altstep_begin;
}
if (default_flag != ALT_NO) {
default_flag = TTCN_Default::try_altsteps();
if (default_flag == ALT_YES || default_flag == ALT_BREAK) return;
else if (default_flag == ALT_REPEAT) goto altstep_begin;
}
if (altstep_flag == ALT_NO && default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in altstep a_utDefault.");
else block_flag = TRUE;
}
}

Default_Base *activate_a__utDefault()
{
return new a__utDefault_Default();
}

void f__prDefault()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 186, TTCN_Location::LOCATION_FUNCTION, "f_prDefault");
current_location.update_lineno(187);
/* LibItsBtp_Functions.ttcn, line 187 */
activate_a__default();
current_location.update_lineno(188);
/* LibItsBtp_Functions.ttcn, line 188 */
activate_a__utDefault();
}

void start_f__prDefault(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_prDefault(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_prDefault", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__prInitialState()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 194, TTCN_Location::LOCATION_FUNCTION, "f_prInitialState");
current_location.update_lineno(196);
/* LibItsBtp_Functions.ttcn, line 196 */
f__utInitializeIut(LibItsBtp__Templates::m__btpInitialize);
current_location.update_lineno(197);
/* LibItsBtp_Functions.ttcn, line 197 */
f__prDefault();
}

void start_f__prInitialState(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_prInitialState(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_prInitialState", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

void f__poDefault()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 209, TTCN_Location::LOCATION_FUNCTION, "f_poDefault");
}

void start_f__poDefault(const COMPONENT& component_reference)
{
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_poDefault(");
TTCN_Logger::log_event_str(") on component ");
component_reference.log();
TTCN_Logger::log_char('.');
TTCN_Logger::end_event();
Text_Buf text_buf;
TTCN_Runtime::prepare_start_component(component_reference, "LibItsBtp_Functions", "f_poDefault", text_buf);
TTCN_Runtime::send_start_component(text_buf);
}

INTEGER f__getBtpSrcPort()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 221, TTCN_Location::LOCATION_FUNCTION, "f_getBtpSrcPort");
current_location.update_lineno(222);
/* LibItsBtp_Functions.ttcn, line 222 */
return LibItsBtp__Pixits::PX__SOURCE__PORT;
}

INTEGER f__getBtpDstPort()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 229, TTCN_Location::LOCATION_FUNCTION, "f_getBtpDstPort");
current_location.update_lineno(230);
/* LibItsBtp_Functions.ttcn, line 230 */
return LibItsBtp__Pixits::PX__DESTINATION__PORT;
}

INTEGER f__getBtpUnknownDstPort()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 237, TTCN_Location::LOCATION_FUNCTION, "f_getBtpUnknownDstPort");
current_location.update_lineno(238);
/* LibItsBtp_Functions.ttcn, line 238 */
return LibItsBtp__Pixits::PX__UNKNOWN__DESTINATION__PORT;
}

INTEGER f__getBtpDstPortInfo()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 245, TTCN_Location::LOCATION_FUNCTION, "f_getBtpDstPortInfo");
current_location.update_lineno(246);
/* LibItsBtp_Functions.ttcn, line 246 */
return LibItsBtp__Pixits::PX__DESTINATION__PORT__INFO;
}

LibItsBtp__TypesAndValues::BtpPayload f__getBtpPayload()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 253, TTCN_Location::LOCATION_FUNCTION, "f_getBtpPayload");
current_location.update_lineno(254);
/* LibItsBtp_Functions.ttcn, line 254 */
return LibItsBtp__Pixits::PX__PAYLOAD;
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsBtp_Functions");
LibItsCommon__Functions::module_object.pre_init_module();
LibItsBtp__Templates::module_object.pre_init_module();
module_object.add_function("f_utInitializeIut", (genericfunc_t)&f__utInitializeIut, (genericfunc_t)&start_f__utInitializeIut);
module_object.add_function("f_utTriggerEvent", (genericfunc_t)&f__utTriggerEvent, (genericfunc_t)&start_f__utTriggerEvent);
module_object.add_function("f_cfUp", (genericfunc_t)&f__cfUp, (genericfunc_t)&start_f__cfUp);
module_object.add_function("f_cfDown", (genericfunc_t)&f__cfDown, (genericfunc_t)&start_f__cfDown);
module_object.add_altstep("a_default", (genericfunc_t)&a__default_instance, (genericfunc_t )&activate_a__default, (genericfunc_t )&a__default);
module_object.add_altstep("a_utDefault", (genericfunc_t)&a__utDefault_instance, (genericfunc_t )&activate_a__utDefault, (genericfunc_t )&a__utDefault);
module_object.add_function("f_prDefault", (genericfunc_t)&f__prDefault, (genericfunc_t)&start_f__prDefault);
module_object.add_function("f_prInitialState", (genericfunc_t)&f__prInitialState, (genericfunc_t)&start_f__prInitialState);
module_object.add_function("f_poDefault", (genericfunc_t)&f__poDefault, (genericfunc_t)&start_f__poDefault);
module_object.add_function("f_getBtpSrcPort", (genericfunc_t)&f__getBtpSrcPort, NULL);
module_object.add_function("f_getBtpDstPort", (genericfunc_t)&f__getBtpDstPort, NULL);
module_object.add_function("f_getBtpUnknownDstPort", (genericfunc_t)&f__getBtpUnknownDstPort, NULL);
module_object.add_function("f_getBtpDstPortInfo", (genericfunc_t)&f__getBtpDstPortInfo, NULL);
module_object.add_function("f_getBtpPayload", (genericfunc_t)&f__getBtpPayload, NULL);
}

static void post_init_module()
{
TTCN_Location current_location("LibItsBtp_Functions.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsBtp_Functions");
LibItsCommon__Functions::module_object.post_init_module();
LibItsBtp__Templates::module_object.post_init_module();
}

static boolean start_ptc_function(const char *function_name, Text_Buf& function_arguments)
{
if (!strcmp(function_name, "f_utInitializeIut")) {
LibItsCommon__TypesAndValues::UtInitialize_template p__init;
p__init.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_utInitializeIut(");
p__init.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__utInitializeIut(p__init);
TTCN_Runtime::function_finished("f_utInitializeIut");
return TRUE;
} else if (!strcmp(function_name, "f_utTriggerEvent")) {
LibItsBtp__TypesAndValues::UtBtpTrigger_template p__event;
p__event.decode_text(function_arguments);
TTCN_Logger::begin_event(TTCN_Logger::PARALLEL_PTC);
TTCN_Logger::log_event_str("Starting function f_utTriggerEvent(");
p__event.log();
TTCN_Logger::log_event_str(").");
TTCN_Logger::end_event();
TTCN_Runtime::function_started(function_arguments);
f__utTriggerEvent(p__event);
TTCN_Runtime::function_finished("f_utTriggerEvent");
return TRUE;
} else if (!strcmp(function_name, "f_cfUp")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cfUp().");
TTCN_Runtime::function_started(function_arguments);
f__cfUp();
TTCN_Runtime::function_finished("f_cfUp");
return TRUE;
} else if (!strcmp(function_name, "f_cfDown")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_cfDown().");
TTCN_Runtime::function_started(function_arguments);
f__cfDown();
TTCN_Runtime::function_finished("f_cfDown");
return TRUE;
} else if (!strcmp(function_name, "f_prDefault")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_prDefault().");
TTCN_Runtime::function_started(function_arguments);
f__prDefault();
TTCN_Runtime::function_finished("f_prDefault");
return TRUE;
} else if (!strcmp(function_name, "f_prInitialState")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_prInitialState().");
TTCN_Runtime::function_started(function_arguments);
f__prInitialState();
TTCN_Runtime::function_finished("f_prInitialState");
return TRUE;
} else if (!strcmp(function_name, "f_poDefault")) {
TTCN_Logger::log_str(TTCN_Logger::PARALLEL_PTC, "Starting function f_poDefault().");
TTCN_Runtime::function_started(function_arguments);
f__poDefault();
TTCN_Runtime::function_finished("f_poDefault");
return TRUE;
} else return FALSE;
}


} /* end of namespace */
