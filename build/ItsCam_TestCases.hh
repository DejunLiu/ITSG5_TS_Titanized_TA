// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef ItsCam__TestCases_HH
#define ItsCam__TestCases_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include "ItsCam_TpFunctions.hh"

#if TTCN3_VERSION != 50400
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace ItsCam__TestCases {

/* Function prototypes */

extern verdicttype testcase_TC__CAM__MSD__FMT__BV__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__FMT__BV__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__FMT__BV__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__FMT__BV__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__FMT__BV__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__07(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__08(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__09(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__10(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__11(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__12(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__13(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__14(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__15(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__16(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__17(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__18(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__19(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__20(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__21(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__22(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__23(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__24(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__25(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__26(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__27(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__28(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__29(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__30(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__31(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__32(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__33(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__34(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__01__35(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__07(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__INA__BV__08(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__TI__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__TI__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__TI__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__BV__04(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__BV__05(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__BV__06(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__TI__07(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__GFQ__TI__08(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__PAR__BV__01(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__PAR__BV__02(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSD__PAR__BV__03(boolean has_timer, double timer_value);
extern verdicttype testcase_TC__CAM__MSP__BV__01(boolean has_timer, double timer_value);

/* Global variable declarations */

extern TTCN_Module module_object;

} /* end of namespace */

#endif
