// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "LibItsMapSpat_Pixits.hh"

namespace LibItsMapSpat__Pixits {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean set_module_param(Module_Param& param);
static Module_Param* get_module_param(Module_Param_Name& param_name);
static void log_module_param();

/* Literal string constants */

static const unsigned char bs_0_bits[] = { 1, 0 };
static const BITSTRING bs_0(16, bs_0_bits);
static const unsigned char module_checksum[] = { 0x4f, 0x3a, 0x8f, 0x71, 0x32, 0xe1, 0x9c, 0x39, 0xd6, 0xba, 0x17, 0x5f, 0x5a, 0xee, 0xf5, 0xc1 };

/* Global variable definitions */

static INTEGER modulepar_PX__MSG__ISSUE__REVISION;
const INTEGER& PX__MSG__ISSUE__REVISION = modulepar_PX__MSG__ISSUE__REVISION;
static INTEGER modulepar_PX__INTERSECTIONSTATE__REVISION;
const INTEGER& PX__INTERSECTIONSTATE__REVISION = modulepar_PX__INTERSECTIONSTATE__REVISION;
static BITSTRING modulepar_PX__STATUS;
const BITSTRING& PX__STATUS = modulepar_PX__STATUS;
static INTEGER modulepar_PX__INTERSECTION__ID;
const INTEGER& PX__INTERSECTION__ID = modulepar_PX__INTERSECTION__ID;
static INTEGER modulepar_PX__SIGNAL__GROUP__ID;
const INTEGER& PX__SIGNAL__GROUP__ID = modulepar_PX__SIGNAL__GROUP__ID;
static const size_t num_namespaces = 0;
TTCN_Module module_object("LibItsMapSpat_Pixits", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, set_module_param, get_module_param, log_module_param, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("LibItsMapSpat_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsMapSpat_Pixits");
LibItsMapSpat__TypesAndValues::module_object.pre_init_module();
current_location.update_lineno(29);
/* LibItsMapSpat_Pixits.ttcn, line 29 */
modulepar_PX__MSG__ISSUE__REVISION = 10;
current_location.update_lineno(34);
/* LibItsMapSpat_Pixits.ttcn, line 34 */
modulepar_PX__INTERSECTIONSTATE__REVISION = 20;
current_location.update_lineno(39);
/* LibItsMapSpat_Pixits.ttcn, line 39 */
modulepar_PX__STATUS = bs_0;
current_location.update_lineno(44);
/* LibItsMapSpat_Pixits.ttcn, line 44 */
modulepar_PX__INTERSECTION__ID = 1500;
current_location.update_lineno(49);
/* LibItsMapSpat_Pixits.ttcn, line 49 */
modulepar_PX__SIGNAL__GROUP__ID = 128;
}

static void post_init_module()
{
TTCN_Location current_location("LibItsMapSpat_Pixits.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsMapSpat_Pixits");
LibItsMapSpat__TypesAndValues::module_object.post_init_module();
}

static boolean set_module_param(Module_Param& param)
{
const char* const par_name = param.get_id()->get_current_name();
if (!strcmp(par_name, "PX_MSG_ISSUE_REVISION")) {
modulepar_PX__MSG__ISSUE__REVISION.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_INTERSECTIONSTATE_REVISION")) {
modulepar_PX__INTERSECTIONSTATE__REVISION.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_STATUS")) {
modulepar_PX__STATUS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_INTERSECTION_ID")) {
modulepar_PX__INTERSECTION__ID.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PX_SIGNAL_GROUP_ID")) {
modulepar_PX__SIGNAL__GROUP__ID.set_param(param);
return TRUE;
} else return FALSE;
}

static Module_Param* get_module_param(Module_Param_Name& param_name)
{
const char* const par_name = param_name.get_current_name();
if (!strcmp(par_name, "PX_MSG_ISSUE_REVISION")) {
return modulepar_PX__MSG__ISSUE__REVISION.get_param(param_name);
} else if (!strcmp(par_name, "PX_INTERSECTIONSTATE_REVISION")) {
return modulepar_PX__INTERSECTIONSTATE__REVISION.get_param(param_name);
} else if (!strcmp(par_name, "PX_STATUS")) {
return modulepar_PX__STATUS.get_param(param_name);
} else if (!strcmp(par_name, "PX_INTERSECTION_ID")) {
return modulepar_PX__INTERSECTION__ID.get_param(param_name);
} else if (!strcmp(par_name, "PX_SIGNAL_GROUP_ID")) {
return modulepar_PX__SIGNAL__GROUP__ID.get_param(param_name);
} else return NULL;
}

static void log_module_param()
{
TTCN_Logger::log_event_str("PX_MSG_ISSUE_REVISION := ");
PX__MSG__ISSUE__REVISION.log();
TTCN_Logger::log_event_str(", PX_INTERSECTIONSTATE_REVISION := ");
PX__INTERSECTIONSTATE__REVISION.log();
TTCN_Logger::log_event_str(", PX_STATUS := ");
PX__STATUS.log();
TTCN_Logger::log_event_str(", PX_INTERSECTION_ID := ");
PX__INTERSECTION__ID.log();
TTCN_Logger::log_event_str(", PX_SIGNAL_GROUP_ID := ");
PX__SIGNAL__GROUP__ID.log();
}


} /* end of namespace */
