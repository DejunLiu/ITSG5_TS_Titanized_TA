// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "ItsCam_TestCases.hh"

namespace ItsCam__TestCases {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();

/* Literal string constants */

static const unsigned char module_checksum[] = { 0x29, 0x28, 0x8e, 0xeb, 0xe9, 0xd8, 0x46, 0x3b, 0xba, 0x75, 0xec, 0x0d, 0x67, 0xb6, 0xf2, 0x5b };

/* Global variable definitions */

static const size_t num_namespaces = 0;
TTCN_Module module_object("ItsCam_TestCases", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of functions, altsteps and testcases */

verdicttype testcase_TC__CAM__MSD__FMT__BV__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 53, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_FMT_BV_01");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_FMT_BV_01", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(55);
/* ItsCam_TestCases.ttcn, line 55 */
ItsCam__TpFunctions::f__CAM__MSD__FMT__BV__01();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_FMT_BV_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__FMT__BV__02(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 86, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_FMT_BV_02");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_FMT_BV_02", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(88);
/* ItsCam_TestCases.ttcn, line 88 */
ItsCam__TpFunctions::f__CAM__MSD__FMT__BV__02();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_FMT_BV_02 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__FMT__BV__03(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 127, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_FMT_BV_03");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_FMT_BV_03", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(129);
/* ItsCam_TestCases.ttcn, line 129 */
ItsCam__TpFunctions::f__CAM__MSD__FMT__BV__03();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_FMT_BV_03 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__FMT__BV__04(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 161, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_FMT_BV_04");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_FMT_BV_04", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(163);
/* ItsCam_TestCases.ttcn, line 163 */
ItsCam__TpFunctions::f__CAM__MSD__FMT__BV__04();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_FMT_BV_04 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__FMT__BV__05(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 203, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_FMT_BV_05");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_FMT_BV_05", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(205);
/* ItsCam_TestCases.ttcn, line 205 */
ItsCam__TpFunctions::f__CAM__MSD__FMT__BV__05();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_FMT_BV_05 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 247, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_01");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_01", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(249);
/* ItsCam_TestCases.ttcn, line 249 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__01();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__02(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 286, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_02");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_02", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(288);
/* ItsCam_TestCases.ttcn, line 288 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__02();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_02 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__03(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 325, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_03");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_03", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(327);
/* ItsCam_TestCases.ttcn, line 327 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__03();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_03 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__04(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 364, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_04");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_04", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(366);
/* ItsCam_TestCases.ttcn, line 366 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__04();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_04 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__05(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 403, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_05");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_05", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(405);
/* ItsCam_TestCases.ttcn, line 405 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__05();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_05 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__06(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 442, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_06");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_06", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(444);
/* ItsCam_TestCases.ttcn, line 444 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__06();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_06 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__07(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 481, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_07");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_07", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(483);
/* ItsCam_TestCases.ttcn, line 483 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__07();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_07 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__08(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 520, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_08");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_08", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(522);
/* ItsCam_TestCases.ttcn, line 522 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__08();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_08 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__09(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 559, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_09");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_09", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(561);
/* ItsCam_TestCases.ttcn, line 561 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__09();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_09 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__10(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 598, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_10");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_10", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(600);
/* ItsCam_TestCases.ttcn, line 600 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__10();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_10 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__11(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 637, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_11");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_11", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(639);
/* ItsCam_TestCases.ttcn, line 639 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__11();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_11 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__12(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 676, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_12");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_12", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(678);
/* ItsCam_TestCases.ttcn, line 678 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__12();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_12 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__13(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 715, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_13");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_13", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(717);
/* ItsCam_TestCases.ttcn, line 717 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__13();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_13 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__14(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 754, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_14");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_14", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(756);
/* ItsCam_TestCases.ttcn, line 756 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__14();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_14 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__15(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 793, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_15");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_15", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(795);
/* ItsCam_TestCases.ttcn, line 795 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__15();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_15 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__16(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 832, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_16");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_16", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(834);
/* ItsCam_TestCases.ttcn, line 834 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__16();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_16 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__17(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 871, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_17");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_17", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(873);
/* ItsCam_TestCases.ttcn, line 873 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__17();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_17 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__18(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 910, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_18");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_18", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(912);
/* ItsCam_TestCases.ttcn, line 912 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__18();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_18 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__19(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 949, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_19");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_19", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(951);
/* ItsCam_TestCases.ttcn, line 951 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__19();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_19 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__20(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 988, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_20");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_20", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(990);
/* ItsCam_TestCases.ttcn, line 990 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__20();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_20 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__21(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1027, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_21");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_21", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1029);
/* ItsCam_TestCases.ttcn, line 1029 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__21();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_21 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__22(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1066, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_22");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_22", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1068);
/* ItsCam_TestCases.ttcn, line 1068 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__22();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_22 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__23(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1105, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_23");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_23", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1107);
/* ItsCam_TestCases.ttcn, line 1107 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__23();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_23 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__24(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1144, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_24");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_24", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1146);
/* ItsCam_TestCases.ttcn, line 1146 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__24();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_24 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__25(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1183, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_25");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_25", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1185);
/* ItsCam_TestCases.ttcn, line 1185 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__25();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_25 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__26(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1222, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_26");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_26", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1224);
/* ItsCam_TestCases.ttcn, line 1224 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__26();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_26 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__27(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1261, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_27");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_27", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1263);
/* ItsCam_TestCases.ttcn, line 1263 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__27();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_27 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__28(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1300, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_28");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_28", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1302);
/* ItsCam_TestCases.ttcn, line 1302 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__28();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_28 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__29(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1339, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_29");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_29", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1341);
/* ItsCam_TestCases.ttcn, line 1341 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__29();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_29 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__30(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1378, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_30");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_30", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1380);
/* ItsCam_TestCases.ttcn, line 1380 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__30();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_30 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__31(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1417, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_31");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_31", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1419);
/* ItsCam_TestCases.ttcn, line 1419 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__31();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_31 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__32(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1455, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_32");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_32", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1457);
/* ItsCam_TestCases.ttcn, line 1457 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__32();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_32 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__33(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1493, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_33");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_33", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1495);
/* ItsCam_TestCases.ttcn, line 1495 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__33();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_33 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__34(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1531, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_34");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_34", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1533);
/* ItsCam_TestCases.ttcn, line 1533 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__34();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_34 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__01__35(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1569, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_01_35");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_01_35", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1571);
/* ItsCam_TestCases.ttcn, line 1571 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__01__35();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_01_35 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__02(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1605, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_02");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_02", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1607);
/* ItsCam_TestCases.ttcn, line 1607 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__02();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_02 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__03(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1639, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_03");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_03", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1641);
/* ItsCam_TestCases.ttcn, line 1641 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__03();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_03 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__04(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1673, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_04");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_04", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1675);
/* ItsCam_TestCases.ttcn, line 1675 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__04();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_04 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__05(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1707, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_05");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_05", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1709);
/* ItsCam_TestCases.ttcn, line 1709 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__05();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_05 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__06(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1741, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_06");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_06", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1743);
/* ItsCam_TestCases.ttcn, line 1743 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__06();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_06 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__07(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1775, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_07");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_07", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1777);
/* ItsCam_TestCases.ttcn, line 1777 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__07();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_07 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__INA__BV__08(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1809, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_INA_BV_08");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_INA_BV_08", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1811);
/* ItsCam_TestCases.ttcn, line 1811 */
ItsCam__TpFunctions::f__CAM__MSD__INA__BV__08();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_INA_BV_08 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__TI__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1842, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_TI_01");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_TI_01", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1844);
/* ItsCam_TestCases.ttcn, line 1844 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__TI__01();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_TI_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__TI__02(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1871, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_TI_02");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_TI_02", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1873);
/* ItsCam_TestCases.ttcn, line 1873 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__TI__02();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_TI_02 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__TI__03(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1903, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_TI_03");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_TI_03", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1905);
/* ItsCam_TestCases.ttcn, line 1905 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__TI__03();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_TI_03 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__BV__04(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1943, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_BV_04");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_BV_04", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1945);
/* ItsCam_TestCases.ttcn, line 1945 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__BV__04();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_BV_04 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__BV__05(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 1981, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_BV_05");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_BV_05", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(1983);
/* ItsCam_TestCases.ttcn, line 1983 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__BV__05();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_BV_05 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__BV__06(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2021, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_BV_06");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_BV_06", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2023);
/* ItsCam_TestCases.ttcn, line 2023 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__BV__06();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_BV_06 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__TI__07(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2053, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_TI_07");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_TI_07", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2055);
/* ItsCam_TestCases.ttcn, line 2055 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__TI__07();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_TI_07 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__GFQ__TI__08(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2082, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_GFQ_TI_08");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_GFQ_TI_08", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2084);
/* ItsCam_TestCases.ttcn, line 2084 */
ItsCam__TpFunctions::f__CAM__MSD__GFQ__TI__08();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_GFQ_TI_08 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__PAR__BV__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2115, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_PAR_BV_01");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_PAR_BV_01", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2117);
/* ItsCam_TestCases.ttcn, line 2117 */
ItsCam__TpFunctions::f__CAM__MSD__PAR__BV__01();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_PAR_BV_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__PAR__BV__02(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2144, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_PAR_BV_02");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_PAR_BV_02", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2146);
/* ItsCam_TestCases.ttcn, line 2146 */
ItsCam__TpFunctions::f__CAM__MSD__PAR__BV__02();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_PAR_BV_02 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSD__PAR__BV__03(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2176, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSD_PAR_BV_03");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSD_PAR_BV_03", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2178);
/* ItsCam_TestCases.ttcn, line 2178 */
ItsCam__TpFunctions::f__CAM__MSD__PAR__BV__03();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSD_PAR_BV_03 was stopped.");
}
return TTCN_Runtime::end_testcase();
}

verdicttype testcase_TC__CAM__MSP__BV__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("ItsCam_TestCases.ttcn", 2212, TTCN_Location::LOCATION_TESTCASE, "TC_CAM_MSP_BV_01");
try {
TTCN_Runtime::begin_testcase("ItsCam_TestCases", "TC_CAM_MSP_BV_01", "LibItsCam_TestSystem", "ItsCam", "LibItsCam_TestSystem", "ItsCamSystem", has_timer, timer_value);
current_location.update_lineno(2214);
/* ItsCam_TestCases.ttcn, line 2214 */
ItsCam__TpFunctions::f__CAM__MSP__BV__01();
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_CAM_MSP_BV_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("ItsCam_TestCases.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "ItsCam_TestCases");
ItsCam__TpFunctions::module_object.pre_init_module();
module_object.add_testcase_nonpard("TC_CAM_MSD_FMT_BV_01", testcase_TC__CAM__MSD__FMT__BV__01);
module_object.add_testcase_nonpard("TC_CAM_MSD_FMT_BV_02", testcase_TC__CAM__MSD__FMT__BV__02);
module_object.add_testcase_nonpard("TC_CAM_MSD_FMT_BV_03", testcase_TC__CAM__MSD__FMT__BV__03);
module_object.add_testcase_nonpard("TC_CAM_MSD_FMT_BV_04", testcase_TC__CAM__MSD__FMT__BV__04);
module_object.add_testcase_nonpard("TC_CAM_MSD_FMT_BV_05", testcase_TC__CAM__MSD__FMT__BV__05);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_01", testcase_TC__CAM__MSD__INA__BV__01__01);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_02", testcase_TC__CAM__MSD__INA__BV__01__02);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_03", testcase_TC__CAM__MSD__INA__BV__01__03);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_04", testcase_TC__CAM__MSD__INA__BV__01__04);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_05", testcase_TC__CAM__MSD__INA__BV__01__05);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_06", testcase_TC__CAM__MSD__INA__BV__01__06);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_07", testcase_TC__CAM__MSD__INA__BV__01__07);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_08", testcase_TC__CAM__MSD__INA__BV__01__08);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_09", testcase_TC__CAM__MSD__INA__BV__01__09);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_10", testcase_TC__CAM__MSD__INA__BV__01__10);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_11", testcase_TC__CAM__MSD__INA__BV__01__11);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_12", testcase_TC__CAM__MSD__INA__BV__01__12);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_13", testcase_TC__CAM__MSD__INA__BV__01__13);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_14", testcase_TC__CAM__MSD__INA__BV__01__14);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_15", testcase_TC__CAM__MSD__INA__BV__01__15);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_16", testcase_TC__CAM__MSD__INA__BV__01__16);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_17", testcase_TC__CAM__MSD__INA__BV__01__17);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_18", testcase_TC__CAM__MSD__INA__BV__01__18);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_19", testcase_TC__CAM__MSD__INA__BV__01__19);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_20", testcase_TC__CAM__MSD__INA__BV__01__20);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_21", testcase_TC__CAM__MSD__INA__BV__01__21);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_22", testcase_TC__CAM__MSD__INA__BV__01__22);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_23", testcase_TC__CAM__MSD__INA__BV__01__23);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_24", testcase_TC__CAM__MSD__INA__BV__01__24);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_25", testcase_TC__CAM__MSD__INA__BV__01__25);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_26", testcase_TC__CAM__MSD__INA__BV__01__26);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_27", testcase_TC__CAM__MSD__INA__BV__01__27);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_28", testcase_TC__CAM__MSD__INA__BV__01__28);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_29", testcase_TC__CAM__MSD__INA__BV__01__29);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_30", testcase_TC__CAM__MSD__INA__BV__01__30);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_31", testcase_TC__CAM__MSD__INA__BV__01__31);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_32", testcase_TC__CAM__MSD__INA__BV__01__32);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_33", testcase_TC__CAM__MSD__INA__BV__01__33);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_34", testcase_TC__CAM__MSD__INA__BV__01__34);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_01_35", testcase_TC__CAM__MSD__INA__BV__01__35);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_02", testcase_TC__CAM__MSD__INA__BV__02);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_03", testcase_TC__CAM__MSD__INA__BV__03);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_04", testcase_TC__CAM__MSD__INA__BV__04);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_05", testcase_TC__CAM__MSD__INA__BV__05);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_06", testcase_TC__CAM__MSD__INA__BV__06);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_07", testcase_TC__CAM__MSD__INA__BV__07);
module_object.add_testcase_nonpard("TC_CAM_MSD_INA_BV_08", testcase_TC__CAM__MSD__INA__BV__08);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_TI_01", testcase_TC__CAM__MSD__GFQ__TI__01);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_TI_02", testcase_TC__CAM__MSD__GFQ__TI__02);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_TI_03", testcase_TC__CAM__MSD__GFQ__TI__03);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_BV_04", testcase_TC__CAM__MSD__GFQ__BV__04);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_BV_05", testcase_TC__CAM__MSD__GFQ__BV__05);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_BV_06", testcase_TC__CAM__MSD__GFQ__BV__06);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_TI_07", testcase_TC__CAM__MSD__GFQ__TI__07);
module_object.add_testcase_nonpard("TC_CAM_MSD_GFQ_TI_08", testcase_TC__CAM__MSD__GFQ__TI__08);
module_object.add_testcase_nonpard("TC_CAM_MSD_PAR_BV_01", testcase_TC__CAM__MSD__PAR__BV__01);
module_object.add_testcase_nonpard("TC_CAM_MSD_PAR_BV_02", testcase_TC__CAM__MSD__PAR__BV__02);
module_object.add_testcase_nonpard("TC_CAM_MSD_PAR_BV_03", testcase_TC__CAM__MSD__PAR__BV__03);
module_object.add_testcase_nonpard("TC_CAM_MSP_BV_01", testcase_TC__CAM__MSP__BV__01);
}

static void post_init_module()
{
TTCN_Location current_location("ItsCam_TestCases.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "ItsCam_TestCases");
ItsCam__TpFunctions::module_object.post_init_module();
}


} /* end of namespace */
