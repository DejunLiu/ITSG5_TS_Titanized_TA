// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "LibItsGeoNetworking_Pics.hh"

namespace LibItsGeoNetworking__Pics {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();
static boolean set_module_param(Module_Param& param);
static Module_Param* get_module_param(Module_Param_Name& param_name);
static void log_module_param();

/* Literal string constants */

static const unsigned char os_0_octets[] = { 255, 255, 255, 255, 255, 255 };
static const OCTETSTRING os_0(6, os_0_octets);
static const unsigned char module_checksum[] = { 0xac, 0xd4, 0x42, 0x46, 0x42, 0xb1, 0x44, 0x8f, 0xcd, 0xe3, 0xdd, 0x29, 0x0d, 0x82, 0xaf, 0xa6 };

/* Global variable definitions */

static LibItsGeoNetworking__TypesAndValues::GN__Address modulepar_PICS__GN__LOCAL__GN__ADDR;
const LibItsGeoNetworking__TypesAndValues::GN__Address& PICS__GN__LOCAL__GN__ADDR = modulepar_PICS__GN__LOCAL__GN__ADDR;
static LibItsGeoNetworking__TypesAndValues::GnAddressConfigurationMethod modulepar_PICS__GN__LOCAL__ADDR__CONF__METHOD;
const LibItsGeoNetworking__TypesAndValues::GnAddressConfigurationMethod& PICS__GN__LOCAL__ADDR__CONF__METHOD = modulepar_PICS__GN__LOCAL__ADDR__CONF__METHOD;
static BOOLEAN modulepar_PICS__GN__IS__MOBILE;
const BOOLEAN& PICS__GN__IS__MOBILE = modulepar_PICS__GN__IS__MOBILE;
static INTEGER modulepar_PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV;
const INTEGER& PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV = modulepar_PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV;
static INTEGER modulepar_PICS__GN__MAX__SDU__SIZE;
const INTEGER& PICS__GN__MAX__SDU__SIZE = modulepar_PICS__GN__MAX__SDU__SIZE;
static INTEGER modulepar_PICS__GN__MAX__GN__HEADER__SIZE;
const INTEGER& PICS__GN__MAX__GN__HEADER__SIZE = modulepar_PICS__GN__MAX__GN__HEADER__SIZE;
static INTEGER modulepar_PICS__GN__LIFETIME__LOC__TE;
const INTEGER& PICS__GN__LIFETIME__LOC__TE = modulepar_PICS__GN__LIFETIME__LOC__TE;
static BOOLEAN modulepar_PICS__GN__SECURITY;
const BOOLEAN& PICS__GN__SECURITY = modulepar_PICS__GN__SECURITY;
static INTEGER modulepar_PICS__GN__LOCATION__SERVICE__MAX__RETRANS;
const INTEGER& PICS__GN__LOCATION__SERVICE__MAX__RETRANS = modulepar_PICS__GN__LOCATION__SERVICE__MAX__RETRANS;
static INTEGER modulepar_PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER;
const INTEGER& PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER = modulepar_PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER;
static INTEGER modulepar_PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE;
const INTEGER& PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE = modulepar_PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE;
static INTEGER modulepar_PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER;
const INTEGER& PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER = modulepar_PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER;
static INTEGER modulepar_PICS__GN__BEACON__SERVICE__MAX__JITTER;
const INTEGER& PICS__GN__BEACON__SERVICE__MAX__JITTER = modulepar_PICS__GN__BEACON__SERVICE__MAX__JITTER;
static INTEGER modulepar_PICS__GN__DEFAULT__HOP__LIMIT;
const INTEGER& PICS__GN__DEFAULT__HOP__LIMIT = modulepar_PICS__GN__DEFAULT__HOP__LIMIT;
static INTEGER modulepar_PICS__GN__MAX__PACKET__LIFETIME;
const INTEGER& PICS__GN__MAX__PACKET__LIFETIME = modulepar_PICS__GN__MAX__PACKET__LIFETIME;
static FLOAT modulepar_PICS__GN__MAX__GEO__AREA__SIZE;
const FLOAT& PICS__GN__MAX__GEO__AREA__SIZE = modulepar_PICS__GN__MAX__GEO__AREA__SIZE;
static INTEGER modulepar_PICS__GN__MIN__PACKET__REPETITION__INTERVAL;
const INTEGER& PICS__GN__MIN__PACKET__REPETITION__INTERVAL = modulepar_PICS__GN__MIN__PACKET__REPETITION__INTERVAL;
static LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm modulepar_PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM;
const LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm& PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM = modulepar_PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM;
static LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm modulepar_PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM;
const LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm& PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM = modulepar_PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM;
static INTEGER modulepar_PICS__GN__GEOUNICAST__CBF__MIN__TIME;
const INTEGER& PICS__GN__GEOUNICAST__CBF__MIN__TIME = modulepar_PICS__GN__GEOUNICAST__CBF__MIN__TIME;
static INTEGER modulepar_PICS__GN__GEOUNICAST__CBF__MAX__TIME;
const INTEGER& PICS__GN__GEOUNICAST__CBF__MAX__TIME = modulepar_PICS__GN__GEOUNICAST__CBF__MAX__TIME;
static INTEGER modulepar_PICS__GN__GEOBROADCAST__CBF__MIN__TIME;
const INTEGER& PICS__GN__GEOBROADCAST__CBF__MIN__TIME = modulepar_PICS__GN__GEOBROADCAST__CBF__MIN__TIME;
static INTEGER modulepar_PICS__GN__GEOBROADCAST__CBF__MAX__TIME;
const INTEGER& PICS__GN__GEOBROADCAST__CBF__MAX__TIME = modulepar_PICS__GN__GEOBROADCAST__CBF__MAX__TIME;
static INTEGER modulepar_PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE;
const INTEGER& PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE = modulepar_PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE;
static INTEGER modulepar_PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE;
const INTEGER& PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE = modulepar_PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE;
static INTEGER modulepar_PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE;
const INTEGER& PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE = modulepar_PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE;
static BOOLEAN modulepar_PICS__GN__BASIC__HEADER;
const BOOLEAN& PICS__GN__BASIC__HEADER = modulepar_PICS__GN__BASIC__HEADER;
static BOOLEAN modulepar_PICS__GN__COMMON__HEADER;
const BOOLEAN& PICS__GN__COMMON__HEADER = modulepar_PICS__GN__COMMON__HEADER;
static BOOLEAN modulepar_PICS__GN__BEACON__SRC;
const BOOLEAN& PICS__GN__BEACON__SRC = modulepar_PICS__GN__BEACON__SRC;
static BOOLEAN modulepar_PICS__GN__BEACON__DST;
const BOOLEAN& PICS__GN__BEACON__DST = modulepar_PICS__GN__BEACON__DST;
static BOOLEAN modulepar_PICS__GN__GUC__SRC;
const BOOLEAN& PICS__GN__GUC__SRC = modulepar_PICS__GN__GUC__SRC;
static BOOLEAN modulepar_PICS__GN__GUC__DST;
const BOOLEAN& PICS__GN__GUC__DST = modulepar_PICS__GN__GUC__DST;
static BOOLEAN modulepar_PICS__GN__GUC__FWD;
const BOOLEAN& PICS__GN__GUC__FWD = modulepar_PICS__GN__GUC__FWD;
static BOOLEAN modulepar_PICS__GN__GBC__SRC;
const BOOLEAN& PICS__GN__GBC__SRC = modulepar_PICS__GN__GBC__SRC;
static BOOLEAN modulepar_PICS__GN__GBC__DST;
const BOOLEAN& PICS__GN__GBC__DST = modulepar_PICS__GN__GBC__DST;
static BOOLEAN modulepar_PICS__GN__GBC__FWD;
const BOOLEAN& PICS__GN__GBC__FWD = modulepar_PICS__GN__GBC__FWD;
static BOOLEAN modulepar_PICS__GN__GAC__SRC;
const BOOLEAN& PICS__GN__GAC__SRC = modulepar_PICS__GN__GAC__SRC;
static BOOLEAN modulepar_PICS__GN__GAC__DST;
const BOOLEAN& PICS__GN__GAC__DST = modulepar_PICS__GN__GAC__DST;
static BOOLEAN modulepar_PICS__GN__GAC__FWD;
const BOOLEAN& PICS__GN__GAC__FWD = modulepar_PICS__GN__GAC__FWD;
static BOOLEAN modulepar_PICS__GN__SHB__SRC;
const BOOLEAN& PICS__GN__SHB__SRC = modulepar_PICS__GN__SHB__SRC;
static BOOLEAN modulepar_PICS__GN__SHB__DST;
const BOOLEAN& PICS__GN__SHB__DST = modulepar_PICS__GN__SHB__DST;
static BOOLEAN modulepar_PICS__GN__TSB__SRC;
const BOOLEAN& PICS__GN__TSB__SRC = modulepar_PICS__GN__TSB__SRC;
static BOOLEAN modulepar_PICS__GN__TSB__DST;
const BOOLEAN& PICS__GN__TSB__DST = modulepar_PICS__GN__TSB__DST;
static BOOLEAN modulepar_PICS__GN__TSB__FWD;
const BOOLEAN& PICS__GN__TSB__FWD = modulepar_PICS__GN__TSB__FWD;
static BOOLEAN modulepar_PICS__GN__LS__REQ__SRC;
const BOOLEAN& PICS__GN__LS__REQ__SRC = modulepar_PICS__GN__LS__REQ__SRC;
static BOOLEAN modulepar_PICS__GN__LS__REQ__RETRANSMISSION;
const BOOLEAN& PICS__GN__LS__REQ__RETRANSMISSION = modulepar_PICS__GN__LS__REQ__RETRANSMISSION;
static BOOLEAN modulepar_PICS__GN__LS__REQ__DST;
const BOOLEAN& PICS__GN__LS__REQ__DST = modulepar_PICS__GN__LS__REQ__DST;
static BOOLEAN modulepar_PICS__GN__LS__REP__DST;
const BOOLEAN& PICS__GN__LS__REP__DST = modulepar_PICS__GN__LS__REP__DST;
static BOOLEAN modulepar_PICS__GN__LS__FWD;
const BOOLEAN& PICS__GN__LS__FWD = modulepar_PICS__GN__LS__FWD;
static BOOLEAN modulepar_PICS__GN__ADDR__AUTO;
const BOOLEAN& PICS__GN__ADDR__AUTO = modulepar_PICS__GN__ADDR__AUTO;
static BOOLEAN modulepar_PICS__GN__ADDR__MANAGED;
const BOOLEAN& PICS__GN__ADDR__MANAGED = modulepar_PICS__GN__ADDR__MANAGED;
static BOOLEAN modulepar_PICS__GN__ADDR__ANONYMOUS;
const BOOLEAN& PICS__GN__ADDR__ANONYMOUS = modulepar_PICS__GN__ADDR__ANONYMOUS;
static BOOLEAN modulepar_PICS__GN__DAD;
const BOOLEAN& PICS__GN__DAD = modulepar_PICS__GN__DAD;
static INTEGER modulepar_PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER;
const INTEGER& PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER = modulepar_PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER;
static OCTETSTRING modulepar_PICS__IUT__MAC__ADDRESS;
const OCTETSTRING& PICS__IUT__MAC__ADDRESS = modulepar_PICS__IUT__MAC__ADDRESS;
static const size_t num_namespaces = 0;
TTCN_Module module_object("LibItsGeoNetworking_Pics", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, set_module_param, get_module_param, log_module_param, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_5,
  current_runtime_version.requires_minor_version_4,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_1);

/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("LibItsGeoNetworking_Pics.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsGeoNetworking_Pics");
LibItsGeoNetworking__TypesAndValues::module_object.pre_init_module();
current_location.update_lineno(27);
/* LibItsGeoNetworking_Pics.ttcn, line 27 */
modulepar_PICS__GN__LOCAL__GN__ADDR.typeOfAddress() = LibItsGeoNetworking__TypesAndValues::TypeOfAddress::e__manual;
modulepar_PICS__GN__LOCAL__GN__ADDR.stationType() = LibItsGeoNetworking__TypesAndValues::StationType::e__passengerCar;
modulepar_PICS__GN__LOCAL__GN__ADDR.stationCountryCode() = LibCommon__BasicTypesAndValues::c__uInt10Zero;
modulepar_PICS__GN__LOCAL__GN__ADDR.mid() = LibCommon__DataStrings::c__6ZeroBytes;
current_location.update_lineno(38);
/* LibItsGeoNetworking_Pics.ttcn, line 38 */
modulepar_PICS__GN__LOCAL__ADDR__CONF__METHOD = LibItsGeoNetworking__TypesAndValues::GnAddressConfigurationMethod::e__auto;
current_location.update_lineno(44);
/* LibItsGeoNetworking_Pics.ttcn, line 44 */
modulepar_PICS__GN__IS__MOBILE = TRUE;
current_location.update_lineno(50);
/* LibItsGeoNetworking_Pics.ttcn, line 50 */
modulepar_PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV = 1000;
current_location.update_lineno(56);
/* LibItsGeoNetworking_Pics.ttcn, line 56 */
modulepar_PICS__GN__MAX__SDU__SIZE = 1398;
current_location.update_lineno(62);
/* LibItsGeoNetworking_Pics.ttcn, line 62 */
modulepar_PICS__GN__MAX__GN__HEADER__SIZE = 88;
current_location.update_lineno(68);
/* LibItsGeoNetworking_Pics.ttcn, line 68 */
modulepar_PICS__GN__LIFETIME__LOC__TE = 20;
current_location.update_lineno(74);
/* LibItsGeoNetworking_Pics.ttcn, line 74 */
modulepar_PICS__GN__SECURITY = FALSE;
current_location.update_lineno(80);
/* LibItsGeoNetworking_Pics.ttcn, line 80 */
modulepar_PICS__GN__LOCATION__SERVICE__MAX__RETRANS = 10;
current_location.update_lineno(86);
/* LibItsGeoNetworking_Pics.ttcn, line 86 */
modulepar_PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER = 1000;
current_location.update_lineno(92);
/* LibItsGeoNetworking_Pics.ttcn, line 92 */
modulepar_PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE = 1024;
current_location.update_lineno(98);
/* LibItsGeoNetworking_Pics.ttcn, line 98 */
modulepar_PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER = 3000;
current_location.update_lineno(104);
/* LibItsGeoNetworking_Pics.ttcn, line 104 */
modulepar_PICS__GN__BEACON__SERVICE__MAX__JITTER = 750;
current_location.update_lineno(110);
/* LibItsGeoNetworking_Pics.ttcn, line 110 */
modulepar_PICS__GN__DEFAULT__HOP__LIMIT = 10;
current_location.update_lineno(116);
/* LibItsGeoNetworking_Pics.ttcn, line 116 */
modulepar_PICS__GN__MAX__PACKET__LIFETIME = 600;
current_location.update_lineno(122);
/* LibItsGeoNetworking_Pics.ttcn, line 122 */
modulepar_PICS__GN__MAX__GEO__AREA__SIZE = 1.0e1;
current_location.update_lineno(128);
/* LibItsGeoNetworking_Pics.ttcn, line 128 */
modulepar_PICS__GN__MIN__PACKET__REPETITION__INTERVAL = 100;
current_location.update_lineno(134);
/* LibItsGeoNetworking_Pics.ttcn, line 134 */
modulepar_PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM = LibItsGeoNetworking__TypesAndValues::GeoUnicastForwardingAlgorithm::e__greedy;
current_location.update_lineno(140);
/* LibItsGeoNetworking_Pics.ttcn, line 140 */
modulepar_PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM = LibItsGeoNetworking__TypesAndValues::GeoBroadcastForwardingAlgorithm::e__advanced;
current_location.update_lineno(146);
/* LibItsGeoNetworking_Pics.ttcn, line 146 */
modulepar_PICS__GN__GEOUNICAST__CBF__MIN__TIME = 1;
current_location.update_lineno(152);
/* LibItsGeoNetworking_Pics.ttcn, line 152 */
modulepar_PICS__GN__GEOUNICAST__CBF__MAX__TIME = 100;
current_location.update_lineno(158);
/* LibItsGeoNetworking_Pics.ttcn, line 158 */
modulepar_PICS__GN__GEOBROADCAST__CBF__MIN__TIME = 1;
current_location.update_lineno(164);
/* LibItsGeoNetworking_Pics.ttcn, line 164 */
modulepar_PICS__GN__GEOBROADCAST__CBF__MAX__TIME = 100;
current_location.update_lineno(170);
/* LibItsGeoNetworking_Pics.ttcn, line 170 */
modulepar_PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE = 1000;
current_location.update_lineno(176);
/* LibItsGeoNetworking_Pics.ttcn, line 176 */
modulepar_PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE = 256;
current_location.update_lineno(182);
/* LibItsGeoNetworking_Pics.ttcn, line 182 */
modulepar_PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE = 1024;
current_location.update_lineno(188);
/* LibItsGeoNetworking_Pics.ttcn, line 188 */
modulepar_PICS__GN__BASIC__HEADER = TRUE;
current_location.update_lineno(194);
/* LibItsGeoNetworking_Pics.ttcn, line 194 */
modulepar_PICS__GN__COMMON__HEADER = TRUE;
current_location.update_lineno(200);
/* LibItsGeoNetworking_Pics.ttcn, line 200 */
modulepar_PICS__GN__BEACON__SRC = TRUE;
current_location.update_lineno(206);
/* LibItsGeoNetworking_Pics.ttcn, line 206 */
modulepar_PICS__GN__BEACON__DST = TRUE;
current_location.update_lineno(212);
/* LibItsGeoNetworking_Pics.ttcn, line 212 */
modulepar_PICS__GN__GUC__SRC = TRUE;
current_location.update_lineno(218);
/* LibItsGeoNetworking_Pics.ttcn, line 218 */
modulepar_PICS__GN__GUC__DST = TRUE;
current_location.update_lineno(224);
/* LibItsGeoNetworking_Pics.ttcn, line 224 */
modulepar_PICS__GN__GUC__FWD = TRUE;
current_location.update_lineno(230);
/* LibItsGeoNetworking_Pics.ttcn, line 230 */
modulepar_PICS__GN__GBC__SRC = TRUE;
current_location.update_lineno(236);
/* LibItsGeoNetworking_Pics.ttcn, line 236 */
modulepar_PICS__GN__GBC__DST = TRUE;
current_location.update_lineno(242);
/* LibItsGeoNetworking_Pics.ttcn, line 242 */
modulepar_PICS__GN__GBC__FWD = TRUE;
current_location.update_lineno(248);
/* LibItsGeoNetworking_Pics.ttcn, line 248 */
modulepar_PICS__GN__GAC__SRC = TRUE;
current_location.update_lineno(254);
/* LibItsGeoNetworking_Pics.ttcn, line 254 */
modulepar_PICS__GN__GAC__DST = TRUE;
current_location.update_lineno(260);
/* LibItsGeoNetworking_Pics.ttcn, line 260 */
modulepar_PICS__GN__GAC__FWD = TRUE;
current_location.update_lineno(266);
/* LibItsGeoNetworking_Pics.ttcn, line 266 */
modulepar_PICS__GN__SHB__SRC = TRUE;
current_location.update_lineno(272);
/* LibItsGeoNetworking_Pics.ttcn, line 272 */
modulepar_PICS__GN__SHB__DST = TRUE;
current_location.update_lineno(278);
/* LibItsGeoNetworking_Pics.ttcn, line 278 */
modulepar_PICS__GN__TSB__SRC = TRUE;
current_location.update_lineno(284);
/* LibItsGeoNetworking_Pics.ttcn, line 284 */
modulepar_PICS__GN__TSB__DST = TRUE;
current_location.update_lineno(290);
/* LibItsGeoNetworking_Pics.ttcn, line 290 */
modulepar_PICS__GN__TSB__FWD = TRUE;
current_location.update_lineno(296);
/* LibItsGeoNetworking_Pics.ttcn, line 296 */
modulepar_PICS__GN__LS__REQ__SRC = TRUE;
current_location.update_lineno(302);
/* LibItsGeoNetworking_Pics.ttcn, line 302 */
modulepar_PICS__GN__LS__REQ__RETRANSMISSION = TRUE;
current_location.update_lineno(308);
/* LibItsGeoNetworking_Pics.ttcn, line 308 */
modulepar_PICS__GN__LS__REQ__DST = TRUE;
current_location.update_lineno(314);
/* LibItsGeoNetworking_Pics.ttcn, line 314 */
modulepar_PICS__GN__LS__REP__DST = TRUE;
current_location.update_lineno(320);
/* LibItsGeoNetworking_Pics.ttcn, line 320 */
modulepar_PICS__GN__LS__FWD = TRUE;
current_location.update_lineno(326);
/* LibItsGeoNetworking_Pics.ttcn, line 326 */
modulepar_PICS__GN__ADDR__AUTO = TRUE;
current_location.update_lineno(332);
/* LibItsGeoNetworking_Pics.ttcn, line 332 */
modulepar_PICS__GN__ADDR__MANAGED = TRUE;
current_location.update_lineno(338);
/* LibItsGeoNetworking_Pics.ttcn, line 338 */
modulepar_PICS__GN__ADDR__ANONYMOUS = TRUE;
current_location.update_lineno(344);
/* LibItsGeoNetworking_Pics.ttcn, line 344 */
modulepar_PICS__GN__DAD = TRUE;
current_location.update_lineno(350);
/* LibItsGeoNetworking_Pics.ttcn, line 350 */
modulepar_PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER = 3;
current_location.update_lineno(355);
/* LibItsGeoNetworking_Pics.ttcn, line 355 */
modulepar_PICS__IUT__MAC__ADDRESS = os_0;
}

static void post_init_module()
{
TTCN_Location current_location("LibItsGeoNetworking_Pics.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "LibItsGeoNetworking_Pics");
LibItsGeoNetworking__TypesAndValues::module_object.post_init_module();
}

static boolean set_module_param(Module_Param& param)
{
const char* const par_name = param.get_id()->get_current_name();
if (!strcmp(par_name, "PICS_GN_LOCAL_GN_ADDR")) {
modulepar_PICS__GN__LOCAL__GN__ADDR.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LOCAL_ADDR_CONF_METHOD")) {
modulepar_PICS__GN__LOCAL__ADDR__CONF__METHOD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_IS_MOBILE")) {
modulepar_PICS__GN__IS__MOBILE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MINIMUM_UPDATE_FREQUENCY_LPV")) {
modulepar_PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MAX_SDU_SIZE")) {
modulepar_PICS__GN__MAX__SDU__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MAX_GN_HEADER_SIZE")) {
modulepar_PICS__GN__MAX__GN__HEADER__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LIFETIME_LOC_TE")) {
modulepar_PICS__GN__LIFETIME__LOC__TE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_SECURITY")) {
modulepar_PICS__GN__SECURITY.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_MAX_RETRANS")) {
modulepar_PICS__GN__LOCATION__SERVICE__MAX__RETRANS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_RETRANSMIT_TIMER")) {
modulepar_PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_PACKET_BUFFER_SIZE")) {
modulepar_PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BEACON_SERVICE_RETRANSMIT_TIMER")) {
modulepar_PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BEACON_SERVICE_MAX_JITTER")) {
modulepar_PICS__GN__BEACON__SERVICE__MAX__JITTER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_DEFAULT_HOP_LIMIT")) {
modulepar_PICS__GN__DEFAULT__HOP__LIMIT.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MAX_PACKET_LIFETIME")) {
modulepar_PICS__GN__MAX__PACKET__LIFETIME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MAX_GEO_AREA_SIZE")) {
modulepar_PICS__GN__MAX__GEO__AREA__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_MIN_PACKET_REPETITION_INTERVAL")) {
modulepar_PICS__GN__MIN__PACKET__REPETITION__INTERVAL.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_FORWARDING_ALGORITHM")) {
modulepar_PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM")) {
modulepar_PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_CBF_MIN_TIME")) {
modulepar_PICS__GN__GEOUNICAST__CBF__MIN__TIME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_CBF_MAX_TIME")) {
modulepar_PICS__GN__GEOUNICAST__CBF__MAX__TIME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_CBF_MIN_TIME")) {
modulepar_PICS__GN__GEOBROADCAST__CBF__MIN__TIME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_CBF_MAX_TIME")) {
modulepar_PICS__GN__GEOBROADCAST__CBF__MAX__TIME.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_DEFAULT_MAX_COMMUNICATION_RANGE")) {
modulepar_PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_UC_FORWARDING_PACKET_BUFFER_SIZE")) {
modulepar_PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BC_FORWARDING_PACKET_BUFFER_SIZE")) {
modulepar_PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BASIC_HEADER")) {
modulepar_PICS__GN__BASIC__HEADER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_COMMON_HEADER")) {
modulepar_PICS__GN__COMMON__HEADER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BEACON_SRC")) {
modulepar_PICS__GN__BEACON__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_BEACON_DST")) {
modulepar_PICS__GN__BEACON__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GUC_SRC")) {
modulepar_PICS__GN__GUC__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GUC_DST")) {
modulepar_PICS__GN__GUC__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GUC_FWD")) {
modulepar_PICS__GN__GUC__FWD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GBC_SRC")) {
modulepar_PICS__GN__GBC__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GBC_DST")) {
modulepar_PICS__GN__GBC__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GBC_FWD")) {
modulepar_PICS__GN__GBC__FWD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GAC_SRC")) {
modulepar_PICS__GN__GAC__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GAC_DST")) {
modulepar_PICS__GN__GAC__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_GAC_FWD")) {
modulepar_PICS__GN__GAC__FWD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_SHB_SRC")) {
modulepar_PICS__GN__SHB__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_SHB_DST")) {
modulepar_PICS__GN__SHB__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_TSB_SRC")) {
modulepar_PICS__GN__TSB__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_TSB_DST")) {
modulepar_PICS__GN__TSB__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_TSB_FWD")) {
modulepar_PICS__GN__TSB__FWD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_SRC")) {
modulepar_PICS__GN__LS__REQ__SRC.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_RETRANSMISSION")) {
modulepar_PICS__GN__LS__REQ__RETRANSMISSION.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_DST")) {
modulepar_PICS__GN__LS__REQ__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LS_REP_DST")) {
modulepar_PICS__GN__LS__REP__DST.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_LS_FWD")) {
modulepar_PICS__GN__LS__FWD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_ADDR_AUTO")) {
modulepar_PICS__GN__ADDR__AUTO.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_ADDR_MANAGED")) {
modulepar_PICS__GN__ADDR__MANAGED.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_ADDR_ANONYMOUS")) {
modulepar_PICS__GN__ADDR__ANONYMOUS.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_DAD")) {
modulepar_PICS__GN__DAD.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_GN_ADVANCED_BC_FORWARDING_MAX_COUNTER")) {
modulepar_PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER.set_param(param);
return TRUE;
} else if (!strcmp(par_name, "PICS_IUT_MAC_ADDRESS")) {
modulepar_PICS__IUT__MAC__ADDRESS.set_param(param);
return TRUE;
} else return FALSE;
}

static Module_Param* get_module_param(Module_Param_Name& param_name)
{
const char* const par_name = param_name.get_current_name();
if (!strcmp(par_name, "PICS_GN_LOCAL_GN_ADDR")) {
return modulepar_PICS__GN__LOCAL__GN__ADDR.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LOCAL_ADDR_CONF_METHOD")) {
return modulepar_PICS__GN__LOCAL__ADDR__CONF__METHOD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_IS_MOBILE")) {
return modulepar_PICS__GN__IS__MOBILE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MINIMUM_UPDATE_FREQUENCY_LPV")) {
return modulepar_PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MAX_SDU_SIZE")) {
return modulepar_PICS__GN__MAX__SDU__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MAX_GN_HEADER_SIZE")) {
return modulepar_PICS__GN__MAX__GN__HEADER__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LIFETIME_LOC_TE")) {
return modulepar_PICS__GN__LIFETIME__LOC__TE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_SECURITY")) {
return modulepar_PICS__GN__SECURITY.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_MAX_RETRANS")) {
return modulepar_PICS__GN__LOCATION__SERVICE__MAX__RETRANS.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_RETRANSMIT_TIMER")) {
return modulepar_PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LOCATION_SERVICE_PACKET_BUFFER_SIZE")) {
return modulepar_PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BEACON_SERVICE_RETRANSMIT_TIMER")) {
return modulepar_PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BEACON_SERVICE_MAX_JITTER")) {
return modulepar_PICS__GN__BEACON__SERVICE__MAX__JITTER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_DEFAULT_HOP_LIMIT")) {
return modulepar_PICS__GN__DEFAULT__HOP__LIMIT.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MAX_PACKET_LIFETIME")) {
return modulepar_PICS__GN__MAX__PACKET__LIFETIME.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MAX_GEO_AREA_SIZE")) {
return modulepar_PICS__GN__MAX__GEO__AREA__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_MIN_PACKET_REPETITION_INTERVAL")) {
return modulepar_PICS__GN__MIN__PACKET__REPETITION__INTERVAL.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_FORWARDING_ALGORITHM")) {
return modulepar_PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM")) {
return modulepar_PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_CBF_MIN_TIME")) {
return modulepar_PICS__GN__GEOUNICAST__CBF__MIN__TIME.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOUNICAST_CBF_MAX_TIME")) {
return modulepar_PICS__GN__GEOUNICAST__CBF__MAX__TIME.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_CBF_MIN_TIME")) {
return modulepar_PICS__GN__GEOBROADCAST__CBF__MIN__TIME.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GEOBROADCAST_CBF_MAX_TIME")) {
return modulepar_PICS__GN__GEOBROADCAST__CBF__MAX__TIME.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_DEFAULT_MAX_COMMUNICATION_RANGE")) {
return modulepar_PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_UC_FORWARDING_PACKET_BUFFER_SIZE")) {
return modulepar_PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BC_FORWARDING_PACKET_BUFFER_SIZE")) {
return modulepar_PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BASIC_HEADER")) {
return modulepar_PICS__GN__BASIC__HEADER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_COMMON_HEADER")) {
return modulepar_PICS__GN__COMMON__HEADER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BEACON_SRC")) {
return modulepar_PICS__GN__BEACON__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_BEACON_DST")) {
return modulepar_PICS__GN__BEACON__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GUC_SRC")) {
return modulepar_PICS__GN__GUC__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GUC_DST")) {
return modulepar_PICS__GN__GUC__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GUC_FWD")) {
return modulepar_PICS__GN__GUC__FWD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GBC_SRC")) {
return modulepar_PICS__GN__GBC__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GBC_DST")) {
return modulepar_PICS__GN__GBC__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GBC_FWD")) {
return modulepar_PICS__GN__GBC__FWD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GAC_SRC")) {
return modulepar_PICS__GN__GAC__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GAC_DST")) {
return modulepar_PICS__GN__GAC__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_GAC_FWD")) {
return modulepar_PICS__GN__GAC__FWD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_SHB_SRC")) {
return modulepar_PICS__GN__SHB__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_SHB_DST")) {
return modulepar_PICS__GN__SHB__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_TSB_SRC")) {
return modulepar_PICS__GN__TSB__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_TSB_DST")) {
return modulepar_PICS__GN__TSB__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_TSB_FWD")) {
return modulepar_PICS__GN__TSB__FWD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_SRC")) {
return modulepar_PICS__GN__LS__REQ__SRC.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_RETRANSMISSION")) {
return modulepar_PICS__GN__LS__REQ__RETRANSMISSION.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LS_REQ_DST")) {
return modulepar_PICS__GN__LS__REQ__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LS_REP_DST")) {
return modulepar_PICS__GN__LS__REP__DST.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_LS_FWD")) {
return modulepar_PICS__GN__LS__FWD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_ADDR_AUTO")) {
return modulepar_PICS__GN__ADDR__AUTO.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_ADDR_MANAGED")) {
return modulepar_PICS__GN__ADDR__MANAGED.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_ADDR_ANONYMOUS")) {
return modulepar_PICS__GN__ADDR__ANONYMOUS.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_DAD")) {
return modulepar_PICS__GN__DAD.get_param(param_name);
} else if (!strcmp(par_name, "PICS_GN_ADVANCED_BC_FORWARDING_MAX_COUNTER")) {
return modulepar_PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER.get_param(param_name);
} else if (!strcmp(par_name, "PICS_IUT_MAC_ADDRESS")) {
return modulepar_PICS__IUT__MAC__ADDRESS.get_param(param_name);
} else return NULL;
}

static void log_module_param()
{
TTCN_Logger::log_event_str("PICS_GN_LOCAL_GN_ADDR := ");
PICS__GN__LOCAL__GN__ADDR.log();
TTCN_Logger::log_event_str(", PICS_GN_LOCAL_ADDR_CONF_METHOD := ");
PICS__GN__LOCAL__ADDR__CONF__METHOD.log();
TTCN_Logger::log_event_str(", PICS_GN_IS_MOBILE := ");
PICS__GN__IS__MOBILE.log();
TTCN_Logger::log_event_str(", PICS_GN_MINIMUM_UPDATE_FREQUENCY_LPV := ");
PICS__GN__MINIMUM__UPDATE__FREQUENCY__LPV.log();
TTCN_Logger::log_event_str(", PICS_GN_MAX_SDU_SIZE := ");
PICS__GN__MAX__SDU__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_MAX_GN_HEADER_SIZE := ");
PICS__GN__MAX__GN__HEADER__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_LIFETIME_LOC_TE := ");
PICS__GN__LIFETIME__LOC__TE.log();
TTCN_Logger::log_event_str(", PICS_GN_SECURITY := ");
PICS__GN__SECURITY.log();
TTCN_Logger::log_event_str(", PICS_GN_LOCATION_SERVICE_MAX_RETRANS := ");
PICS__GN__LOCATION__SERVICE__MAX__RETRANS.log();
TTCN_Logger::log_event_str(", PICS_GN_LOCATION_SERVICE_RETRANSMIT_TIMER := ");
PICS__GN__LOCATION__SERVICE__RETRANSMIT__TIMER.log();
TTCN_Logger::log_event_str(", PICS_GN_LOCATION_SERVICE_PACKET_BUFFER_SIZE := ");
PICS__GN__LOCATION__SERVICE__PACKET__BUFFER__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_BEACON_SERVICE_RETRANSMIT_TIMER := ");
PICS__GN__BEACON__SERVICE__RETRANSMIT__TIMER.log();
TTCN_Logger::log_event_str(", PICS_GN_BEACON_SERVICE_MAX_JITTER := ");
PICS__GN__BEACON__SERVICE__MAX__JITTER.log();
TTCN_Logger::log_event_str(", PICS_GN_DEFAULT_HOP_LIMIT := ");
PICS__GN__DEFAULT__HOP__LIMIT.log();
TTCN_Logger::log_event_str(", PICS_GN_MAX_PACKET_LIFETIME := ");
PICS__GN__MAX__PACKET__LIFETIME.log();
TTCN_Logger::log_event_str(", PICS_GN_MAX_GEO_AREA_SIZE := ");
PICS__GN__MAX__GEO__AREA__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_MIN_PACKET_REPETITION_INTERVAL := ");
PICS__GN__MIN__PACKET__REPETITION__INTERVAL.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOUNICAST_FORWARDING_ALGORITHM := ");
PICS__GN__GEOUNICAST__FORWARDING__ALGORITHM.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOBROADCAST_FORWARDING_ALGORITHM := ");
PICS__GN__GEOBROADCAST__FORWARDING__ALGORITHM.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOUNICAST_CBF_MIN_TIME := ");
PICS__GN__GEOUNICAST__CBF__MIN__TIME.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOUNICAST_CBF_MAX_TIME := ");
PICS__GN__GEOUNICAST__CBF__MAX__TIME.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOBROADCAST_CBF_MIN_TIME := ");
PICS__GN__GEOBROADCAST__CBF__MIN__TIME.log();
TTCN_Logger::log_event_str(", PICS_GN_GEOBROADCAST_CBF_MAX_TIME := ");
PICS__GN__GEOBROADCAST__CBF__MAX__TIME.log();
TTCN_Logger::log_event_str(", PICS_GN_DEFAULT_MAX_COMMUNICATION_RANGE := ");
PICS__GN__DEFAULT__MAX__COMMUNICATION__RANGE.log();
TTCN_Logger::log_event_str(", PICS_GN_UC_FORWARDING_PACKET_BUFFER_SIZE := ");
PICS__GN__UC__FORWARDING__PACKET__BUFFER__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_BC_FORWARDING_PACKET_BUFFER_SIZE := ");
PICS__GN__BC__FORWARDING__PACKET__BUFFER__SIZE.log();
TTCN_Logger::log_event_str(", PICS_GN_BASIC_HEADER := ");
PICS__GN__BASIC__HEADER.log();
TTCN_Logger::log_event_str(", PICS_GN_COMMON_HEADER := ");
PICS__GN__COMMON__HEADER.log();
TTCN_Logger::log_event_str(", PICS_GN_BEACON_SRC := ");
PICS__GN__BEACON__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_BEACON_DST := ");
PICS__GN__BEACON__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_GUC_SRC := ");
PICS__GN__GUC__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_GUC_DST := ");
PICS__GN__GUC__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_GUC_FWD := ");
PICS__GN__GUC__FWD.log();
TTCN_Logger::log_event_str(", PICS_GN_GBC_SRC := ");
PICS__GN__GBC__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_GBC_DST := ");
PICS__GN__GBC__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_GBC_FWD := ");
PICS__GN__GBC__FWD.log();
TTCN_Logger::log_event_str(", PICS_GN_GAC_SRC := ");
PICS__GN__GAC__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_GAC_DST := ");
PICS__GN__GAC__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_GAC_FWD := ");
PICS__GN__GAC__FWD.log();
TTCN_Logger::log_event_str(", PICS_GN_SHB_SRC := ");
PICS__GN__SHB__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_SHB_DST := ");
PICS__GN__SHB__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_TSB_SRC := ");
PICS__GN__TSB__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_TSB_DST := ");
PICS__GN__TSB__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_TSB_FWD := ");
PICS__GN__TSB__FWD.log();
TTCN_Logger::log_event_str(", PICS_GN_LS_REQ_SRC := ");
PICS__GN__LS__REQ__SRC.log();
TTCN_Logger::log_event_str(", PICS_GN_LS_REQ_RETRANSMISSION := ");
PICS__GN__LS__REQ__RETRANSMISSION.log();
TTCN_Logger::log_event_str(", PICS_GN_LS_REQ_DST := ");
PICS__GN__LS__REQ__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_LS_REP_DST := ");
PICS__GN__LS__REP__DST.log();
TTCN_Logger::log_event_str(", PICS_GN_LS_FWD := ");
PICS__GN__LS__FWD.log();
TTCN_Logger::log_event_str(", PICS_GN_ADDR_AUTO := ");
PICS__GN__ADDR__AUTO.log();
TTCN_Logger::log_event_str(", PICS_GN_ADDR_MANAGED := ");
PICS__GN__ADDR__MANAGED.log();
TTCN_Logger::log_event_str(", PICS_GN_ADDR_ANONYMOUS := ");
PICS__GN__ADDR__ANONYMOUS.log();
TTCN_Logger::log_event_str(", PICS_GN_DAD := ");
PICS__GN__DAD.log();
TTCN_Logger::log_event_str(", PICS_GN_ADVANCED_BC_FORWARDING_MAX_COUNTER := ");
PICS__GN__ADVANCED__BC__FORWARDING__MAX__COUNTER.log();
TTCN_Logger::log_event_str(", PICS_IUT_MAC_ADDRESS := ");
PICS__IUT__MAC__ADDRESS.log();
}


} /* end of namespace */
