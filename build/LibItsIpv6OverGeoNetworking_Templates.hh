// This C++ header file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/5 R4A
// for Aitor (aitorkun@aitorkun-HP-EliteBook-2530p) on Tue Feb 16 10:46:43 2016

// Copyright (c) 2000-2015 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

#ifndef LibItsIpv6OverGeoNetworking__Templates_HH
#define LibItsIpv6OverGeoNetworking__Templates_HH

#ifdef TITAN_RUNTIME_2
#error Generated code does not match with used runtime.\
 Code was generated without -R option but -DTITAN_RUNTIME_2 was used.
#endif

/* Header file includes */

#include "LibItsIpv6OverGeoNetworking_TestSystem.hh"

#if TTCN3_VERSION != 50400
#error Version mismatch detected.\
 Please check the version of the TTCN-3 compiler and the base library.
#endif

#ifndef LINUX
#error This file should be compiled on LINUX
#endif

namespace LibItsIpv6OverGeoNetworking__Templates {

/* Function prototypes */

extern LibItsIpv6OverGeoNetworking__TestSystem::IPv6OverGeoNetworkingReq_template m__ipv6OverGeoNwReq(const CHARSTRING_template& p__interface, const OCTETSTRING_template& p__srcMacAddr, const OCTETSTRING_template& p__dstMacAddr, const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template& p__ipv6Packet);
extern LibItsIpv6OverGeoNetworking__TestSystem::IPv6OverGeoNetworkingInd_template mw__ipv6OverGeoNwInd(const CHARSTRING_template& p__interface, const OCTETSTRING_template& p__srcMacAddr, const OCTETSTRING_template& p__dstMacAddr, const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template& p__ipv6Packet);
extern LibItsGeoNetworking__TypesAndValues::Payload_template m__ipv6Payload(const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template& p__ipv6Packet);
extern LibItsGeoNetworking__TypesAndValues::Payload_template mw__ipv6Payload(const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template& p__ipv6Packet);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template m__ipv6Packet(const OCTETSTRING_template& p__srcAddr, const OCTETSTRING_template& p__dstAddr, const INTEGER_template& p__nextHdr, const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template& p__payload);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Packet_template mw__ipv6Packet(const OCTETSTRING_template& p__srcAddr, const OCTETSTRING_template& p__dstAddr, const INTEGER_template& p__nextHdr, const LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template& p__payload);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Header_template m__ipv6Header(const OCTETSTRING_template& p__srcAddr, const OCTETSTRING_template& p__dstAddr, const INTEGER_template& p__nextHdr);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Header_template mw__ipv6Header(const OCTETSTRING_template& p__srcAddr, const OCTETSTRING_template& p__dstAddr, const INTEGER_template& p__nextHdr);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template m__rtAdvWithOptions(const LibItsIpv6OverGeoNetworking__TypesAndValues::RtAdvOptions_template& p__rtAdvOptions);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template mw__rtAdvWithOptions(const LibItsIpv6OverGeoNetworking__TypesAndValues::RtAdvOptions_template& p__rtAdvOptions);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template m__octetstringPayload(const OCTETSTRING_template& p__payload);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::Ipv6Payload_template mw__octetstringPayload(const OCTETSTRING_template& p__payload);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::RtAdvOptions_template m__rtAdvOpt__prefixOpt(const INTEGER_template& p__prefixLength, const INTEGER_template& p__lFlag, const INTEGER_template& p__aFlag, const INTEGER_template& p__validLifetime, const INTEGER_template& p__preferredLifetime, const OCTETSTRING_template& p__prefix);
extern LibItsIpv6OverGeoNetworking__TypesAndValues::PrefixInfo_template m__prefixInfo(const INTEGER_template& p__prefixLength, const INTEGER_template& p__lFlag, const INTEGER_template& p__aFlag, const INTEGER_template& p__validLifetime, const INTEGER_template& p__preferredLifetime, const OCTETSTRING_template& p__prefix);

/* Global variable declarations */

extern const LibItsIpv6OverGeoNetworking__TypesAndValues::AcGn6Primitive_template& m__acGetInterfaceInfos;
extern const LibItsIpv6OverGeoNetworking__TypesAndValues::AcGn6Response_template& mw__acInterfaceInfos;
extern TTCN_Module module_object;

} /* end of namespace */

#endif
