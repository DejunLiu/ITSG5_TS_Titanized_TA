/**
 *    @author     ETSI / STF449
 *    @version     $URL: file:///D:/RepositoriesNew/LibIts/trunk/ttcn/DENM/LibItsDenm_TestSystem.ttcn $
 *                 $Id: LibItsDenm_TestSystem.ttcn 1088 2015-01-12 13:22:58Z berge $
 *    @desc        Test System module for ITS DENM
 *
 *            This file is compatible with the Titan compiler R4C
 *
 *
 */
module LibItsDenm_TestSystem {
    
    // LibCommon
    import from LibCommon_Time {modulepar all};
    import from LibCommon_Sync all;
    import from LibCommon_BasicTypesAndValues all;

    // LibIts
    import from DENM_PDU_Descriptions language "ASN.1:1997" all;    
    import from ITS_Container language "ASN.1:1997" all;
    
    // LibItsCommon
    import from LibItsCommon_TestSystem all;
    import from LibItsCommon_TypesAndValues all;
    
    // LibItsDenm
    import from LibItsDenm_TypesAndValues all;

	//User ports
	
	import from General_Types all;
	import from TTCN_EncDec all;
    
    group portDefinitions {
    
        /**
         * @desc Upper Tester port
         */
        type port UpperTesterDENMPort message {
            out 
                UtInitialize, UtDenmTrigger, UtDenmUpdate, UtDenmTermination, UtChangePosition, UtChangePseudonym;
            in 
                UtInitializeResult, UtDenmTriggerResult, UtDenmUpdateResult, UtDenmTerminationResult,
                UtChangePositionResult, UtChangePseudonymResult, UtDenmEventInd;
//        } with  {extension "internal" 

/*with { extension "user UDPasp_PT 
					out(
						UtInitialize 		-> 	ASP_UDP_message: function(enc_UtInitialize);
						UtDenmTrigger 		-> 	ASP_UDP_message: function(enc_UtDenmTrigger);
						UtDenmUpdate 		-> 	ASP_UDP_message: function(enc_UtDenmUpdate);
						UtDenmTermination 	-> 	ASP_UDP_message: function(enc_UtDenmTermination);
						UtChangePosition 	-> 	ASP_UDP_message: function(enc_UtChangePosition); 
						UtChangePseudonym 	-> 	ASP_UDP_message: function(enc_UtChangePseudonym)
					)
					in(
						ASP_UDP_open_result -> 	-: discard;
						ASP_UDP				-> 	UtInitializeResult: function(dec_UtInitializeResult),
												UtDenmTriggerResult: function(dec_UtDenmTriggerResult),
												UtDenmUpdateResult: function(dec_UtDenmUpdateResult),
												UtDenmTerminationResult: function(dec_UtDenmTerminationResult),
												UtChangePositionResult: function(dec_UtChangePositionResult),
												UtChangePseudonymResult: function(dec_UtChangePseudonymResult),
												UtDenmEventInd: function(dec_UtDenmEventInd);
						ASP_UDP_message		-> 	UtInitializeResult: function(dec_UtInitializeResult_message),
												UtDenmTriggerResult: function(dec_UtDenmTriggerResult_message),
												UtDenmUpdateResult: function(dec_UtDenmUpdateResult_message),
												UtDenmTerminationResult: function(dec_UtDenmTerminationResult_message),
												UtChangePositionResult: function(dec_UtChangePositionResult_message),
												UtChangePseudonymResult: function(dec_UtChangePseudonymResult_message),
												UtDenmEventInd: function(dec_UtDenmEventInd_message)
					)"*/

		} // end UpperTesterDENMPort
        
    } // end portDefinitions
    group interfacePorts {
        
        group facilityPorts {
            
            group fa1Ports {
    
                /**
                 * @desc FA1 DENM Port (DENM/BTP/GeoNet/G5) 
                 */
                type port DenmPort message {
                    in DenmInd;
                    out DenmReq;
//                } with  {extension "internal" 

/* with { extension "user LANL2asp_PT
						out(
							DenmReq -> ASP_LANL2: function(enc_DenmReq) 
						)
						in(
							ASP_LANL2				-> DenmInd: function(dec_DenmInd);
							ASP_LANL2_Error			-> -: discard;
							ASP_v2_LANL2			-> DenmInd: function(dec_DenmInd_v2);
							ASP_LANL2_open_result	-> -: discard;
							ASP_v2_LANL2_Error		-> -: discard
						)" */
				} // End of port DenmPort
                
            } // End of group fa1Ports
            
        } // End of group facilityPorts
    
    } // End of group interfacePorts
        
    group componentDefinitions {

        /**
         * @desc ITS System Adapter
         */
        type component ItsDenmSystem {
            
            port UpperTesterDENMPort utPort;
            
            // FA1 ports
            port DenmPort denmPort;
            
        } // end component ItsAdapter
        
    } // End of group componentDefinitions
    
    /**
     * @desc Test component for ITS Facility layer 
     */
    type component ItsDenm extends ItsBaseComponent {

        port UpperTesterDENMPort utPort;

        // FA1 ports
        port DenmPort denmPort;
        
        //timers
        
        //component variables
        
        //default
        var default vc_default := null;
        
        //global variables
        var SequenceNumber vc_sequenceNo := 0;
        var boolean vc_denmReceived := false;
        
        var UtDenmEventIndList vc_utEvents := {};
        
        var UtDenmActionIDList vc_utActionIDs := {};
        
    } // End of component ItsDenm

    group facilityPrimitives {
            
        group fa1Primitives {
            
            /**
             * @desc FA1 DENM Indication Primitive 
             * 
             * @member denmMsg
             */
            type record DenmInd {
                DENM    msgIn,
                UInt8   gnNextHeader,
                UInt8   gnHeaderType,
                UInt8   gnHeaderSubtype,
                UInt32  gnLifetime,
                UInt8   gnTrafficClass,
                UInt16  btpDestinationPort,
                UInt16  btpInfo
            } with { variant "" };
            
            /**
             * @desc FA1 DENM Request Primitive 
             * 
             * @member denmMsg
             */
            type record DenmReq {
                DENM msgOut
            } with { variant "" };
            
            
        } // End of group fa1Primitives
        
    } // End of group facilityPrimitives
         
} with { encode "RAW" };
// End of module LibItsDenm_TestSystem

